/* eslint-disable */

import gql from 'graphql-tag';
import { createMutationFunction, createSmartQueryOptionsFunction, createSmartSubscriptionOptionsFunction } from 'vue-apollo-smart-ops';
import { ApolloError } from 'apollo-client';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  DateTime: Date;
  Int64: BigInt;
};

export type Query = {
  __typename?: 'Query';
  aggregateAlert?: Maybe<AlertAggregateResult>;
  aggregateAssignbadge?: Maybe<AssignbadgeAggregateResult>;
  aggregateAssignment?: Maybe<AssignmentAggregateResult>;
  aggregateAttestation?: Maybe<AttestationAggregateResult>;
  aggregateBadge?: Maybe<BadgeAggregateResult>;
  aggregateBalance?: Maybe<BalanceAggregateResult>;
  aggregateBillingInfo?: Maybe<BillingInfoAggregateResult>;
  aggregateBudget?: Maybe<BudgetAggregateResult>;
  aggregateCircle?: Maybe<CircleAggregateResult>;
  aggregateCmntSection?: Maybe<CmntSectionAggregateResult>;
  aggregateComment?: Maybe<CommentAggregateResult>;
  aggregateCursor?: Maybe<CursorAggregateResult>;
  aggregateDao?: Maybe<DaoAggregateResult>;
  aggregateDaoDraft?: Maybe<DaoDraftAggregateResult>;
  aggregateDho?: Maybe<DhoAggregateResult>;
  aggregateDoccacheConfig?: Maybe<DoccacheConfigAggregateResult>;
  aggregateDocument?: Maybe<DocumentAggregateResult>;
  aggregateEdit?: Maybe<EditAggregateResult>;
  aggregateElectnRound?: Maybe<ElectnRoundAggregateResult>;
  aggregateMember?: Maybe<MemberAggregateResult>;
  aggregateMemo?: Maybe<MemoAggregateResult>;
  aggregateMultisig?: Maybe<MultisigAggregateResult>;
  aggregatePayment?: Maybe<PaymentAggregateResult>;
  aggregatePayout?: Maybe<PayoutAggregateResult>;
  aggregatePeriod?: Maybe<PeriodAggregateResult>;
  aggregatePlanManager?: Maybe<PlanManagerAggregateResult>;
  aggregatePolicy?: Maybe<PolicyAggregateResult>;
  aggregatePoll?: Maybe<PollAggregateResult>;
  aggregatePriceOffer?: Maybe<PriceOfferAggregateResult>;
  aggregatePricingPlan?: Maybe<PricingPlanAggregateResult>;
  aggregateQuestcomple?: Maybe<QuestcompleAggregateResult>;
  aggregateQuestcomplet?: Maybe<QuestcompletAggregateResult>;
  aggregateQueststart?: Maybe<QueststartAggregateResult>;
  aggregateReaction?: Maybe<ReactionAggregateResult>;
  aggregateRedemption?: Maybe<RedemptionAggregateResult>;
  aggregateRole?: Maybe<RoleAggregateResult>;
  aggregateSettings?: Maybe<SettingsAggregateResult>;
  aggregateSuspend?: Maybe<SuspendAggregateResult>;
  aggregateTimeshare?: Maybe<TimeshareAggregateResult>;
  aggregateTreasury?: Maybe<TreasuryAggregateResult>;
  aggregateTrsyPayment?: Maybe<TrsyPaymentAggregateResult>;
  aggregateTypeVersion?: Maybe<TypeVersionAggregateResult>;
  aggregateUpvtElectn?: Maybe<UpvtElectnAggregateResult>;
  aggregateVotable?: Maybe<VotableAggregateResult>;
  aggregateVote?: Maybe<VoteAggregateResult>;
  aggregateVoteGroup?: Maybe<VoteGroupAggregateResult>;
  aggregateVoteTally?: Maybe<VoteTallyAggregateResult>;
  getAlert?: Maybe<Alert>;
  getAssignbadge?: Maybe<Assignbadge>;
  getAssignment?: Maybe<Assignment>;
  getAttestation?: Maybe<Attestation>;
  getBadge?: Maybe<Badge>;
  getBalance?: Maybe<Balance>;
  getBillingInfo?: Maybe<BillingInfo>;
  getBudget?: Maybe<Budget>;
  getCircle?: Maybe<Circle>;
  getCmntSection?: Maybe<CmntSection>;
  getComment?: Maybe<Comment>;
  getCursor?: Maybe<Cursor>;
  getDao?: Maybe<Dao>;
  getDaoDraft?: Maybe<DaoDraft>;
  getDho?: Maybe<Dho>;
  getDoccacheConfig?: Maybe<DoccacheConfig>;
  /** @deprecated @id argument for get query on interface is being deprecated, it will be removed in v21.11.0, please update your query to not use that argument */
  getDocument?: Maybe<Document>;
  getEdit?: Maybe<Edit>;
  getElectnRound?: Maybe<ElectnRound>;
  getMember?: Maybe<Member>;
  getMemo?: Maybe<Memo>;
  getMultisig?: Maybe<Multisig>;
  getPayment?: Maybe<Payment>;
  getPayout?: Maybe<Payout>;
  getPeriod?: Maybe<Period>;
  getPlanManager?: Maybe<PlanManager>;
  getPolicy?: Maybe<Policy>;
  getPoll?: Maybe<Poll>;
  getPriceOffer?: Maybe<PriceOffer>;
  getPricingPlan?: Maybe<PricingPlan>;
  getQuestcomple?: Maybe<Questcomple>;
  getQuestcomplet?: Maybe<Questcomplet>;
  getQueststart?: Maybe<Queststart>;
  getReaction?: Maybe<Reaction>;
  getRedemption?: Maybe<Redemption>;
  getRole?: Maybe<Role>;
  getSettings?: Maybe<Settings>;
  getSuspend?: Maybe<Suspend>;
  getTimeshare?: Maybe<Timeshare>;
  getTreasury?: Maybe<Treasury>;
  getTrsyPayment?: Maybe<TrsyPayment>;
  getUpvtElectn?: Maybe<UpvtElectn>;
  getVote?: Maybe<Vote>;
  getVoteGroup?: Maybe<VoteGroup>;
  getVoteTally?: Maybe<VoteTally>;
  queryAlert?: Maybe<Array<Maybe<Alert>>>;
  queryAssignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  queryAssignment?: Maybe<Array<Maybe<Assignment>>>;
  queryAttestation?: Maybe<Array<Maybe<Attestation>>>;
  queryBadge?: Maybe<Array<Maybe<Badge>>>;
  queryBalance?: Maybe<Array<Maybe<Balance>>>;
  queryBillingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  queryBudget?: Maybe<Array<Maybe<Budget>>>;
  queryCircle?: Maybe<Array<Maybe<Circle>>>;
  queryCmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  queryComment?: Maybe<Array<Maybe<Comment>>>;
  queryCursor?: Maybe<Array<Maybe<Cursor>>>;
  queryDao?: Maybe<Array<Maybe<Dao>>>;
  queryDaoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  queryDho?: Maybe<Array<Maybe<Dho>>>;
  queryDoccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  queryDocument?: Maybe<Array<Maybe<Document>>>;
  queryEdit?: Maybe<Array<Maybe<Edit>>>;
  queryElectnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  queryMember?: Maybe<Array<Maybe<Member>>>;
  queryMemo?: Maybe<Array<Maybe<Memo>>>;
  queryMultisig?: Maybe<Array<Maybe<Multisig>>>;
  queryPayment?: Maybe<Array<Maybe<Payment>>>;
  queryPayout?: Maybe<Array<Maybe<Payout>>>;
  queryPeriod?: Maybe<Array<Maybe<Period>>>;
  queryPlanManager?: Maybe<Array<Maybe<PlanManager>>>;
  queryPolicy?: Maybe<Array<Maybe<Policy>>>;
  queryPoll?: Maybe<Array<Maybe<Poll>>>;
  queryPriceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
  queryPricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
  queryQuestcomple?: Maybe<Array<Maybe<Questcomple>>>;
  queryQuestcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
  queryQueststart?: Maybe<Array<Maybe<Queststart>>>;
  queryReaction?: Maybe<Array<Maybe<Reaction>>>;
  queryRedemption?: Maybe<Array<Maybe<Redemption>>>;
  queryRole?: Maybe<Array<Maybe<Role>>>;
  querySettings?: Maybe<Array<Maybe<Settings>>>;
  querySuspend?: Maybe<Array<Maybe<Suspend>>>;
  queryTimeshare?: Maybe<Array<Maybe<Timeshare>>>;
  queryTreasury?: Maybe<Array<Maybe<Treasury>>>;
  queryTrsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
  queryTypeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
  queryUpvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
  queryVotable?: Maybe<Array<Maybe<Votable>>>;
  queryVote?: Maybe<Array<Maybe<Vote>>>;
  queryVoteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
  queryVoteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type QueryAggregateAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type QueryAggregateAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type QueryAggregateAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type QueryAggregateAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type QueryAggregateBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type QueryAggregateBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type QueryAggregateBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type QueryAggregateBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type QueryAggregateCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type QueryAggregateCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QueryAggregateCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type QueryAggregateCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
};


export type QueryAggregateDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QueryAggregateDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type QueryAggregateDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
};


export type QueryAggregateDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
};


export type QueryAggregateDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type QueryAggregateEditArgs = {
  filter?: InputMaybe<EditFilter>;
};


export type QueryAggregateElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type QueryAggregateMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueryAggregateMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
};


export type QueryAggregateMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type QueryAggregatePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QueryAggregatePayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type QueryAggregatePeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type QueryAggregatePlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type QueryAggregatePolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type QueryAggregatePollArgs = {
  filter?: InputMaybe<PollFilter>;
};


export type QueryAggregatePriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type QueryAggregatePricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type QueryAggregateQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type QueryAggregateQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueryAggregateQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueryAggregateReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type QueryAggregateRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type QueryAggregateRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type QueryAggregateSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type QueryAggregateSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
};


export type QueryAggregateTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type QueryAggregateTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type QueryAggregateTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type QueryAggregateTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
};


export type QueryAggregateUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type QueryAggregateVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
};


export type QueryAggregateVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QueryAggregateVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type QueryAggregateVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};


export type QueryGetAlertArgs = {
  docId: Scalars['String'];
};


export type QueryGetAssignbadgeArgs = {
  docId: Scalars['String'];
};


export type QueryGetAssignmentArgs = {
  docId: Scalars['String'];
};


export type QueryGetAttestationArgs = {
  docId: Scalars['String'];
};


export type QueryGetBadgeArgs = {
  docId: Scalars['String'];
};


export type QueryGetBalanceArgs = {
  docId: Scalars['String'];
};


export type QueryGetBillingInfoArgs = {
  docId: Scalars['String'];
};


export type QueryGetBudgetArgs = {
  docId: Scalars['String'];
};


export type QueryGetCircleArgs = {
  docId: Scalars['String'];
};


export type QueryGetCmntSectionArgs = {
  docId: Scalars['String'];
};


export type QueryGetCommentArgs = {
  docId: Scalars['String'];
};


export type QueryGetCursorArgs = {
  id: Scalars['String'];
};


export type QueryGetDaoArgs = {
  details_daoName_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type QueryGetDaoDraftArgs = {
  docId: Scalars['String'];
};


export type QueryGetDhoArgs = {
  details_rootNode_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type QueryGetDoccacheConfigArgs = {
  id: Scalars['String'];
};


export type QueryGetDocumentArgs = {
  docId: Scalars['String'];
};


export type QueryGetEditArgs = {
  docId: Scalars['String'];
};


export type QueryGetElectnRoundArgs = {
  docId: Scalars['String'];
};


export type QueryGetMemberArgs = {
  details_member_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type QueryGetMemoArgs = {
  docId: Scalars['String'];
};


export type QueryGetMultisigArgs = {
  docId: Scalars['String'];
};


export type QueryGetPaymentArgs = {
  docId: Scalars['String'];
};


export type QueryGetPayoutArgs = {
  docId: Scalars['String'];
};


export type QueryGetPeriodArgs = {
  docId: Scalars['String'];
};


export type QueryGetPlanManagerArgs = {
  docId: Scalars['String'];
};


export type QueryGetPolicyArgs = {
  docId: Scalars['String'];
};


export type QueryGetPollArgs = {
  docId: Scalars['String'];
};


export type QueryGetPriceOfferArgs = {
  docId: Scalars['String'];
};


export type QueryGetPricingPlanArgs = {
  docId: Scalars['String'];
};


export type QueryGetQuestcompleArgs = {
  docId: Scalars['String'];
};


export type QueryGetQuestcompletArgs = {
  docId: Scalars['String'];
};


export type QueryGetQueststartArgs = {
  docId: Scalars['String'];
};


export type QueryGetReactionArgs = {
  docId: Scalars['String'];
};


export type QueryGetRedemptionArgs = {
  docId: Scalars['String'];
};


export type QueryGetRoleArgs = {
  docId: Scalars['String'];
};


export type QueryGetSettingsArgs = {
  docId: Scalars['String'];
};


export type QueryGetSuspendArgs = {
  docId: Scalars['String'];
};


export type QueryGetTimeshareArgs = {
  docId: Scalars['String'];
};


export type QueryGetTreasuryArgs = {
  docId: Scalars['String'];
};


export type QueryGetTrsyPaymentArgs = {
  docId: Scalars['String'];
};


export type QueryGetUpvtElectnArgs = {
  docId: Scalars['String'];
};


export type QueryGetVoteArgs = {
  docId: Scalars['String'];
};


export type QueryGetVoteGroupArgs = {
  docId: Scalars['String'];
};


export type QueryGetVoteTallyArgs = {
  docId: Scalars['String'];
};


export type QueryQueryAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};


export type QueryQueryAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type QueryQueryAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type QueryQueryAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};


export type QueryQueryBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type QueryQueryBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};


export type QueryQueryBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type QueryQueryBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};


export type QueryQueryCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type QueryQueryCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QueryQueryCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type QueryQueryCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CursorOrder>;
};


export type QueryQueryDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type QueryQueryDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type QueryQueryDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DhoOrder>;
};


export type QueryQueryDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};


export type QueryQueryDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type QueryQueryEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EditOrder>;
};


export type QueryQueryElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type QueryQueryMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueryQueryMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemoOrder>;
};


export type QueryQueryMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};


export type QueryQueryPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QueryQueryPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type QueryQueryPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type QueryQueryPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type QueryQueryPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PolicyOrder>;
};


export type QueryQueryPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PollOrder>;
};


export type QueryQueryPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type QueryQueryPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type QueryQueryQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type QueryQueryQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueryQueryQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueryQueryReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};


export type QueryQueryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type QueryQueryRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};


export type QueryQuerySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type QueryQuerySuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SuspendOrder>;
};


export type QueryQueryTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type QueryQueryTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type QueryQueryTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type QueryQueryTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TypeVersionOrder>;
};


export type QueryQueryUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type QueryQueryVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VotableOrder>;
};


export type QueryQueryVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type QueryQueryVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type QueryQueryVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type AlertFilter = {
  and?: InputMaybe<Array<InputMaybe<AlertFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_content_s?: InputMaybe<StringRegExpFilter>;
  details_enabled_i?: InputMaybe<Int64Filter>;
  details_level_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_level_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AlertHasFilter>>>;
  not?: InputMaybe<AlertFilter>;
  or?: InputMaybe<Array<InputMaybe<AlertFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export type StringExactFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']>;
  ge?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  le?: InputMaybe<Scalars['String']>;
  lt?: InputMaybe<Scalars['String']>;
};

export type StringRange = {
  max: Scalars['String'];
  min: Scalars['String'];
};

export type DateTimeFilter = {
  between?: InputMaybe<DateTimeRange>;
  eq?: InputMaybe<Scalars['DateTime']>;
  ge?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  le?: InputMaybe<Scalars['DateTime']>;
  lt?: InputMaybe<Scalars['DateTime']>;
};

export type DateTimeRange = {
  max: Scalars['DateTime'];
  min: Scalars['DateTime'];
};

export type StringExactFilter_StringRegExpFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']>;
  ge?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  le?: InputMaybe<Scalars['String']>;
  lt?: InputMaybe<Scalars['String']>;
  regexp?: InputMaybe<Scalars['String']>;
};

export type StringRegExpFilter = {
  regexp?: InputMaybe<Scalars['String']>;
};

export type Int64Filter = {
  between?: InputMaybe<Int64Range>;
  eq?: InputMaybe<Scalars['Int64']>;
  ge?: InputMaybe<Scalars['Int64']>;
  gt?: InputMaybe<Scalars['Int64']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int64']>>>;
  le?: InputMaybe<Scalars['Int64']>;
  lt?: InputMaybe<Scalars['Int64']>;
};

export type Int64Range = {
  max: Scalars['Int64'];
  min: Scalars['Int64'];
};

export enum AlertHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsContentS = 'details_content_s',
  DetailsEnabledI = 'details_enabled_i',
  DetailsLevelN = 'details_level_n',
  DetailsLevelS = 'details_level_s',
  DocId = 'docId',
  Notifies = 'notifies',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AlertAggregateResult = {
  __typename?: 'AlertAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_content_sMax?: Maybe<Scalars['String']>;
  details_content_sMin?: Maybe<Scalars['String']>;
  details_enabled_iAvg?: Maybe<Scalars['Float']>;
  details_enabled_iMax?: Maybe<Scalars['Int64']>;
  details_enabled_iMin?: Maybe<Scalars['Int64']>;
  details_enabled_iSum?: Maybe<Scalars['Int64']>;
  details_level_nMax?: Maybe<Scalars['String']>;
  details_level_nMin?: Maybe<Scalars['String']>;
  details_level_sMax?: Maybe<Scalars['String']>;
  details_level_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type AssignbadgeFilter = {
  and?: InputMaybe<Array<InputMaybe<AssignbadgeFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_badge_c?: InputMaybe<StringExactFilter>;
  details_badge_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_electionId_i?: InputMaybe<Int64Filter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_endTime_t?: InputMaybe<DateTimeFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_startTime_t?: InputMaybe<DateTimeFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AssignbadgeHasFilter>>>;
  not?: InputMaybe<AssignbadgeFilter>;
  or?: InputMaybe<Array<InputMaybe<AssignbadgeFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_category_s?: InputMaybe<StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export type StringTermFilter = {
  allofterms?: InputMaybe<Scalars['String']>;
  anyofterms?: InputMaybe<Scalars['String']>;
};

export enum AssignbadgeHasFilter {
  Badge = 'badge',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeC = 'details_badge_c',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsElectionIdI = 'details_electionId_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsEndTimeT = 'details_endTime_t',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStartTimeT = 'details_startTime_t',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemCategoryS = 'system_category_s',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type AssignbadgeAggregateResult = {
  __typename?: 'AssignbadgeAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_assignee_nMax?: Maybe<Scalars['String']>;
  details_assignee_nMin?: Maybe<Scalars['String']>;
  details_badge_cMax?: Maybe<Scalars['String']>;
  details_badge_cMin?: Maybe<Scalars['String']>;
  details_badge_iAvg?: Maybe<Scalars['Float']>;
  details_badge_iMax?: Maybe<Scalars['Int64']>;
  details_badge_iMin?: Maybe<Scalars['Int64']>;
  details_badge_iSum?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_electionId_iAvg?: Maybe<Scalars['Float']>;
  details_electionId_iMax?: Maybe<Scalars['Int64']>;
  details_electionId_iMin?: Maybe<Scalars['Int64']>;
  details_electionId_iSum?: Maybe<Scalars['Int64']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_endTime_tMax?: Maybe<Scalars['DateTime']>;
  details_endTime_tMin?: Maybe<Scalars['DateTime']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_startTime_tMax?: Maybe<Scalars['DateTime']>;
  details_startTime_tMin?: Maybe<Scalars['DateTime']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_category_sMax?: Maybe<Scalars['String']>;
  system_category_sMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  system_proposer_nMax?: Maybe<Scalars['String']>;
  system_proposer_nMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type AssignmentFilter = {
  and?: InputMaybe<Array<InputMaybe<AssignmentFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_approvedDeferredPercX100_i?: InputMaybe<Int64Filter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_husdSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_instantHusdPercX100_i?: InputMaybe<Int64Filter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_pegSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_role_c?: InputMaybe<StringExactFilter>;
  details_role_i?: InputMaybe<Int64Filter>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_suspensionDate_t?: InputMaybe<DateTimeFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<StringTermFilter>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_withdrawalDate_t?: InputMaybe<DateTimeFilter>;
  details_withdrawalNotes_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AssignmentHasFilter>>>;
  not?: InputMaybe<AssignmentFilter>;
  or?: InputMaybe<Array<InputMaybe<AssignmentFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AssignmentHasFilter {
  Assignee = 'assignee',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Claimed = 'claimed',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Curtimeshare = 'curtimeshare',
  Dao = 'dao',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsApprovedDeferredPercX100I = 'details_approvedDeferredPercX100_i',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdSalaryPerPhaseA = 'details_husdSalaryPerPhase_a',
  DetailsHvoiceSalaryPerPhaseA = 'details_hvoiceSalaryPerPhase_a',
  DetailsHyphaSalaryPerPhaseA = 'details_hyphaSalaryPerPhase_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOwnerN = 'details_owner_n',
  DetailsPegSalaryPerPeriodA = 'details_pegSalaryPerPeriod_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRewardSalaryPerPeriodA = 'details_rewardSalaryPerPeriod_a',
  DetailsRoleC = 'details_role_c',
  DetailsRoleI = 'details_role_i',
  DetailsSeedsEscrowSalaryPerPhaseA = 'details_seedsEscrowSalaryPerPhase_a',
  DetailsSeedsInstantSalaryPerPhaseA = 'details_seedsInstantSalaryPerPhase_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdSalaryValuePerPhaseA = 'details_usdSalaryValuePerPhase_a',
  DetailsVoiceSalaryPerPeriodA = 'details_voiceSalaryPerPeriod_a',
  DetailsWithdrawalDateT = 'details_withdrawalDate_t',
  DetailsWithdrawalNotesS = 'details_withdrawalNotes_s',
  DocId = 'docId',
  Initimeshare = 'initimeshare',
  Lastimeshare = 'lastimeshare',
  Original = 'original',
  Ownedby = 'ownedby',
  Role = 'role',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Timeshare = 'timeshare',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type AssignmentAggregateResult = {
  __typename?: 'AssignmentAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']>;
  details_approvedDeferredPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_approvedDeferredPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_approvedDeferredPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_approvedDeferredPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_assignee_nMax?: Maybe<Scalars['String']>;
  details_assignee_nMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_husdSalaryPerPhase_aMax?: Maybe<Scalars['String']>;
  details_husdSalaryPerPhase_aMin?: Maybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_aMax?: Maybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_aMin?: Maybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_aMax?: Maybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_aMin?: Maybe<Scalars['String']>;
  details_instantHusdPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_instantHusdPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_instantHusdPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_instantHusdPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']>;
  details_owner_nMax?: Maybe<Scalars['String']>;
  details_owner_nMin?: Maybe<Scalars['String']>;
  details_pegSalaryPerPeriod_aMax?: Maybe<Scalars['String']>;
  details_pegSalaryPerPeriod_aMin?: Maybe<Scalars['String']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_rewardSalaryPerPeriod_aMax?: Maybe<Scalars['String']>;
  details_rewardSalaryPerPeriod_aMin?: Maybe<Scalars['String']>;
  details_role_cMax?: Maybe<Scalars['String']>;
  details_role_cMin?: Maybe<Scalars['String']>;
  details_role_iAvg?: Maybe<Scalars['Float']>;
  details_role_iMax?: Maybe<Scalars['Int64']>;
  details_role_iMin?: Maybe<Scalars['Int64']>;
  details_role_iSum?: Maybe<Scalars['Int64']>;
  details_seedsEscrowSalaryPerPhase_aMax?: Maybe<Scalars['String']>;
  details_seedsEscrowSalaryPerPhase_aMin?: Maybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_aMax?: Maybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_aMin?: Maybe<Scalars['String']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_suspensionDate_tMax?: Maybe<Scalars['DateTime']>;
  details_suspensionDate_tMin?: Maybe<Scalars['DateTime']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_aMax?: Maybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_aMin?: Maybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_aMax?: Maybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_aMin?: Maybe<Scalars['String']>;
  details_withdrawalDate_tMax?: Maybe<Scalars['DateTime']>;
  details_withdrawalDate_tMin?: Maybe<Scalars['DateTime']>;
  details_withdrawalNotes_sMax?: Maybe<Scalars['String']>;
  details_withdrawalNotes_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type AttestationFilter = {
  and?: InputMaybe<Array<InputMaybe<AttestationFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_treasurer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AttestationHasFilter>>>;
  not?: InputMaybe<AttestationFilter>;
  or?: InputMaybe<Array<InputMaybe<AttestationFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AttestationHasFilter {
  Attestedby = 'attestedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsTreasurerN = 'details_treasurer_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AttestationAggregateResult = {
  __typename?: 'AttestationAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_treasurer_nMax?: Maybe<Scalars['String']>;
  details_treasurer_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type BadgeFilter = {
  and?: InputMaybe<Array<InputMaybe<BadgeFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_badge_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_detailsPurposeS_i?: InputMaybe<Int64Filter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_husdCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_icon_s?: InputMaybe<StringRegExpFilter>;
  details_maxCycles_i?: InputMaybe<Int64Filter>;
  details_maxPeriodCount_i?: InputMaybe<Int64Filter>;
  details_pegCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_rewardCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_seedsCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_voiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BadgeHasFilter>>>;
  not?: InputMaybe<BadgeFilter>;
  or?: InputMaybe<Array<InputMaybe<BadgeFilter>>>;
  system_badgeId_i?: InputMaybe<Int64Filter>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BadgeHasFilter {
  Assignment = 'assignment',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  Copyof = 'copyof',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsDetailsPurposeSI = 'details_detailsPurposeS_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdCoefficientX10000I = 'details_husdCoefficientX10000_i',
  DetailsHvoiceCoefficientX10000I = 'details_hvoiceCoefficientX10000_i',
  DetailsHyphaCoefficientX10000I = 'details_hyphaCoefficientX10000_i',
  DetailsIconS = 'details_icon_s',
  DetailsMaxCyclesI = 'details_maxCycles_i',
  DetailsMaxPeriodCountI = 'details_maxPeriodCount_i',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsSeedsCoefficientX10000I = 'details_seedsCoefficientX10000_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  Heldby = 'heldby',
  Ownedby = 'ownedby',
  SystemBadgeIdI = 'system_badgeId_i',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type BadgeAggregateResult = {
  __typename?: 'BadgeAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_assignee_nMax?: Maybe<Scalars['String']>;
  details_assignee_nMin?: Maybe<Scalars['String']>;
  details_badge_iAvg?: Maybe<Scalars['Float']>;
  details_badge_iMax?: Maybe<Scalars['Int64']>;
  details_badge_iMin?: Maybe<Scalars['Int64']>;
  details_badge_iSum?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_detailsPurposeS_iAvg?: Maybe<Scalars['Float']>;
  details_detailsPurposeS_iMax?: Maybe<Scalars['Int64']>;
  details_detailsPurposeS_iMin?: Maybe<Scalars['Int64']>;
  details_detailsPurposeS_iSum?: Maybe<Scalars['Int64']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_husdCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_husdCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_husdCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_husdCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_hvoiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_hyphaCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_icon_sMax?: Maybe<Scalars['String']>;
  details_icon_sMin?: Maybe<Scalars['String']>;
  details_maxCycles_iAvg?: Maybe<Scalars['Float']>;
  details_maxCycles_iMax?: Maybe<Scalars['Int64']>;
  details_maxCycles_iMin?: Maybe<Scalars['Int64']>;
  details_maxCycles_iSum?: Maybe<Scalars['Int64']>;
  details_maxPeriodCount_iAvg?: Maybe<Scalars['Float']>;
  details_maxPeriodCount_iMax?: Maybe<Scalars['Int64']>;
  details_maxPeriodCount_iMin?: Maybe<Scalars['Int64']>;
  details_maxPeriodCount_iSum?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_pegCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_purpose_sMax?: Maybe<Scalars['String']>;
  details_purpose_sMin?: Maybe<Scalars['String']>;
  details_rewardCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_rewardCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_rewardCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_rewardCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_seedsCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_voiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_voiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_voiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_voiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_badgeId_iAvg?: Maybe<Scalars['Float']>;
  system_badgeId_iMax?: Maybe<Scalars['Int64']>;
  system_badgeId_iMin?: Maybe<Scalars['Int64']>;
  system_badgeId_iSum?: Maybe<Scalars['Int64']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  system_proposer_nMax?: Maybe<Scalars['String']>;
  system_proposer_nMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type BalanceFilter = {
  and?: InputMaybe<Array<InputMaybe<BalanceFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_quantity_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BalanceHasFilter>>>;
  not?: InputMaybe<BalanceFilter>;
  or?: InputMaybe<Array<InputMaybe<BalanceFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BalanceHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsQuantityA = 'details_quantity_a',
  DocId = 'docId',
  Owner = 'owner',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BalanceAggregateResult = {
  __typename?: 'BalanceAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_quantity_aMax?: Maybe<Scalars['String']>;
  details_quantity_aMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type BillingInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<BillingInfoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_billingDay_i?: InputMaybe<Int64Filter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_expirationDate_t?: InputMaybe<DateTimeFilter>;
  details_isInfinite_i?: InputMaybe<Int64Filter>;
  details_offerDiscountPercX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_planName_s?: InputMaybe<StringRegExpFilter>;
  details_planPrice_a?: InputMaybe<StringTermFilter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_totalPaid_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BillingInfoHasFilter>>>;
  not?: InputMaybe<BillingInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<BillingInfoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BillingInfoHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBillingDayI = 'details_billingDay_i',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsExpirationDateT = 'details_expirationDate_t',
  DetailsIsInfiniteI = 'details_isInfinite_i',
  DetailsOfferDiscountPercX10000I = 'details_offerDiscountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPlanNameS = 'details_planName_s',
  DetailsPlanPriceA = 'details_planPrice_a',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTotalPaidA = 'details_totalPaid_a',
  DocId = 'docId',
  Nextbill = 'nextbill',
  Priceoffer = 'priceoffer',
  Pricingplan = 'pricingplan',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BillingInfoAggregateResult = {
  __typename?: 'BillingInfoAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_billingDay_iAvg?: Maybe<Scalars['Float']>;
  details_billingDay_iMax?: Maybe<Scalars['Int64']>;
  details_billingDay_iMin?: Maybe<Scalars['Int64']>;
  details_billingDay_iSum?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']>;
  details_expirationDate_tMax?: Maybe<Scalars['DateTime']>;
  details_expirationDate_tMin?: Maybe<Scalars['DateTime']>;
  details_isInfinite_iAvg?: Maybe<Scalars['Float']>;
  details_isInfinite_iMax?: Maybe<Scalars['Int64']>;
  details_isInfinite_iMin?: Maybe<Scalars['Int64']>;
  details_isInfinite_iSum?: Maybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_iAvg?: Maybe<Scalars['Float']>;
  details_offerDiscountPercX10000_iMax?: Maybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_iMin?: Maybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_iSum?: Maybe<Scalars['Int64']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_planName_sMax?: Maybe<Scalars['String']>;
  details_planName_sMin?: Maybe<Scalars['String']>;
  details_planPrice_aMax?: Maybe<Scalars['String']>;
  details_planPrice_aMin?: Maybe<Scalars['String']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']>;
  details_totalPaid_aMax?: Maybe<Scalars['String']>;
  details_totalPaid_aMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type BudgetFilter = {
  and?: InputMaybe<Array<InputMaybe<BudgetFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_circleId_i?: InputMaybe<Int64Filter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_usdAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BudgetHasFilter>>>;
  not?: InputMaybe<BudgetFilter>;
  or?: InputMaybe<Array<InputMaybe<BudgetFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BudgetHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Circle = 'circle',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type BudgetAggregateResult = {
  __typename?: 'BudgetAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_circleId_iAvg?: Maybe<Scalars['Float']>;
  details_circleId_iMax?: Maybe<Scalars['Int64']>;
  details_circleId_iMin?: Maybe<Scalars['Int64']>;
  details_circleId_iSum?: Maybe<Scalars['Int64']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_usdAmount_aMax?: Maybe<Scalars['String']>;
  details_usdAmount_aMin?: Maybe<Scalars['String']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type CircleFilter = {
  and?: InputMaybe<Array<InputMaybe<CircleFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CircleHasFilter>>>;
  not?: InputMaybe<CircleFilter>;
  or?: InputMaybe<Array<InputMaybe<CircleFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CircleHasFilter {
  Applicant = 'applicant',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Budget = 'budget',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Lockedby = 'lockedby',
  Member = 'member',
  Ownedby = 'ownedby',
  Parentcircle = 'parentcircle',
  Subcircle = 'subcircle',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type CircleAggregateResult = {
  __typename?: 'CircleAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_name_sMax?: Maybe<Scalars['String']>;
  details_name_sMin?: Maybe<Scalars['String']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']>;
  details_purpose_sMax?: Maybe<Scalars['String']>;
  details_purpose_sMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type CmntSectionFilter = {
  and?: InputMaybe<Array<InputMaybe<CmntSectionFilter>>>;
  commentSection_likes_i?: InputMaybe<Int64Filter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CmntSectionHasFilter>>>;
  likeDetails_likes_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<CmntSectionFilter>;
  or?: InputMaybe<Array<InputMaybe<CmntSectionFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CmntSectionHasFilter {
  Cmntsectof = 'cmntsectof',
  Comment = 'comment',
  CommentSectionLikesI = 'commentSection_likes_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CmntSectionAggregateResult = {
  __typename?: 'CmntSectionAggregateResult';
  commentSection_likes_iAvg?: Maybe<Scalars['Float']>;
  commentSection_likes_iMax?: Maybe<Scalars['Int64']>;
  commentSection_likes_iMin?: Maybe<Scalars['Int64']>;
  commentSection_likes_iSum?: Maybe<Scalars['Int64']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  likeDetails_likes_iAvg?: Maybe<Scalars['Float']>;
  likeDetails_likes_iMax?: Maybe<Scalars['Int64']>;
  likeDetails_likes_iMin?: Maybe<Scalars['Int64']>;
  likeDetails_likes_iSum?: Maybe<Scalars['Int64']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type CommentFilter = {
  and?: InputMaybe<Array<InputMaybe<CommentFilter>>>;
  comment_author_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  comment_commentCount_i?: InputMaybe<Int64Filter>;
  comment_content_s?: InputMaybe<StringRegExpFilter>;
  comment_deleted_i?: InputMaybe<Int64Filter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CommentHasFilter>>>;
  likeDetails_likes_i?: InputMaybe<Int64Filter>;
  likes_johnnyhypha1_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<CommentFilter>;
  or?: InputMaybe<Array<InputMaybe<CommentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CommentHasFilter {
  Comment = 'comment',
  CommentAuthorN = 'comment_author_n',
  CommentCommentCountI = 'comment_commentCount_i',
  CommentContentS = 'comment_content_s',
  CommentDeletedI = 'comment_deleted_i',
  Commentof = 'commentof',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  LikesJohnnyhypha1I = 'likes_johnnyhypha1_i',
  Reactedby = 'reactedby',
  Reaction = 'reaction',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CommentAggregateResult = {
  __typename?: 'CommentAggregateResult';
  comment_author_nMax?: Maybe<Scalars['String']>;
  comment_author_nMin?: Maybe<Scalars['String']>;
  comment_commentCount_iAvg?: Maybe<Scalars['Float']>;
  comment_commentCount_iMax?: Maybe<Scalars['Int64']>;
  comment_commentCount_iMin?: Maybe<Scalars['Int64']>;
  comment_commentCount_iSum?: Maybe<Scalars['Int64']>;
  comment_content_sMax?: Maybe<Scalars['String']>;
  comment_content_sMin?: Maybe<Scalars['String']>;
  comment_deleted_iAvg?: Maybe<Scalars['Float']>;
  comment_deleted_iMax?: Maybe<Scalars['Int64']>;
  comment_deleted_iMin?: Maybe<Scalars['Int64']>;
  comment_deleted_iSum?: Maybe<Scalars['Int64']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  likeDetails_likes_iAvg?: Maybe<Scalars['Float']>;
  likeDetails_likes_iMax?: Maybe<Scalars['Int64']>;
  likeDetails_likes_iMin?: Maybe<Scalars['Int64']>;
  likeDetails_likes_iSum?: Maybe<Scalars['Int64']>;
  likes_johnnyhypha1_iAvg?: Maybe<Scalars['Float']>;
  likes_johnnyhypha1_iMax?: Maybe<Scalars['Int64']>;
  likes_johnnyhypha1_iMin?: Maybe<Scalars['Int64']>;
  likes_johnnyhypha1_iSum?: Maybe<Scalars['Int64']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type CursorFilter = {
  and?: InputMaybe<Array<InputMaybe<CursorFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CursorHasFilter>>>;
  id?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<CursorFilter>;
  or?: InputMaybe<Array<InputMaybe<CursorFilter>>>;
};

export enum CursorHasFilter {
  Cursor = 'cursor',
  Id = 'id'
}

export type CursorAggregateResult = {
  __typename?: 'CursorAggregateResult';
  count?: Maybe<Scalars['Int']>;
  cursorMax?: Maybe<Scalars['String']>;
  cursorMin?: Maybe<Scalars['String']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
};

export type DaoFilter = {
  and?: InputMaybe<Array<InputMaybe<DaoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoType_s?: InputMaybe<StringRegExpFilter>;
  details_isWaitingEcosystem_i?: InputMaybe<Int64Filter>;
  details_unusedField_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DaoHasFilter>>>;
  not?: InputMaybe<DaoFilter>;
  or?: InputMaybe<Array<InputMaybe<DaoFilter>>>;
  system_nodeLabel_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DaoHasFilter {
  Admin = 'admin',
  Alert = 'alert',
  Anchorchild = 'anchorchild',
  Anchorparent = 'anchorparent',
  Applicant = 'applicant',
  Badge = 'badge',
  Chiefdelegate = 'chiefdelegate',
  Chiefround = 'chiefround',
  Childdraft = 'childdraft',
  Circle = 'circle',
  Commember = 'commember',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Current = 'current',
  Delegate = 'delegate',
  DetailsDaoNameN = 'details_daoName_n',
  DetailsDaoTypeS = 'details_daoType_s',
  DetailsIsWaitingEcosystemI = 'details_isWaitingEcosystem_i',
  DetailsUnusedFieldN = 'details_unusedField_n',
  DocId = 'docId',
  Election = 'election',
  End = 'end',
  Enroller = 'enroller',
  Failedprops = 'failedprops',
  Headdelegate = 'headdelegate',
  Headround = 'headround',
  Member = 'member',
  Ongoingelct = 'ongoingelct',
  Openmultisig = 'openmultisig',
  Owner = 'owner',
  Passedprops = 'passedprops',
  Payout = 'payout',
  Period = 'period',
  Planmanager = 'planmanager',
  Previouselct = 'previouselct',
  Proposal = 'proposal',
  Questcomple = 'questcomple',
  Queststart = 'queststart',
  Role = 'role',
  Round = 'round',
  Settings = 'settings',
  Stagingprop = 'stagingprop',
  Start = 'start',
  Suspended = 'suspended',
  SystemNodeLabelN = 'system_nodeLabel_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasury = 'treasury',
  Type = 'type',
  Upcomingelct = 'upcomingelct',
  UpdatedDate = 'updatedDate',
  Votable = 'votable',
  Voter = 'voter'
}

export type DaoAggregateResult = {
  __typename?: 'DaoAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_daoName_nMax?: Maybe<Scalars['String']>;
  details_daoName_nMin?: Maybe<Scalars['String']>;
  details_daoType_sMax?: Maybe<Scalars['String']>;
  details_daoType_sMin?: Maybe<Scalars['String']>;
  details_isWaitingEcosystem_iAvg?: Maybe<Scalars['Float']>;
  details_isWaitingEcosystem_iMax?: Maybe<Scalars['Int64']>;
  details_isWaitingEcosystem_iMin?: Maybe<Scalars['Int64']>;
  details_isWaitingEcosystem_iSum?: Maybe<Scalars['Int64']>;
  details_unusedField_nMax?: Maybe<Scalars['String']>;
  details_unusedField_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_nMax?: Maybe<Scalars['String']>;
  system_nodeLabel_nMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type DaoDraftFilter = {
  and?: InputMaybe<Array<InputMaybe<DaoDraftFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DaoDraftHasFilter>>>;
  not?: InputMaybe<DaoDraftFilter>;
  or?: InputMaybe<Array<InputMaybe<DaoDraftFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DaoDraftHasFilter {
  Anchorparent = 'anchorparent',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DocId = 'docId',
  Settings = 'settings',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DaoDraftAggregateResult = {
  __typename?: 'DaoDraftAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_daoName_nMax?: Maybe<Scalars['String']>;
  details_daoName_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type DhoFilter = {
  and?: InputMaybe<Array<InputMaybe<DhoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rootNode_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DhoHasFilter>>>;
  not?: InputMaybe<DhoFilter>;
  or?: InputMaybe<Array<InputMaybe<DhoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DhoHasFilter {
  Alert = 'alert',
  Applicant = 'applicant',
  Badge = 'badge',
  Chiefdelegate = 'chiefdelegate',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  Defpriceplan = 'defpriceplan',
  DetailsRootNodeN = 'details_rootNode_n',
  DocId = 'docId',
  Ecopriceplan = 'ecopriceplan',
  Failedprops = 'failedprops',
  Headdelegate = 'headdelegate',
  L2Nep42 = 'L2Nep42',
  Member = 'member',
  Passedprops = 'passedprops',
  Payout = 'payout',
  Pricingplan = 'pricingplan',
  Proposal = 'proposal',
  Role = 'role',
  Settings = 'settings',
  Start = 'start',
  Suspended = 'suspended',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DhoAggregateResult = {
  __typename?: 'DhoAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_rootNode_nMax?: Maybe<Scalars['String']>;
  details_rootNode_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type DoccacheConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<DoccacheConfigFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DoccacheConfigHasFilter>>>;
  id?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<DoccacheConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<DoccacheConfigFilter>>>;
};

export enum DoccacheConfigHasFilter {
  Contract = 'contract',
  DocumentsTable = 'documentsTable',
  EdgesTable = 'edgesTable',
  ElasticApiKey = 'elasticApiKey',
  ElasticEndpoint = 'elasticEndpoint',
  EosEndpoint = 'eosEndpoint',
  Id = 'id'
}

export type DoccacheConfigAggregateResult = {
  __typename?: 'DoccacheConfigAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  documentsTableMax?: Maybe<Scalars['String']>;
  documentsTableMin?: Maybe<Scalars['String']>;
  edgesTableMax?: Maybe<Scalars['String']>;
  edgesTableMin?: Maybe<Scalars['String']>;
  elasticApiKeyMax?: Maybe<Scalars['String']>;
  elasticApiKeyMin?: Maybe<Scalars['String']>;
  elasticEndpointMax?: Maybe<Scalars['String']>;
  elasticEndpointMin?: Maybe<Scalars['String']>;
  eosEndpointMax?: Maybe<Scalars['String']>;
  eosEndpointMin?: Maybe<Scalars['String']>;
  idMax?: Maybe<Scalars['String']>;
  idMin?: Maybe<Scalars['String']>;
};

export type DocumentFilter = {
  and?: InputMaybe<Array<InputMaybe<DocumentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DocumentHasFilter>>>;
  not?: InputMaybe<DocumentFilter>;
  or?: InputMaybe<Array<InputMaybe<DocumentFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DocumentHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DocumentAggregateResult = {
  __typename?: 'DocumentAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type EditFilter = {
  and?: InputMaybe<Array<InputMaybe<EditFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotDescription_s?: InputMaybe<StringRegExpFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_ballotTitle_s?: InputMaybe<StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_originalDocument_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_role_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<EditHasFilter>>>;
  not?: InputMaybe<EditFilter>;
  or?: InputMaybe<Array<InputMaybe<EditFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum EditHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotDescriptionS = 'details_ballotDescription_s',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBallotTitleS = 'details_ballotTitle_s',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRoleC = 'details_role_c',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStateS = 'details_state_s',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Original = 'original',
  Ownedby = 'ownedby',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type EditAggregateResult = {
  __typename?: 'EditAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_assignee_nMax?: Maybe<Scalars['String']>;
  details_assignee_nMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotDescription_sMax?: Maybe<Scalars['String']>;
  details_ballotDescription_sMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_ballotTitle_sMax?: Maybe<Scalars['String']>;
  details_ballotTitle_sMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']>;
  details_originalDocument_iAvg?: Maybe<Scalars['Float']>;
  details_originalDocument_iMax?: Maybe<Scalars['Int64']>;
  details_originalDocument_iMin?: Maybe<Scalars['Int64']>;
  details_originalDocument_iSum?: Maybe<Scalars['Int64']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_role_cMax?: Maybe<Scalars['String']>;
  details_role_cMin?: Maybe<Scalars['String']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type ElectnRoundFilter = {
  and?: InputMaybe<Array<InputMaybe<ElectnRoundFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_delegatePower_i?: InputMaybe<Int64Filter>;
  details_duration_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_passingCount_i?: InputMaybe<Int64Filter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_type_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<ElectnRoundHasFilter>>>;
  not?: InputMaybe<ElectnRoundFilter>;
  or?: InputMaybe<Array<InputMaybe<ElectnRoundFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum ElectnRoundHasFilter {
  Candidate = 'candidate',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDelegatePowerI = 'details_delegatePower_i',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsPassingCountI = 'details_passingCount_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  Election = 'election',
  Nextround = 'nextround',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Voted = 'voted',
  Winner = 'winner'
}

export type ElectnRoundAggregateResult = {
  __typename?: 'ElectnRoundAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_delegatePower_iAvg?: Maybe<Scalars['Float']>;
  details_delegatePower_iMax?: Maybe<Scalars['Int64']>;
  details_delegatePower_iMin?: Maybe<Scalars['Int64']>;
  details_delegatePower_iSum?: Maybe<Scalars['Int64']>;
  details_duration_iAvg?: Maybe<Scalars['Float']>;
  details_duration_iMax?: Maybe<Scalars['Int64']>;
  details_duration_iMin?: Maybe<Scalars['Int64']>;
  details_duration_iSum?: Maybe<Scalars['Int64']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']>;
  details_passingCount_iAvg?: Maybe<Scalars['Float']>;
  details_passingCount_iMax?: Maybe<Scalars['Int64']>;
  details_passingCount_iMin?: Maybe<Scalars['Int64']>;
  details_passingCount_iSum?: Maybe<Scalars['Int64']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']>;
  details_type_sMax?: Maybe<Scalars['String']>;
  details_type_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type MemberFilter = {
  and?: InputMaybe<Array<InputMaybe<MemberFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_member_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MemberHasFilter>>>;
  not?: InputMaybe<MemberFilter>;
  or?: InputMaybe<Array<InputMaybe<MemberFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MemberHasFilter {
  Applicantof = 'applicantof',
  Applofcirc = 'applofcirc',
  Approvemsig = 'approvemsig',
  Assignbadge = 'assignbadge',
  Assigned = 'assigned',
  Attested = 'attested',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberN = 'details_member_n',
  DocId = 'docId',
  Elctngroup = 'elctngroup',
  Entrustedto = 'entrustedto',
  Holdsbadge = 'holdsbadge',
  Memberof = 'memberof',
  Memberofcirc = 'memberofcirc',
  Owns = 'owns',
  Paid = 'paid',
  Payment = 'payment',
  Payout = 'payout',
  Questcomplet = 'questcomplet',
  Reactedto = 'reactedto',
  Reactionlnk = 'reactionlnk',
  Redeembal = 'redeembal',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasurerof = 'treasurerof',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote'
}

export type MemberAggregateResult = {
  __typename?: 'MemberAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_member_nMax?: Maybe<Scalars['String']>;
  details_member_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type MemoFilter = {
  and?: InputMaybe<Array<InputMaybe<MemoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_memo_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MemoHasFilter>>>;
  not?: InputMaybe<MemoFilter>;
  or?: InputMaybe<Array<InputMaybe<MemoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MemoHasFilter {
  Assigned = 'assigned',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemoS = 'details_memo_s',
  DocId = 'docId',
  Owns = 'owns',
  Paid = 'paid',
  Payout = 'payout',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MemoAggregateResult = {
  __typename?: 'MemoAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_memo_sMax?: Maybe<Scalars['String']>;
  details_memo_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type MultisigFilter = {
  and?: InputMaybe<Array<InputMaybe<MultisigFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MultisigHasFilter>>>;
  not?: InputMaybe<MultisigFilter>;
  or?: InputMaybe<Array<InputMaybe<MultisigFilter>>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_communityVotingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_communityVotingEnabled_i?: InputMaybe<Int64Filter>;
  settings_communityVotingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_daoTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_daoUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationButtonText_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationURL_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_extendedLogo_s?: InputMaybe<StringRegExpFilter>;
  settings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_membersApplicationEnabled_i?: InputMaybe<Int64Filter>;
  settings_membersBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_membersParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_membersTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_msigApprovalAmount_i?: InputMaybe<Int64Filter>;
  settings_organisationBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_pattern_s?: InputMaybe<StringRegExpFilter>;
  settings_patternBase64_s?: InputMaybe<StringRegExpFilter>;
  settings_patternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_patternOpacity_i?: InputMaybe<Int64Filter>;
  settings_primaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Int64Filter>;
  settings_proposalsParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_removableBannersEnabled_i?: InputMaybe<Int64Filter>;
  settings_secondaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_socialChat_s?: InputMaybe<StringRegExpFilter>;
  settings_splashBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_textColor_s?: InputMaybe<StringRegExpFilter>;
  settings_title_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Int64Filter>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Int64Filter>;
  settings_upvoteRounds_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDateTime_s?: InputMaybe<StringRegExpFilter>;
  settings_url_s?: InputMaybe<StringRegExpFilter>;
  settings_votingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentX100_i?: InputMaybe<Int64Filter>;
  settings_votingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumX100_i?: InputMaybe<Int64Filter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MultisigHasFilter {
  Approvedby = 'approvedby',
  Canceledby = 'canceledby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsOwnerN = 'details_owner_n',
  DocId = 'docId',
  Executedby = 'executedby',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsTitleS = 'settings_title_s',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MultisigAggregateResult = {
  __typename?: 'MultisigAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_owner_nMax?: Maybe<Scalars['String']>;
  details_owner_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingAlignmentPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingAlignmentPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingAlignmentPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingDurationSec_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingMethod_sMax?: Maybe<Scalars['String']>;
  settings_communityVotingMethod_sMin?: Maybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingQuorumPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingQuorumPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingQuorumPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_daoTitle_sMax?: Maybe<Scalars['String']>;
  settings_daoTitle_sMin?: Maybe<Scalars['String']>;
  settings_daoUrl_sMax?: Maybe<Scalars['String']>;
  settings_daoUrl_sMin?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_sMax?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_sMin?: Maybe<Scalars['String']>;
  settings_dashboardTitle_sMax?: Maybe<Scalars['String']>;
  settings_dashboardTitle_sMin?: Maybe<Scalars['String']>;
  settings_documentationButtonText_sMax?: Maybe<Scalars['String']>;
  settings_documentationButtonText_sMin?: Maybe<Scalars['String']>;
  settings_documentationURL_sMax?: Maybe<Scalars['String']>;
  settings_documentationURL_sMin?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_exploreParagraph_sMax?: Maybe<Scalars['String']>;
  settings_exploreParagraph_sMin?: Maybe<Scalars['String']>;
  settings_exploreTitle_sMax?: Maybe<Scalars['String']>;
  settings_exploreTitle_sMin?: Maybe<Scalars['String']>;
  settings_extendedLogo_sMax?: Maybe<Scalars['String']>;
  settings_extendedLogo_sMin?: Maybe<Scalars['String']>;
  settings_logo_sMax?: Maybe<Scalars['String']>;
  settings_logo_sMin?: Maybe<Scalars['String']>;
  settings_membersApplicationEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_membersApplicationEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_membersApplicationEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_membersApplicationEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_membersBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_membersBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_membersParagraph_sMax?: Maybe<Scalars['String']>;
  settings_membersParagraph_sMin?: Maybe<Scalars['String']>;
  settings_membersTitle_sMax?: Maybe<Scalars['String']>;
  settings_membersTitle_sMin?: Maybe<Scalars['String']>;
  settings_msigApprovalAmount_iAvg?: Maybe<Scalars['Float']>;
  settings_msigApprovalAmount_iMax?: Maybe<Scalars['Int64']>;
  settings_msigApprovalAmount_iMin?: Maybe<Scalars['Int64']>;
  settings_msigApprovalAmount_iSum?: Maybe<Scalars['Int64']>;
  settings_organisationBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_organisationBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_organisationParagraph_sMax?: Maybe<Scalars['String']>;
  settings_organisationParagraph_sMin?: Maybe<Scalars['String']>;
  settings_organisationTitle_sMax?: Maybe<Scalars['String']>;
  settings_organisationTitle_sMin?: Maybe<Scalars['String']>;
  settings_pattern_sMax?: Maybe<Scalars['String']>;
  settings_pattern_sMin?: Maybe<Scalars['String']>;
  settings_patternBase64_sMax?: Maybe<Scalars['String']>;
  settings_patternBase64_sMin?: Maybe<Scalars['String']>;
  settings_patternColor_sMax?: Maybe<Scalars['String']>;
  settings_patternColor_sMin?: Maybe<Scalars['String']>;
  settings_patternOpacity_iAvg?: Maybe<Scalars['Float']>;
  settings_patternOpacity_iMax?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_iMin?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_iSum?: Maybe<Scalars['Int64']>;
  settings_primaryColor_sMax?: Maybe<Scalars['String']>;
  settings_primaryColor_sMin?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_proposalsCreationEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_proposalsCreationEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_proposalsCreationEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_proposalsCreationEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_proposalsParagraph_sMax?: Maybe<Scalars['String']>;
  settings_proposalsParagraph_sMin?: Maybe<Scalars['String']>;
  settings_proposalsTitle_sMax?: Maybe<Scalars['String']>;
  settings_proposalsTitle_sMin?: Maybe<Scalars['String']>;
  settings_removableBannersEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_removableBannersEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_secondaryColor_sMax?: Maybe<Scalars['String']>;
  settings_secondaryColor_sMin?: Maybe<Scalars['String']>;
  settings_socialChat_sMax?: Maybe<Scalars['String']>;
  settings_socialChat_sMin?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_textColor_sMax?: Maybe<Scalars['String']>;
  settings_textColor_sMin?: Maybe<Scalars['String']>;
  settings_title_sMax?: Maybe<Scalars['String']>;
  settings_title_sMin?: Maybe<Scalars['String']>;
  settings_upvoteCheifDelegateCount_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteCheifDelegateCount_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateCount_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateCount_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteCheifDelegateDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteHeadDelegateDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteHeadDelegateRound_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteRounds_sMax?: Maybe<Scalars['String']>;
  settings_upvoteRounds_sMin?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_sMax?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_sMin?: Maybe<Scalars['String']>;
  settings_url_sMax?: Maybe<Scalars['String']>;
  settings_url_sMin?: Maybe<Scalars['String']>;
  settings_votingAlignmentPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_votingAlignmentPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingAlignmentX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iSum?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_iAvg?: Maybe<Scalars['Float']>;
  settings_votingDurationSec_iMax?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_iMin?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_iSum?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_votingQuorumPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingQuorumX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iSum?: Maybe<Scalars['Int64']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PaymentFilter = {
  and?: InputMaybe<Array<InputMaybe<PaymentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amount_a?: InputMaybe<StringTermFilter>;
  details_assignmentHash_c?: InputMaybe<StringExactFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_memo_s?: InputMaybe<StringRegExpFilter>;
  details_paymentDate_t?: InputMaybe<DateTimeFilter>;
  details_payoutHash_c?: InputMaybe<StringExactFilter>;
  details_periodHash_c?: InputMaybe<StringExactFilter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_recipientHash_c?: InputMaybe<StringExactFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PaymentHasFilter>>>;
  not?: InputMaybe<PaymentFilter>;
  or?: InputMaybe<Array<InputMaybe<PaymentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PaymentHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountA = 'details_amount_a',
  DetailsAssignmentHashC = 'details_assignmentHash_c',
  DetailsDaoI = 'details_dao_i',
  DetailsMemoS = 'details_memo_s',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPayoutHashC = 'details_payoutHash_c',
  DetailsPeriodHashC = 'details_periodHash_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRecipientHashC = 'details_recipientHash_c',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PaymentAggregateResult = {
  __typename?: 'PaymentAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_amount_aMax?: Maybe<Scalars['String']>;
  details_amount_aMin?: Maybe<Scalars['String']>;
  details_assignmentHash_cMax?: Maybe<Scalars['String']>;
  details_assignmentHash_cMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_memo_sMax?: Maybe<Scalars['String']>;
  details_memo_sMin?: Maybe<Scalars['String']>;
  details_paymentDate_tMax?: Maybe<Scalars['DateTime']>;
  details_paymentDate_tMin?: Maybe<Scalars['DateTime']>;
  details_payoutHash_cMax?: Maybe<Scalars['String']>;
  details_payoutHash_cMin?: Maybe<Scalars['String']>;
  details_periodHash_cMax?: Maybe<Scalars['String']>;
  details_periodHash_cMin?: Maybe<Scalars['String']>;
  details_recipient_nMax?: Maybe<Scalars['String']>;
  details_recipient_nMin?: Maybe<Scalars['String']>;
  details_recipientHash_cMax?: Maybe<Scalars['String']>;
  details_recipientHash_cMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PayoutFilter = {
  and?: InputMaybe<Array<InputMaybe<PayoutFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_bypassEscrow_i?: InputMaybe<Int64Filter>;
  details_content_s?: InputMaybe<StringRegExpFilter>;
  details_contributionDate_t?: InputMaybe<DateTimeFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_husdAmount_a?: InputMaybe<StringTermFilter>;
  details_hvoiceAmount_a?: InputMaybe<StringTermFilter>;
  details_hyphaAmount_a?: InputMaybe<StringTermFilter>;
  details_instantHusdPercX100_i?: InputMaybe<Int64Filter>;
  details_isCustom_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_paymentDate_t?: InputMaybe<DateTimeFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_proposalSubtype_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_proposalType_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_questStart_i?: InputMaybe<Int64Filter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsEscrowAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsInstantAmount_a?: InputMaybe<StringTermFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_usdAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PayoutHasFilter>>>;
  not?: InputMaybe<PayoutFilter>;
  or?: InputMaybe<Array<InputMaybe<PayoutFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PayoutHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Completed = 'completed',
  Completedby = 'completedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBypassEscrowI = 'details_bypassEscrow_i',
  DetailsContentS = 'details_content_s',
  DetailsContributionDateT = 'details_contributionDate_t',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdAmountA = 'details_husdAmount_a',
  DetailsHvoiceAmountA = 'details_hvoiceAmount_a',
  DetailsHyphaAmountA = 'details_hyphaAmount_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsIsCustomI = 'details_isCustom_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsProposalTypeN = 'details_proposalType_n',
  DetailsProposerN = 'details_proposer_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsSeedsAmountA = 'details_seedsAmount_a',
  DetailsSeedsEscrowAmountA = 'details_seedsEscrowAmount_a',
  DetailsSeedsInstantAmountA = 'details_seedsInstantAmount_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Lockedby = 'lockedby',
  Ownedby = 'ownedby',
  Payment = 'payment',
  Queststart = 'queststart',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PayoutAggregateResult = {
  __typename?: 'PayoutAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_bypassEscrow_iAvg?: Maybe<Scalars['Float']>;
  details_bypassEscrow_iMax?: Maybe<Scalars['Int64']>;
  details_bypassEscrow_iMin?: Maybe<Scalars['Int64']>;
  details_bypassEscrow_iSum?: Maybe<Scalars['Int64']>;
  details_content_sMax?: Maybe<Scalars['String']>;
  details_content_sMin?: Maybe<Scalars['String']>;
  details_contributionDate_tMax?: Maybe<Scalars['DateTime']>;
  details_contributionDate_tMin?: Maybe<Scalars['DateTime']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_husdAmount_aMax?: Maybe<Scalars['String']>;
  details_husdAmount_aMin?: Maybe<Scalars['String']>;
  details_hvoiceAmount_aMax?: Maybe<Scalars['String']>;
  details_hvoiceAmount_aMin?: Maybe<Scalars['String']>;
  details_hyphaAmount_aMax?: Maybe<Scalars['String']>;
  details_hyphaAmount_aMin?: Maybe<Scalars['String']>;
  details_instantHusdPercX100_iAvg?: Maybe<Scalars['Float']>;
  details_instantHusdPercX100_iMax?: Maybe<Scalars['Int64']>;
  details_instantHusdPercX100_iMin?: Maybe<Scalars['Int64']>;
  details_instantHusdPercX100_iSum?: Maybe<Scalars['Int64']>;
  details_isCustom_iAvg?: Maybe<Scalars['Float']>;
  details_isCustom_iMax?: Maybe<Scalars['Int64']>;
  details_isCustom_iMin?: Maybe<Scalars['Int64']>;
  details_isCustom_iSum?: Maybe<Scalars['Int64']>;
  details_owner_nMax?: Maybe<Scalars['String']>;
  details_owner_nMin?: Maybe<Scalars['String']>;
  details_paymentDate_tMax?: Maybe<Scalars['DateTime']>;
  details_paymentDate_tMin?: Maybe<Scalars['DateTime']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_proposalSubtype_nMax?: Maybe<Scalars['String']>;
  details_proposalSubtype_nMin?: Maybe<Scalars['String']>;
  details_proposalType_nMax?: Maybe<Scalars['String']>;
  details_proposalType_nMin?: Maybe<Scalars['String']>;
  details_proposer_nMax?: Maybe<Scalars['String']>;
  details_proposer_nMin?: Maybe<Scalars['String']>;
  details_questStart_iAvg?: Maybe<Scalars['Float']>;
  details_questStart_iMax?: Maybe<Scalars['Int64']>;
  details_questStart_iMin?: Maybe<Scalars['Int64']>;
  details_questStart_iSum?: Maybe<Scalars['Int64']>;
  details_recipient_nMax?: Maybe<Scalars['String']>;
  details_recipient_nMin?: Maybe<Scalars['String']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']>;
  details_seedsAmount_aMax?: Maybe<Scalars['String']>;
  details_seedsAmount_aMin?: Maybe<Scalars['String']>;
  details_seedsEscrowAmount_aMax?: Maybe<Scalars['String']>;
  details_seedsEscrowAmount_aMin?: Maybe<Scalars['String']>;
  details_seedsInstantAmount_aMax?: Maybe<Scalars['String']>;
  details_seedsInstantAmount_aMin?: Maybe<Scalars['String']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  details_usdAmount_aMax?: Maybe<Scalars['String']>;
  details_usdAmount_aMin?: Maybe<Scalars['String']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PeriodFilter = {
  and?: InputMaybe<Array<InputMaybe<PeriodFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_label_s?: InputMaybe<StringRegExpFilter>;
  details_startTime_t?: InputMaybe<DateTimeFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PeriodHasFilter>>>;
  not?: InputMaybe<PeriodFilter>;
  or?: InputMaybe<Array<InputMaybe<PeriodFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_readableStartDate_s?: InputMaybe<StringRegExpFilter>;
  system_readableStartTime_s?: InputMaybe<StringRegExpFilter>;
  system_updatedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PeriodHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsLabelS = 'details_label_s',
  DetailsStartTimeT = 'details_startTime_t',
  DocId = 'docId',
  Next = 'next',
  Payment = 'payment',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemReadableStartDateS = 'system_readableStartDate_s',
  SystemReadableStartTimeS = 'system_readableStartTime_s',
  SystemUpdatedDateT = 'system_updatedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PeriodAggregateResult = {
  __typename?: 'PeriodAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_label_sMax?: Maybe<Scalars['String']>;
  details_label_sMin?: Maybe<Scalars['String']>;
  details_startTime_tMax?: Maybe<Scalars['DateTime']>;
  details_startTime_tMin?: Maybe<Scalars['DateTime']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_readableStartDate_sMax?: Maybe<Scalars['String']>;
  system_readableStartDate_sMin?: Maybe<Scalars['String']>;
  system_readableStartTime_sMax?: Maybe<Scalars['String']>;
  system_readableStartTime_sMin?: Maybe<Scalars['String']>;
  system_updatedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_updatedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PlanManagerFilter = {
  and?: InputMaybe<Array<InputMaybe<PlanManagerFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_credit_a?: InputMaybe<StringTermFilter>;
  details_type_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PlanManagerHasFilter>>>;
  not?: InputMaybe<PlanManagerFilter>;
  or?: InputMaybe<Array<InputMaybe<PlanManagerFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PlanManagerHasFilter {
  Bill = 'bill',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Currentbill = 'currentbill',
  DetailsCreditA = 'details_credit_a',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  Lastbill = 'lastbill',
  Prevstartbil = 'prevstartbil',
  Startbill = 'startbill',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PlanManagerAggregateResult = {
  __typename?: 'PlanManagerAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_credit_aMax?: Maybe<Scalars['String']>;
  details_credit_aMin?: Maybe<Scalars['String']>;
  details_type_sMax?: Maybe<Scalars['String']>;
  details_type_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PolicyFilter = {
  and?: InputMaybe<Array<InputMaybe<PolicyFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PolicyHasFilter>>>;
  not?: InputMaybe<PolicyFilter>;
  or?: InputMaybe<Array<InputMaybe<PolicyFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PolicyHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Parentcircle = 'parentcircle',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PolicyAggregateResult = {
  __typename?: 'PolicyAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_name_sMax?: Maybe<Scalars['String']>;
  details_name_sMin?: Maybe<Scalars['String']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']>;
  details_purpose_sMax?: Maybe<Scalars['String']>;
  details_purpose_sMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PollFilter = {
  and?: InputMaybe<Array<InputMaybe<PollFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_votingMethod_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PollHasFilter>>>;
  not?: InputMaybe<PollFilter>;
  or?: InputMaybe<Array<InputMaybe<PollFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PollHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVotingMethodS = 'details_votingMethod_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PollAggregateResult = {
  __typename?: 'PollAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_votingMethod_sMax?: Maybe<Scalars['String']>;
  details_votingMethod_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PriceOfferFilter = {
  and?: InputMaybe<Array<InputMaybe<PriceOfferFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_tag_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PriceOfferHasFilter>>>;
  not?: InputMaybe<PriceOfferFilter>;
  or?: InputMaybe<Array<InputMaybe<PriceOfferFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PriceOfferHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsTagS = 'details_tag_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PriceOfferAggregateResult = {
  __typename?: 'PriceOfferAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_tag_sMax?: Maybe<Scalars['String']>;
  details_tag_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type PricingPlanFilter = {
  and?: InputMaybe<Array<InputMaybe<PricingPlanFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_maxMemberCount_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_price_a?: InputMaybe<StringTermFilter>;
  details_reactivationPeriodSec_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PricingPlanHasFilter>>>;
  not?: InputMaybe<PricingPlanFilter>;
  or?: InputMaybe<Array<InputMaybe<PricingPlanFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PricingPlanHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsMaxMemberCountI = 'details_maxMemberCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPriceA = 'details_price_a',
  DetailsReactivationPeriodSecI = 'details_reactivationPeriodSec_i',
  DocId = 'docId',
  Priceoffer = 'priceoffer',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PricingPlanAggregateResult = {
  __typename?: 'PricingPlanAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']>;
  details_maxMemberCount_iAvg?: Maybe<Scalars['Float']>;
  details_maxMemberCount_iMax?: Maybe<Scalars['Int64']>;
  details_maxMemberCount_iMin?: Maybe<Scalars['Int64']>;
  details_maxMemberCount_iSum?: Maybe<Scalars['Int64']>;
  details_name_sMax?: Maybe<Scalars['String']>;
  details_name_sMin?: Maybe<Scalars['String']>;
  details_price_aMax?: Maybe<Scalars['String']>;
  details_price_aMin?: Maybe<Scalars['String']>;
  details_reactivationPeriodSec_iAvg?: Maybe<Scalars['Float']>;
  details_reactivationPeriodSec_iMax?: Maybe<Scalars['Int64']>;
  details_reactivationPeriodSec_iMin?: Maybe<Scalars['Int64']>;
  details_reactivationPeriodSec_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type QuestcompleFilter = {
  and?: InputMaybe<Array<InputMaybe<QuestcompleFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_questStart_c?: InputMaybe<StringExactFilter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QuestcompleHasFilter>>>;
  not?: InputMaybe<QuestcompleFilter>;
  or?: InputMaybe<Array<InputMaybe<QuestcompleFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QuestcompleHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsQuestStartC = 'details_questStart_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Payment = 'payment',
  Queststart = 'queststart',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QuestcompleAggregateResult = {
  __typename?: 'QuestcompleAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']>;
  details_questStart_cMax?: Maybe<Scalars['String']>;
  details_questStart_cMin?: Maybe<Scalars['String']>;
  details_recipient_nMax?: Maybe<Scalars['String']>;
  details_recipient_nMin?: Maybe<Scalars['String']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type QuestcompletFilter = {
  and?: InputMaybe<Array<InputMaybe<QuestcompletFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_questStart_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QuestcompletHasFilter>>>;
  not?: InputMaybe<QuestcompletFilter>;
  or?: InputMaybe<Array<InputMaybe<QuestcompletFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QuestcompletHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Completed = 'completed',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Queststart = 'queststart',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QuestcompletAggregateResult = {
  __typename?: 'QuestcompletAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_questStart_iAvg?: Maybe<Scalars['Float']>;
  details_questStart_iMax?: Maybe<Scalars['Int64']>;
  details_questStart_iMin?: Maybe<Scalars['Int64']>;
  details_questStart_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type QueststartFilter = {
  and?: InputMaybe<Array<InputMaybe<QueststartFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_circleId_i?: InputMaybe<Int64Filter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_fulltimeCapacityX100_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_parentQuest_i?: InputMaybe<Int64Filter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_pegCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_rewardCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QueststartHasFilter>>>;
  not?: InputMaybe<QueststartFilter>;
  or?: InputMaybe<Array<InputMaybe<QueststartFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QueststartHasFilter {
  Ascendant = 'ascendant',
  Assignee = 'assignee',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Circle = 'circle',
  Cmntsect = 'cmntsect',
  Completedby = 'completedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  Descendant = 'descendant',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsParentQuestI = 'details_parentQuest_i',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  Failedprops = 'failedprops',
  Lockedby = 'lockedby',
  Ownedby = 'ownedby',
  Parentquest = 'parentquest',
  Payment = 'payment',
  Start = 'start',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QueststartAggregateResult = {
  __typename?: 'QueststartAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']>;
  details_assignee_nMax?: Maybe<Scalars['String']>;
  details_assignee_nMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_circleId_iAvg?: Maybe<Scalars['Float']>;
  details_circleId_iMax?: Maybe<Scalars['Int64']>;
  details_circleId_iMin?: Maybe<Scalars['Int64']>;
  details_circleId_iSum?: Maybe<Scalars['Int64']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_fulltimeCapacityX100_iAvg?: Maybe<Scalars['Float']>;
  details_fulltimeCapacityX100_iMax?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_iMin?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_iSum?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']>;
  details_parentQuest_iAvg?: Maybe<Scalars['Float']>;
  details_parentQuest_iMax?: Maybe<Scalars['Int64']>;
  details_parentQuest_iMin?: Maybe<Scalars['Int64']>;
  details_parentQuest_iSum?: Maybe<Scalars['Int64']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']>;
  details_pegCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_pegCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']>;
  details_recipient_nMax?: Maybe<Scalars['String']>;
  details_recipient_nMin?: Maybe<Scalars['String']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']>;
  details_rewardCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_rewardCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_rewardCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_rewardCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']>;
  details_voiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']>;
  details_voiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']>;
  details_voiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']>;
  details_voiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type ReactionFilter = {
  and?: InputMaybe<Array<InputMaybe<ReactionFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<ReactionHasFilter>>>;
  not?: InputMaybe<ReactionFilter>;
  or?: InputMaybe<Array<InputMaybe<ReactionFilter>>>;
  reaction_type_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum ReactionHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  ReactionTypeN = 'reaction_type_n',
  Reactionlnkr = 'reactionlnkr',
  Reactionof = 'reactionof',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ReactionAggregateResult = {
  __typename?: 'ReactionAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  reaction_type_nMax?: Maybe<Scalars['String']>;
  reaction_type_nMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type RedemptionFilter = {
  and?: InputMaybe<Array<InputMaybe<RedemptionFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amountPaid_a?: InputMaybe<StringTermFilter>;
  details_amountRequested_a?: InputMaybe<StringTermFilter>;
  details_requestor_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<RedemptionHasFilter>>>;
  legacy_id_i?: InputMaybe<Int64Filter>;
  legacy_notes_s?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<RedemptionFilter>;
  or?: InputMaybe<Array<InputMaybe<RedemptionFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum RedemptionHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsAmountRequestedA = 'details_amountRequested_a',
  DetailsRequestorN = 'details_requestor_n',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyNotesS = 'legacy_notes_s',
  Paidby = 'paidby',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type RedemptionAggregateResult = {
  __typename?: 'RedemptionAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_amountPaid_aMax?: Maybe<Scalars['String']>;
  details_amountPaid_aMin?: Maybe<Scalars['String']>;
  details_amountRequested_aMax?: Maybe<Scalars['String']>;
  details_amountRequested_aMin?: Maybe<Scalars['String']>;
  details_requestor_nMax?: Maybe<Scalars['String']>;
  details_requestor_nMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  legacy_id_iAvg?: Maybe<Scalars['Float']>;
  legacy_id_iMax?: Maybe<Scalars['Int64']>;
  legacy_id_iMin?: Maybe<Scalars['Int64']>;
  legacy_id_iSum?: Maybe<Scalars['Int64']>;
  legacy_notes_sMax?: Maybe<Scalars['String']>;
  legacy_notes_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type RoleFilter = {
  and?: InputMaybe<Array<InputMaybe<RoleFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_fulltimeCapacityX100_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_minTimeShareX100_i?: InputMaybe<Int64Filter>;
  details_originId_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_suspensionDate_t?: InputMaybe<DateTimeFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<RoleHasFilter>>>;
  not?: InputMaybe<RoleFilter>;
  or?: InputMaybe<Array<InputMaybe<RoleFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum RoleHasFilter {
  Assignment = 'assignment',
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsMinTimeShareX100I = 'details_minTimeShareX100_i',
  DetailsOriginIdI = 'details_originId_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type RoleAggregateResult = {
  __typename?: 'RoleAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_iAvg?: Maybe<Scalars['Float']>;
  details_fulltimeCapacityX100_iMax?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_iMin?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_iSum?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']>;
  details_minTimeShareX100_iAvg?: Maybe<Scalars['Float']>;
  details_minTimeShareX100_iMax?: Maybe<Scalars['Int64']>;
  details_minTimeShareX100_iMin?: Maybe<Scalars['Int64']>;
  details_minTimeShareX100_iSum?: Maybe<Scalars['Int64']>;
  details_originId_iAvg?: Maybe<Scalars['Float']>;
  details_originId_iMax?: Maybe<Scalars['Int64']>;
  details_originId_iMin?: Maybe<Scalars['Int64']>;
  details_originId_iSum?: Maybe<Scalars['Int64']>;
  details_owner_nMax?: Maybe<Scalars['String']>;
  details_owner_nMin?: Maybe<Scalars['String']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_suspensionDate_tMax?: Maybe<Scalars['DateTime']>;
  details_suspensionDate_tMin?: Maybe<Scalars['DateTime']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  details_url_sMax?: Maybe<Scalars['String']>;
  details_url_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_ballotId_nMax?: Maybe<Scalars['String']>;
  system_ballotId_nMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type SettingsFilter = {
  admins_account_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  admins_updatedDate_t?: InputMaybe<DateTimeFilter>;
  and?: InputMaybe<Array<InputMaybe<SettingsFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  ecosystem_domain_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_logo_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_name_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_purpose_s?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<SettingsHasFilter>>>;
  not?: InputMaybe<SettingsFilter>;
  onboarders_account_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  onboarders_updatedDate_t?: InputMaybe<DateTimeFilter>;
  or?: InputMaybe<Array<InputMaybe<SettingsFilter>>>;
  otherSettings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_account_i?: InputMaybe<Int64Filter>;
  settings_addAdminsEnabled_i?: InputMaybe<Int64Filter>;
  settings_claimEnabled_i?: InputMaybe<Int64Filter>;
  settings_commentsContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_commentsContract_s?: InputMaybe<StringRegExpFilter>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_communityotingQuorumPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_communityVotingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_communityVotingEnabled_i?: InputMaybe<Int64Filter>;
  settings_communityVotingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_contractsVersion_s?: InputMaybe<StringRegExpFilter>;
  settings_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  settings_daoDescription_s?: InputMaybe<StringRegExpFilter>;
  settings_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_daoSuper_s?: InputMaybe<StringRegExpFilter>;
  settings_daoTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_daoUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_discordUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_discordURL_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationButtonText_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationURL_s?: InputMaybe<StringRegExpFilter>;
  settings_ecosystemChildPrice_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemPrice_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemPriceStaked_a?: InputMaybe<StringTermFilter>;
  settings_exploreBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_extendedLogo_s?: InputMaybe<StringRegExpFilter>;
  settings_governanceTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_headerPattern_s?: InputMaybe<StringRegExpFilter>;
  settings_homepageHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_homepageSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_husdTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hvoiceTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaCosaleContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Int64Filter>;
  settings_hyphaTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaUsdValue_a?: InputMaybe<StringTermFilter>;
  settings_isHypha_i?: InputMaybe<Int64Filter>;
  settings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_membersApplicationEnabled_i?: InputMaybe<Int64Filter>;
  settings_membersBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_membersHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_membersOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_membersOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_membersParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_membersPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_membersPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_membersSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_membersTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_msigApprovalAmount_i?: InputMaybe<Int64Filter>;
  settings_multisigEnabled_i?: InputMaybe<Int64Filter>;
  settings_myOtherOtherSetting_i?: InputMaybe<Int64Filter>;
  settings_myOtherSetting_i?: InputMaybe<Int64Filter>;
  settings_mySetting_i?: InputMaybe<Int64Filter>;
  settings_name_s?: InputMaybe<StringRegExpFilter>;
  settings_nextCommentSection_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_nextScheduledId_i?: InputMaybe<Int64Filter>;
  settings_nextScheduleId_i?: InputMaybe<Int64Filter>;
  settings_onboarderAccount_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_organisationBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_organizationHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_organizationSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_pattern_s?: InputMaybe<StringRegExpFilter>;
  settings_patternBase64_s?: InputMaybe<StringRegExpFilter>;
  settings_patternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_patternOpacity_i?: InputMaybe<Int64Filter>;
  settings_patternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_paused_i?: InputMaybe<Int64Filter>;
  settings_pegToken_a?: InputMaybe<StringTermFilter>;
  settings_pegTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_pegTokenName_s?: InputMaybe<StringRegExpFilter>;
  settings_periodDurationSec_i?: InputMaybe<Int64Filter>;
  settings_periodDurationSec_s?: InputMaybe<StringRegExpFilter>;
  settings_primaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Int64Filter>;
  settings_proposalsHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_publisherContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_redemptionsEnabled_i?: InputMaybe<Int64Filter>;
  settings_removableBannersEnabled_i?: InputMaybe<Int64Filter>;
  settings_rewardToken_a?: InputMaybe<StringTermFilter>;
  settings_rewardTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_rewardTokenName_s?: InputMaybe<StringRegExpFilter>;
  settings_rewardToPegRatio_a?: InputMaybe<StringTermFilter>;
  settings_rootNode_s?: InputMaybe<StringRegExpFilter>;
  settings_saleHyphaUsdValue_a?: InputMaybe<StringTermFilter>;
  settings_secondaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Int64Filter>;
  settings_seedsEscrowContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_seedsTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Int64Filter>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Int64Filter>;
  settings_socialChat_s?: InputMaybe<StringRegExpFilter>;
  settings_splashBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_splashOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_splashOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_splashPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_splashPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_testSet_i?: InputMaybe<Int64Filter>;
  settings_testSetting_a?: InputMaybe<StringTermFilter>;
  settings_testSetting_s?: InputMaybe<StringRegExpFilter>;
  settings_textColor_s?: InputMaybe<StringRegExpFilter>;
  settings_threshold_i?: InputMaybe<Int64Filter>;
  settings_title_s?: InputMaybe<StringRegExpFilter>;
  settings_treasuryContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_updatedDate_t?: InputMaybe<DateTimeFilter>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Int64Filter>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Int64Filter>;
  settings_upvoteRounds_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDate_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDateTime_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartTime_s?: InputMaybe<StringRegExpFilter>;
  settings_url_s?: InputMaybe<StringRegExpFilter>;
  settings_usesSeeds_i?: InputMaybe<Int64Filter>;
  settings_voiceToken_a?: InputMaybe<StringTermFilter>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Int64Filter>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<StringRegExpFilter>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentX100_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentX100_s?: InputMaybe<StringRegExpFilter>;
  settings_votingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Int64Filter>;
  settings_votingDurationSec_s?: InputMaybe<StringRegExpFilter>;
  settings_votingDurationSeconds_i?: InputMaybe<Int64Filter>;
  settings_votingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_votingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumX100_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumX100_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  tests_testingsettings_i?: InputMaybe<Int64Filter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
  urls_url_s?: InputMaybe<StringRegExpFilter>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Qfetejflafl_s?: InputMaybe<StringRegExpFilter>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<StringRegExpFilter>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<StringRegExpFilter>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<StringRegExpFilter>;
  urls_urlB14Mblffsutj_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBethenewdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchanged_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchangedho_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchangedno_s?: InputMaybe<StringRegExpFilter>;
  urls_urlChildalphadx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlChildttrx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEhgegumzynw3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFastdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFrontdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHmntptjudozg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHypha_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHyphademo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJupiter_s?: InputMaybe<StringRegExpFilter>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<StringRegExpFilter>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSeedscommons_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTestdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWrongdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<StringRegExpFilter>;
};

export enum SettingsHasFilter {
  AdminsAccountN = 'admins_account_n',
  AdminsUpdatedDateT = 'admins_updatedDate_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  EcosystemDomainS = 'ecosystem_domain_s',
  EcosystemLogoS = 'ecosystem_logo_s',
  EcosystemNameS = 'ecosystem_name_s',
  EcosystemPurposeS = 'ecosystem_purpose_s',
  OnboardersAccountN = 'onboarders_account_n',
  OnboardersUpdatedDateT = 'onboarders_updatedDate_t',
  OtherSettingsLogoS = 'otherSettings_logo_s',
  SettingsAccountI = 'settings_account_i',
  SettingsAddAdminsEnabledI = 'settings_addAdminsEnabled_i',
  SettingsClaimEnabledI = 'settings_claimEnabled_i',
  SettingsCommentsContractN = 'settings_commentsContract_n',
  SettingsCommentsContractS = 'settings_commentsContract_s',
  SettingsCommunityotingQuorumPercentI = 'settings_communityotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentS = 'settings_communityotingQuorumPercent_s',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsContractsVersionS = 'settings_contractsVersion_s',
  SettingsContractVersionS = 'settings_contractVersion_s',
  SettingsDaoDescriptionS = 'settings_daoDescription_s',
  SettingsDaoNameN = 'settings_daoName_n',
  SettingsDaoSuperS = 'settings_daoSuper_s',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardOverlayColorS = 'settings_dashboardOverlayColor_s',
  SettingsDashboardOverlayOpacityS = 'settings_dashboardOverlayOpacity_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardPatternColorS = 'settings_dashboardPatternColor_s',
  SettingsDashboardPatternOpacityS = 'settings_dashboardPatternOpacity_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDiscordUrlS = 'settings_discordURL_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsEcosystemChildPriceA = 'settings_ecosystemChildPrice_a',
  SettingsEcosystemChildPriceStakedA = 'settings_ecosystemChildPriceStaked_a',
  SettingsEcosystemPriceA = 'settings_ecosystemPrice_a',
  SettingsEcosystemPriceStakedA = 'settings_ecosystemPriceStaked_a',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsGovernanceTokenContractN = 'settings_governanceTokenContract_n',
  SettingsHeaderPatternS = 'settings_headerPattern_s',
  SettingsHomepageHeaderS = 'settings_homepageHeader_s',
  SettingsHomepageSubtitleS = 'settings_homepageSubtitle_s',
  SettingsHusdTokenContractN = 'settings_husdTokenContract_n',
  SettingsHvoiceTokenContractN = 'settings_hvoiceTokenContract_n',
  SettingsHyphaCosaleContractN = 'settings_hyphaCosaleContract_n',
  SettingsHyphaDeferralFactorX100I = 'settings_hyphaDeferralFactorX100_i',
  SettingsHyphaTokenContractN = 'settings_hyphaTokenContract_n',
  SettingsHyphaUsdValueA = 'settings_hyphaUsdValue_a',
  SettingsIsHyphaI = 'settings_isHypha_i',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersHeaderS = 'settings_membersHeader_s',
  SettingsMembersOverlayColorS = 'settings_membersOverlayColor_s',
  SettingsMembersOverlayOpacityS = 'settings_membersOverlayOpacity_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersPatternColorS = 'settings_membersPatternColor_s',
  SettingsMembersPatternOpacityS = 'settings_membersPatternOpacity_s',
  SettingsMembersSubtitleS = 'settings_membersSubtitle_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsMyOtherOtherSettingI = 'settings_myOtherOtherSetting_i',
  SettingsMyOtherSettingI = 'settings_myOtherSetting_i',
  SettingsMySettingI = 'settings_mySetting_i',
  SettingsNameS = 'settings_name_s',
  SettingsNextCommentSectionN = 'settings_nextCommentSection_n',
  SettingsNextScheduledIdI = 'settings_nextScheduledId_i',
  SettingsNextScheduleIdI = 'settings_nextScheduleId_i',
  SettingsOnboarderAccountN = 'settings_onboarderAccount_n',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationOverlayColorS = 'settings_organisationOverlayColor_s',
  SettingsOrganisationOverlayOpacityS = 'settings_organisationOverlayOpacity_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationPatternColorS = 'settings_organisationPatternColor_s',
  SettingsOrganisationPatternOpacityS = 'settings_organisationPatternOpacity_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsOrganizationHeaderS = 'settings_organizationHeader_s',
  SettingsOrganizationSubtitleS = 'settings_organizationSubtitle_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternOpacityS = 'settings_patternOpacity_s',
  SettingsPausedI = 'settings_paused_i',
  SettingsPegTokenA = 'settings_pegToken_a',
  SettingsPegTokenContractN = 'settings_pegTokenContract_n',
  SettingsPegTokenNameS = 'settings_pegTokenName_s',
  SettingsPeriodDurationSecI = 'settings_periodDurationSec_i',
  SettingsPeriodDurationSecS = 'settings_periodDurationSec_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsHeaderS = 'settings_proposalsHeader_s',
  SettingsProposalsOverlayColorS = 'settings_proposalsOverlayColor_s',
  SettingsProposalsOverlayOpacityS = 'settings_proposalsOverlayOpacity_s',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsPatternColorS = 'settings_proposalsPatternColor_s',
  SettingsProposalsPatternOpacityS = 'settings_proposalsPatternOpacity_s',
  SettingsProposalsSubtitleS = 'settings_proposalsSubtitle_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsPublisherContractN = 'settings_publisherContract_n',
  SettingsRedemptionsEnabledI = 'settings_redemptionsEnabled_i',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsRewardTokenA = 'settings_rewardToken_a',
  SettingsRewardTokenContractN = 'settings_rewardTokenContract_n',
  SettingsRewardTokenNameS = 'settings_rewardTokenName_s',
  SettingsRewardToPegRatioA = 'settings_rewardToPegRatio_a',
  SettingsRootNodeS = 'settings_rootNode_s',
  SettingsSaleHyphaUsdValueA = 'settings_saleHyphaUsdValue_a',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSeedsDeferralFactorX100I = 'settings_seedsDeferralFactorX100_i',
  SettingsSeedsEscrowContractN = 'settings_seedsEscrowContract_n',
  SettingsSeedsTokenContractN = 'settings_seedsTokenContract_n',
  SettingsSettingsVotingAlignmentX100II = 'settings_settingsVotingAlignmentX100I_i',
  SettingsSettingsVotingQuorumX100II = 'settings_settingsVotingQuorumX100I_i',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsSplashOverlayColorS = 'settings_splashOverlayColor_s',
  SettingsSplashOverlayOpacityS = 'settings_splashOverlayOpacity_s',
  SettingsSplashPatternColorS = 'settings_splashPatternColor_s',
  SettingsSplashPatternOpacityS = 'settings_splashPatternOpacity_s',
  SettingsTestSetI = 'settings_testSet_i',
  SettingsTestSettingA = 'settings_testSetting_a',
  SettingsTestSettingS = 'settings_testSetting_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsThresholdI = 'settings_threshold_i',
  SettingsTitleS = 'settings_title_s',
  SettingsTreasuryContractN = 'settings_treasuryContract_n',
  SettingsUpdatedDateT = 'settings_updatedDate_t',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateS = 'settings_upvoteStartDate_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUpvoteStartTimeS = 'settings_upvoteStartTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsUsesSeedsI = 'settings_usesSeeds_i',
  SettingsVoiceTokenA = 'settings_voiceToken_a',
  SettingsVoiceTokenDecayPeriodI = 'settings_voiceTokenDecayPeriod_i',
  SettingsVoiceTokenDecayPeriodS = 'settings_voiceTokenDecayPeriod_s',
  SettingsVoiceTokenDecayPerPeriodX10MI = 'settings_voiceTokenDecayPerPeriodX10M_i',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentPercentS = 'settings_votingAlignmentPercent_s',
  SettingsVotingAlignmentPercentX100I = 'settings_votingAlignmentPercentX100_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingAlignmentX100S = 'settings_votingAlignmentX100_s',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVOtingdurationsecI = 'settings_vOTINGDURATIONSEC_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingDurationSecondsI = 'settings_votingDurationSeconds_i',
  SettingsVotingMethodS = 'settings_votingMethod_s',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumPercentS = 'settings_votingQuorumPercent_s',
  SettingsVotingQuorumPercentX100I = 'settings_votingQuorumPercentX100_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SettingsVotingQuorumX100S = 'settings_votingQuorumX100_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  TestsTestingsettingsI = 'tests_testingsettings_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  UrlsUrlS = 'urls_url_s',
  UrlsUrl1N5Kz3GemsegS = 'urls_url1N5Kz3Gemseg_s',
  UrlsUrl1QfetejflaflS = 'urls_url1Qfetejflafl_s',
  UrlsUrl2T4Fdni1StybS = 'urls_url2T4Fdni1Styb_s',
  UrlsUrl2Yfg3Nvby1ZlS = 'urls_url2Yfg3Nvby1Zl_s',
  UrlsUrl3Lk4NzggpubiS = 'urls_url3Lk4Nzggpubi_s',
  UrlsUrl5Lsfqinc2ZybS = 'urls_url5Lsfqinc2Zyb_s',
  UrlsUrl5Vn4YbbadgjjS = 'urls_url5Vn4Ybbadgjj_s',
  UrlsUrlB14MblffsutjS = 'urls_urlB14Mblffsutj_s',
  UrlsUrlBethenewdaoS = 'urls_urlBethenewdao_s',
  UrlsUrlBtchangedS = 'urls_urlBtchanged_s',
  UrlsUrlBtchangedhoS = 'urls_urlBtchangedho_s',
  UrlsUrlBtchangednoS = 'urls_urlBtchangedno_s',
  UrlsUrlChildalphadxS = 'urls_urlChildalphadx_s',
  UrlsUrlChildttrxS = 'urls_urlChildttrx_s',
  UrlsUrlDd3YmiavtdcyS = 'urls_urlDd3Ymiavtdcy_s',
  UrlsUrlDl51QmvjsegoS = 'urls_urlDl51Qmvjsego_s',
  UrlsUrlDnsz1CbwxpapS = 'urls_urlDnsz1Cbwxpap_s',
  UrlsUrlEdm3Mnsg1HnsS = 'urls_urlEdm3Mnsg1Hns_s',
  UrlsUrlEghlh3ZnzqwrS = 'urls_urlEghlh3Znzqwr_s',
  UrlsUrlEhgegumzynw3S = 'urls_urlEhgegumzynw3_s',
  UrlsUrlEz2Elj1Cje1ZS = 'urls_urlEz2Elj1Cje1Z_s',
  UrlsUrlFastdaoS = 'urls_urlFastdao_s',
  UrlsUrlFrontdaoS = 'urls_urlFrontdao_s',
  UrlsUrlG1Plywuz5OgbS = 'urls_urlG1Plywuz5Ogb_s',
  UrlsUrlHmntptjudozgS = 'urls_urlHmntptjudozg_s',
  UrlsUrlHyphaS = 'urls_urlHypha_s',
  UrlsUrlHyphademoS = 'urls_urlHyphademo_s',
  UrlsUrlJupiterS = 'urls_urlJupiter_s',
  UrlsUrlK5YhstzkcbrkS = 'urls_urlK5Yhstzkcbrk_s',
  UrlsUrlKd2U1Nqd5ZpmS = 'urls_urlKd2U1Nqd5Zpm_s',
  UrlsUrlKsjjde4Hbn2US = 'urls_urlKsjjde4Hbn2U_s',
  UrlsUrlKvqzvpqle2OiS = 'urls_urlKvqzvpqle2Oi_s',
  UrlsUrlL54Gm5HzawwgS = 'urls_urlL54Gm5Hzawwg_s',
  UrlsUrlMbaajxm41HfaS = 'urls_urlMbaajxm41Hfa_s',
  UrlsUrlN11Wig1Pds3WS = 'urls_urlN11Wig1Pds3W_s',
  UrlsUrlNa1Sonzbvtk5S = 'urls_urlNa1Sonzbvtk5_s',
  UrlsUrlO3Tzzbjaraj3S = 'urls_urlO3Tzzbjaraj3_s',
  UrlsUrlPgkuvuyd5TkfS = 'urls_urlPgkuvuyd5Tkf_s',
  UrlsUrlPkpcaltfb2AnS = 'urls_urlPkpcaltfb2An_s',
  UrlsUrlPtogan1Cqjp2S = 'urls_urlPtogan1Cqjp2_s',
  UrlsUrlR3Dtwhyei41KS = 'urls_urlR3Dtwhyei41K_s',
  UrlsUrlSeedscommonsS = 'urls_urlSeedscommons_s',
  UrlsUrlTc3Uweyd2A2CS = 'urls_urlTc3Uweyd2A2C_s',
  UrlsUrlTestdaoS = 'urls_urlTestdao_s',
  UrlsUrlTqsre5WhjjbyS = 'urls_urlTqsre5Whjjby_s',
  UrlsUrlUwztsw1L3Na5S = 'urls_urlUwztsw1L3Na5_s',
  UrlsUrlUzihb11Q5PpiS = 'urls_urlUzihb11Q5Ppi_s',
  UrlsUrlVqsgv5Mheq1ZS = 'urls_urlVqsgv5Mheq1Z_s',
  UrlsUrlVse4A2Ttg3OnS = 'urls_urlVse4A2Ttg3On_s',
  UrlsUrlVx35Wgozl15SS = 'urls_urlVx35Wgozl15S_s',
  UrlsUrlWdxuocdyahafS = 'urls_urlWdxuocdyahaf_s',
  UrlsUrlWrongdaoS = 'urls_urlWrongdao_s',
  UrlsUrlX5Gpg2Kk14RpS = 'urls_urlX5Gpg2Kk14Rp_s',
  UrlsUrlXx4Pyzevrrz3S = 'urls_urlXx4Pyzevrrz3_s',
  UrlsUrlYjtij3OxqizoS = 'urls_urlYjtij3Oxqizo_s',
  UrlsUrlYxypcwoh1PmnS = 'urls_urlYxypcwoh1Pmn_s'
}

export type SettingsAggregateResult = {
  __typename?: 'SettingsAggregateResult';
  admins_account_nMax?: Maybe<Scalars['String']>;
  admins_account_nMin?: Maybe<Scalars['String']>;
  admins_updatedDate_tMax?: Maybe<Scalars['DateTime']>;
  admins_updatedDate_tMin?: Maybe<Scalars['DateTime']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  ecosystem_domain_sMax?: Maybe<Scalars['String']>;
  ecosystem_domain_sMin?: Maybe<Scalars['String']>;
  ecosystem_logo_sMax?: Maybe<Scalars['String']>;
  ecosystem_logo_sMin?: Maybe<Scalars['String']>;
  ecosystem_name_sMax?: Maybe<Scalars['String']>;
  ecosystem_name_sMin?: Maybe<Scalars['String']>;
  ecosystem_purpose_sMax?: Maybe<Scalars['String']>;
  ecosystem_purpose_sMin?: Maybe<Scalars['String']>;
  onboarders_account_nMax?: Maybe<Scalars['String']>;
  onboarders_account_nMin?: Maybe<Scalars['String']>;
  onboarders_updatedDate_tMax?: Maybe<Scalars['DateTime']>;
  onboarders_updatedDate_tMin?: Maybe<Scalars['DateTime']>;
  otherSettings_logo_sMax?: Maybe<Scalars['String']>;
  otherSettings_logo_sMin?: Maybe<Scalars['String']>;
  settings_account_iAvg?: Maybe<Scalars['Float']>;
  settings_account_iMax?: Maybe<Scalars['Int64']>;
  settings_account_iMin?: Maybe<Scalars['Int64']>;
  settings_account_iSum?: Maybe<Scalars['Int64']>;
  settings_addAdminsEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_addAdminsEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_addAdminsEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_addAdminsEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_claimEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_claimEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_claimEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_claimEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_commentsContract_nMax?: Maybe<Scalars['String']>;
  settings_commentsContract_nMin?: Maybe<Scalars['String']>;
  settings_commentsContract_sMax?: Maybe<Scalars['String']>;
  settings_commentsContract_sMin?: Maybe<Scalars['String']>;
  settings_communityotingQuorumPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_communityotingQuorumPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_sMax?: Maybe<Scalars['String']>;
  settings_communityotingQuorumPercent_sMin?: Maybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingAlignmentPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingAlignmentPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingAlignmentPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingDurationSec_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_communityVotingMethod_sMax?: Maybe<Scalars['String']>;
  settings_communityVotingMethod_sMin?: Maybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_communityVotingQuorumPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_communityVotingQuorumPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_communityVotingQuorumPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_contractsVersion_sMax?: Maybe<Scalars['String']>;
  settings_contractsVersion_sMin?: Maybe<Scalars['String']>;
  settings_contractVersion_sMax?: Maybe<Scalars['String']>;
  settings_contractVersion_sMin?: Maybe<Scalars['String']>;
  settings_daoDescription_sMax?: Maybe<Scalars['String']>;
  settings_daoDescription_sMin?: Maybe<Scalars['String']>;
  settings_daoName_nMax?: Maybe<Scalars['String']>;
  settings_daoName_nMin?: Maybe<Scalars['String']>;
  settings_daoSuper_sMax?: Maybe<Scalars['String']>;
  settings_daoSuper_sMin?: Maybe<Scalars['String']>;
  settings_daoTitle_sMax?: Maybe<Scalars['String']>;
  settings_daoTitle_sMin?: Maybe<Scalars['String']>;
  settings_daoUrl_sMax?: Maybe<Scalars['String']>;
  settings_daoUrl_sMin?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_dashboardOverlayColor_sMax?: Maybe<Scalars['String']>;
  settings_dashboardOverlayColor_sMin?: Maybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_sMax?: Maybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_sMin?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_sMax?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_sMin?: Maybe<Scalars['String']>;
  settings_dashboardPatternColor_sMax?: Maybe<Scalars['String']>;
  settings_dashboardPatternColor_sMin?: Maybe<Scalars['String']>;
  settings_dashboardPatternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_dashboardPatternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_dashboardTitle_sMax?: Maybe<Scalars['String']>;
  settings_dashboardTitle_sMin?: Maybe<Scalars['String']>;
  settings_discordUrl_sMax?: Maybe<Scalars['String']>;
  settings_discordURL_sMax?: Maybe<Scalars['String']>;
  settings_discordUrl_sMin?: Maybe<Scalars['String']>;
  settings_discordURL_sMin?: Maybe<Scalars['String']>;
  settings_documentationButtonText_sMax?: Maybe<Scalars['String']>;
  settings_documentationButtonText_sMin?: Maybe<Scalars['String']>;
  settings_documentationUrl_sMax?: Maybe<Scalars['String']>;
  settings_documentationURL_sMax?: Maybe<Scalars['String']>;
  settings_documentationUrl_sMin?: Maybe<Scalars['String']>;
  settings_documentationURL_sMin?: Maybe<Scalars['String']>;
  settings_ecosystemChildPrice_aMax?: Maybe<Scalars['String']>;
  settings_ecosystemChildPrice_aMin?: Maybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_aMax?: Maybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_aMin?: Maybe<Scalars['String']>;
  settings_ecosystemPrice_aMax?: Maybe<Scalars['String']>;
  settings_ecosystemPrice_aMin?: Maybe<Scalars['String']>;
  settings_ecosystemPriceStaked_aMax?: Maybe<Scalars['String']>;
  settings_ecosystemPriceStaked_aMin?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_exploreParagraph_sMax?: Maybe<Scalars['String']>;
  settings_exploreParagraph_sMin?: Maybe<Scalars['String']>;
  settings_exploreTitle_sMax?: Maybe<Scalars['String']>;
  settings_exploreTitle_sMin?: Maybe<Scalars['String']>;
  settings_extendedLogo_sMax?: Maybe<Scalars['String']>;
  settings_extendedLogo_sMin?: Maybe<Scalars['String']>;
  settings_governanceTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_governanceTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_headerPattern_sMax?: Maybe<Scalars['String']>;
  settings_headerPattern_sMin?: Maybe<Scalars['String']>;
  settings_homepageHeader_sMax?: Maybe<Scalars['String']>;
  settings_homepageHeader_sMin?: Maybe<Scalars['String']>;
  settings_homepageSubtitle_sMax?: Maybe<Scalars['String']>;
  settings_homepageSubtitle_sMin?: Maybe<Scalars['String']>;
  settings_husdTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_husdTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_hvoiceTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_hvoiceTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_hyphaCosaleContract_nMax?: Maybe<Scalars['String']>;
  settings_hyphaCosaleContract_nMin?: Maybe<Scalars['String']>;
  settings_hyphaDeferralFactorX100_iAvg?: Maybe<Scalars['Float']>;
  settings_hyphaDeferralFactorX100_iMax?: Maybe<Scalars['Int64']>;
  settings_hyphaDeferralFactorX100_iMin?: Maybe<Scalars['Int64']>;
  settings_hyphaDeferralFactorX100_iSum?: Maybe<Scalars['Int64']>;
  settings_hyphaTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_hyphaTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_hyphaUsdValue_aMax?: Maybe<Scalars['String']>;
  settings_hyphaUsdValue_aMin?: Maybe<Scalars['String']>;
  settings_isHypha_iAvg?: Maybe<Scalars['Float']>;
  settings_isHypha_iMax?: Maybe<Scalars['Int64']>;
  settings_isHypha_iMin?: Maybe<Scalars['Int64']>;
  settings_isHypha_iSum?: Maybe<Scalars['Int64']>;
  settings_logo_sMax?: Maybe<Scalars['String']>;
  settings_logo_sMin?: Maybe<Scalars['String']>;
  settings_membersApplicationEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_membersApplicationEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_membersApplicationEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_membersApplicationEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_membersBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_membersBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_membersHeader_sMax?: Maybe<Scalars['String']>;
  settings_membersHeader_sMin?: Maybe<Scalars['String']>;
  settings_membersOverlayColor_sMax?: Maybe<Scalars['String']>;
  settings_membersOverlayColor_sMin?: Maybe<Scalars['String']>;
  settings_membersOverlayOpacity_sMax?: Maybe<Scalars['String']>;
  settings_membersOverlayOpacity_sMin?: Maybe<Scalars['String']>;
  settings_membersParagraph_sMax?: Maybe<Scalars['String']>;
  settings_membersParagraph_sMin?: Maybe<Scalars['String']>;
  settings_membersPatternColor_sMax?: Maybe<Scalars['String']>;
  settings_membersPatternColor_sMin?: Maybe<Scalars['String']>;
  settings_membersPatternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_membersPatternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_membersSubtitle_sMax?: Maybe<Scalars['String']>;
  settings_membersSubtitle_sMin?: Maybe<Scalars['String']>;
  settings_membersTitle_sMax?: Maybe<Scalars['String']>;
  settings_membersTitle_sMin?: Maybe<Scalars['String']>;
  settings_msigApprovalAmount_iAvg?: Maybe<Scalars['Float']>;
  settings_msigApprovalAmount_iMax?: Maybe<Scalars['Int64']>;
  settings_msigApprovalAmount_iMin?: Maybe<Scalars['Int64']>;
  settings_msigApprovalAmount_iSum?: Maybe<Scalars['Int64']>;
  settings_multisigEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_multisigEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_multisigEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_multisigEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_iAvg?: Maybe<Scalars['Float']>;
  settings_myOtherOtherSetting_iMax?: Maybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_iMin?: Maybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_iSum?: Maybe<Scalars['Int64']>;
  settings_myOtherSetting_iAvg?: Maybe<Scalars['Float']>;
  settings_myOtherSetting_iMax?: Maybe<Scalars['Int64']>;
  settings_myOtherSetting_iMin?: Maybe<Scalars['Int64']>;
  settings_myOtherSetting_iSum?: Maybe<Scalars['Int64']>;
  settings_mySetting_iAvg?: Maybe<Scalars['Float']>;
  settings_mySetting_iMax?: Maybe<Scalars['Int64']>;
  settings_mySetting_iMin?: Maybe<Scalars['Int64']>;
  settings_mySetting_iSum?: Maybe<Scalars['Int64']>;
  settings_name_sMax?: Maybe<Scalars['String']>;
  settings_name_sMin?: Maybe<Scalars['String']>;
  settings_nextCommentSection_nMax?: Maybe<Scalars['String']>;
  settings_nextCommentSection_nMin?: Maybe<Scalars['String']>;
  settings_nextScheduledId_iAvg?: Maybe<Scalars['Float']>;
  settings_nextScheduledId_iMax?: Maybe<Scalars['Int64']>;
  settings_nextScheduledId_iMin?: Maybe<Scalars['Int64']>;
  settings_nextScheduledId_iSum?: Maybe<Scalars['Int64']>;
  settings_nextScheduleId_iAvg?: Maybe<Scalars['Float']>;
  settings_nextScheduleId_iMax?: Maybe<Scalars['Int64']>;
  settings_nextScheduleId_iMin?: Maybe<Scalars['Int64']>;
  settings_nextScheduleId_iSum?: Maybe<Scalars['Int64']>;
  settings_onboarderAccount_nMax?: Maybe<Scalars['String']>;
  settings_onboarderAccount_nMin?: Maybe<Scalars['String']>;
  settings_organisationBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_organisationBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_organisationOverlayColor_sMax?: Maybe<Scalars['String']>;
  settings_organisationOverlayColor_sMin?: Maybe<Scalars['String']>;
  settings_organisationOverlayOpacity_sMax?: Maybe<Scalars['String']>;
  settings_organisationOverlayOpacity_sMin?: Maybe<Scalars['String']>;
  settings_organisationParagraph_sMax?: Maybe<Scalars['String']>;
  settings_organisationParagraph_sMin?: Maybe<Scalars['String']>;
  settings_organisationPatternColor_sMax?: Maybe<Scalars['String']>;
  settings_organisationPatternColor_sMin?: Maybe<Scalars['String']>;
  settings_organisationPatternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_organisationPatternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_organisationTitle_sMax?: Maybe<Scalars['String']>;
  settings_organisationTitle_sMin?: Maybe<Scalars['String']>;
  settings_organizationHeader_sMax?: Maybe<Scalars['String']>;
  settings_organizationHeader_sMin?: Maybe<Scalars['String']>;
  settings_organizationSubtitle_sMax?: Maybe<Scalars['String']>;
  settings_organizationSubtitle_sMin?: Maybe<Scalars['String']>;
  settings_pattern_sMax?: Maybe<Scalars['String']>;
  settings_pattern_sMin?: Maybe<Scalars['String']>;
  settings_patternBase64_sMax?: Maybe<Scalars['String']>;
  settings_patternBase64_sMin?: Maybe<Scalars['String']>;
  settings_patternColor_sMax?: Maybe<Scalars['String']>;
  settings_patternColor_sMin?: Maybe<Scalars['String']>;
  settings_patternOpacity_iAvg?: Maybe<Scalars['Float']>;
  settings_patternOpacity_iMax?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_iMin?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_iSum?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_patternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_paused_iAvg?: Maybe<Scalars['Float']>;
  settings_paused_iMax?: Maybe<Scalars['Int64']>;
  settings_paused_iMin?: Maybe<Scalars['Int64']>;
  settings_paused_iSum?: Maybe<Scalars['Int64']>;
  settings_pegToken_aMax?: Maybe<Scalars['String']>;
  settings_pegToken_aMin?: Maybe<Scalars['String']>;
  settings_pegTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_pegTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_pegTokenName_sMax?: Maybe<Scalars['String']>;
  settings_pegTokenName_sMin?: Maybe<Scalars['String']>;
  settings_periodDurationSec_iAvg?: Maybe<Scalars['Float']>;
  settings_periodDurationSec_iMax?: Maybe<Scalars['Int64']>;
  settings_periodDurationSec_iMin?: Maybe<Scalars['Int64']>;
  settings_periodDurationSec_iSum?: Maybe<Scalars['Int64']>;
  settings_periodDurationSec_sMax?: Maybe<Scalars['String']>;
  settings_periodDurationSec_sMin?: Maybe<Scalars['String']>;
  settings_primaryColor_sMax?: Maybe<Scalars['String']>;
  settings_primaryColor_sMin?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_proposalsCreationEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_proposalsCreationEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_proposalsCreationEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_proposalsCreationEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_proposalsHeader_sMax?: Maybe<Scalars['String']>;
  settings_proposalsHeader_sMin?: Maybe<Scalars['String']>;
  settings_proposalsOverlayColor_sMax?: Maybe<Scalars['String']>;
  settings_proposalsOverlayColor_sMin?: Maybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_sMax?: Maybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_sMin?: Maybe<Scalars['String']>;
  settings_proposalsParagraph_sMax?: Maybe<Scalars['String']>;
  settings_proposalsParagraph_sMin?: Maybe<Scalars['String']>;
  settings_proposalsPatternColor_sMax?: Maybe<Scalars['String']>;
  settings_proposalsPatternColor_sMin?: Maybe<Scalars['String']>;
  settings_proposalsPatternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_proposalsPatternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_proposalsSubtitle_sMax?: Maybe<Scalars['String']>;
  settings_proposalsSubtitle_sMin?: Maybe<Scalars['String']>;
  settings_proposalsTitle_sMax?: Maybe<Scalars['String']>;
  settings_proposalsTitle_sMin?: Maybe<Scalars['String']>;
  settings_publisherContract_nMax?: Maybe<Scalars['String']>;
  settings_publisherContract_nMin?: Maybe<Scalars['String']>;
  settings_redemptionsEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_redemptionsEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_redemptionsEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_redemptionsEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_iAvg?: Maybe<Scalars['Float']>;
  settings_removableBannersEnabled_iMax?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_iMin?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_iSum?: Maybe<Scalars['Int64']>;
  settings_rewardToken_aMax?: Maybe<Scalars['String']>;
  settings_rewardToken_aMin?: Maybe<Scalars['String']>;
  settings_rewardTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_rewardTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_rewardTokenName_sMax?: Maybe<Scalars['String']>;
  settings_rewardTokenName_sMin?: Maybe<Scalars['String']>;
  settings_rewardToPegRatio_aMax?: Maybe<Scalars['String']>;
  settings_rewardToPegRatio_aMin?: Maybe<Scalars['String']>;
  settings_rootNode_sMax?: Maybe<Scalars['String']>;
  settings_rootNode_sMin?: Maybe<Scalars['String']>;
  settings_saleHyphaUsdValue_aMax?: Maybe<Scalars['String']>;
  settings_saleHyphaUsdValue_aMin?: Maybe<Scalars['String']>;
  settings_secondaryColor_sMax?: Maybe<Scalars['String']>;
  settings_secondaryColor_sMin?: Maybe<Scalars['String']>;
  settings_seedsDeferralFactorX100_iAvg?: Maybe<Scalars['Float']>;
  settings_seedsDeferralFactorX100_iMax?: Maybe<Scalars['Int64']>;
  settings_seedsDeferralFactorX100_iMin?: Maybe<Scalars['Int64']>;
  settings_seedsDeferralFactorX100_iSum?: Maybe<Scalars['Int64']>;
  settings_seedsEscrowContract_nMax?: Maybe<Scalars['String']>;
  settings_seedsEscrowContract_nMin?: Maybe<Scalars['String']>;
  settings_seedsTokenContract_nMax?: Maybe<Scalars['String']>;
  settings_seedsTokenContract_nMin?: Maybe<Scalars['String']>;
  settings_settingsVotingAlignmentX100I_iAvg?: Maybe<Scalars['Float']>;
  settings_settingsVotingAlignmentX100I_iMax?: Maybe<Scalars['Int64']>;
  settings_settingsVotingAlignmentX100I_iMin?: Maybe<Scalars['Int64']>;
  settings_settingsVotingAlignmentX100I_iSum?: Maybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_iAvg?: Maybe<Scalars['Float']>;
  settings_settingsVotingQuorumX100I_iMax?: Maybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_iMin?: Maybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_iSum?: Maybe<Scalars['Int64']>;
  settings_socialChat_sMax?: Maybe<Scalars['String']>;
  settings_socialChat_sMin?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_sMax?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_sMin?: Maybe<Scalars['String']>;
  settings_splashOverlayColor_sMax?: Maybe<Scalars['String']>;
  settings_splashOverlayColor_sMin?: Maybe<Scalars['String']>;
  settings_splashOverlayOpacity_sMax?: Maybe<Scalars['String']>;
  settings_splashOverlayOpacity_sMin?: Maybe<Scalars['String']>;
  settings_splashPatternColor_sMax?: Maybe<Scalars['String']>;
  settings_splashPatternColor_sMin?: Maybe<Scalars['String']>;
  settings_splashPatternOpacity_sMax?: Maybe<Scalars['String']>;
  settings_splashPatternOpacity_sMin?: Maybe<Scalars['String']>;
  settings_testSet_iAvg?: Maybe<Scalars['Float']>;
  settings_testSet_iMax?: Maybe<Scalars['Int64']>;
  settings_testSet_iMin?: Maybe<Scalars['Int64']>;
  settings_testSet_iSum?: Maybe<Scalars['Int64']>;
  settings_testSetting_aMax?: Maybe<Scalars['String']>;
  settings_testSetting_aMin?: Maybe<Scalars['String']>;
  settings_testSetting_sMax?: Maybe<Scalars['String']>;
  settings_testSetting_sMin?: Maybe<Scalars['String']>;
  settings_textColor_sMax?: Maybe<Scalars['String']>;
  settings_textColor_sMin?: Maybe<Scalars['String']>;
  settings_threshold_iAvg?: Maybe<Scalars['Float']>;
  settings_threshold_iMax?: Maybe<Scalars['Int64']>;
  settings_threshold_iMin?: Maybe<Scalars['Int64']>;
  settings_threshold_iSum?: Maybe<Scalars['Int64']>;
  settings_title_sMax?: Maybe<Scalars['String']>;
  settings_title_sMin?: Maybe<Scalars['String']>;
  settings_treasuryContract_nMax?: Maybe<Scalars['String']>;
  settings_treasuryContract_nMin?: Maybe<Scalars['String']>;
  settings_updatedDate_tMax?: Maybe<Scalars['DateTime']>;
  settings_updatedDate_tMin?: Maybe<Scalars['DateTime']>;
  settings_upvoteCheifDelegateCount_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteCheifDelegateCount_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateCount_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateCount_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteCheifDelegateDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteHeadDelegateDuration_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iAvg?: Maybe<Scalars['Float']>;
  settings_upvoteHeadDelegateRound_iMax?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iMin?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_iSum?: Maybe<Scalars['Int64']>;
  settings_upvoteRounds_sMax?: Maybe<Scalars['String']>;
  settings_upvoteRounds_sMin?: Maybe<Scalars['String']>;
  settings_upvoteStartDate_sMax?: Maybe<Scalars['String']>;
  settings_upvoteStartDate_sMin?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_sMax?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_sMin?: Maybe<Scalars['String']>;
  settings_upvoteStartTime_sMax?: Maybe<Scalars['String']>;
  settings_upvoteStartTime_sMin?: Maybe<Scalars['String']>;
  settings_url_sMax?: Maybe<Scalars['String']>;
  settings_url_sMin?: Maybe<Scalars['String']>;
  settings_usesSeeds_iAvg?: Maybe<Scalars['Float']>;
  settings_usesSeeds_iMax?: Maybe<Scalars['Int64']>;
  settings_usesSeeds_iMin?: Maybe<Scalars['Int64']>;
  settings_usesSeeds_iSum?: Maybe<Scalars['Int64']>;
  settings_voiceToken_aMax?: Maybe<Scalars['String']>;
  settings_voiceToken_aMin?: Maybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_iAvg?: Maybe<Scalars['Float']>;
  settings_voiceTokenDecayPeriod_iMax?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_iMin?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_iSum?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_sMax?: Maybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_sMin?: Maybe<Scalars['String']>;
  settings_voiceTokenDecayPerPeriodX10M_iAvg?: Maybe<Scalars['Float']>;
  settings_voiceTokenDecayPerPeriodX10M_iMax?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPerPeriodX10M_iMin?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPerPeriodX10M_iSum?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_votingAlignmentPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_sMax?: Maybe<Scalars['String']>;
  settings_votingAlignmentPercent_sMin?: Maybe<Scalars['String']>;
  settings_votingAlignmentPercentX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingAlignmentPercentX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercentX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercentX100_iSum?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingAlignmentX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_iSum?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_sMax?: Maybe<Scalars['String']>;
  settings_votingAlignmentX100_sMin?: Maybe<Scalars['String']>;
  settings_votingDurationSec_iAvg?: Maybe<Scalars['Float']>;
  settings_vOTINGDURATIONSEC_iAvg?: Maybe<Scalars['Float']>;
  settings_votingDurationSec_iMax?: Maybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_iMax?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_iMin?: Maybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_iMin?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_iSum?: Maybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_iSum?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_sMax?: Maybe<Scalars['String']>;
  settings_votingDurationSec_sMin?: Maybe<Scalars['String']>;
  settings_votingDurationSeconds_iAvg?: Maybe<Scalars['Float']>;
  settings_votingDurationSeconds_iMax?: Maybe<Scalars['Int64']>;
  settings_votingDurationSeconds_iMin?: Maybe<Scalars['Int64']>;
  settings_votingDurationSeconds_iSum?: Maybe<Scalars['Int64']>;
  settings_votingMethod_sMax?: Maybe<Scalars['String']>;
  settings_votingMethod_sMin?: Maybe<Scalars['String']>;
  settings_votingQuorumPercent_iAvg?: Maybe<Scalars['Float']>;
  settings_votingQuorumPercent_iMax?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_iMin?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_iSum?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_sMax?: Maybe<Scalars['String']>;
  settings_votingQuorumPercent_sMin?: Maybe<Scalars['String']>;
  settings_votingQuorumPercentX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingQuorumPercentX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercentX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercentX100_iSum?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iAvg?: Maybe<Scalars['Float']>;
  settings_votingQuorumX100_iMax?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iMin?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_iSum?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_sMax?: Maybe<Scalars['String']>;
  settings_votingQuorumX100_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  tests_testingsettings_iAvg?: Maybe<Scalars['Float']>;
  tests_testingsettings_iMax?: Maybe<Scalars['Int64']>;
  tests_testingsettings_iMin?: Maybe<Scalars['Int64']>;
  tests_testingsettings_iSum?: Maybe<Scalars['Int64']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
  urls_url_sMax?: Maybe<Scalars['String']>;
  urls_url_sMin?: Maybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_sMax?: Maybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_sMin?: Maybe<Scalars['String']>;
  urls_url1Qfetejflafl_sMax?: Maybe<Scalars['String']>;
  urls_url1Qfetejflafl_sMin?: Maybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_sMax?: Maybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_sMin?: Maybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_sMax?: Maybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_sMin?: Maybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_sMax?: Maybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_sMin?: Maybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_sMax?: Maybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_sMin?: Maybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_sMax?: Maybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_sMin?: Maybe<Scalars['String']>;
  urls_urlB14Mblffsutj_sMax?: Maybe<Scalars['String']>;
  urls_urlB14Mblffsutj_sMin?: Maybe<Scalars['String']>;
  urls_urlBethenewdao_sMax?: Maybe<Scalars['String']>;
  urls_urlBethenewdao_sMin?: Maybe<Scalars['String']>;
  urls_urlBtchanged_sMax?: Maybe<Scalars['String']>;
  urls_urlBtchanged_sMin?: Maybe<Scalars['String']>;
  urls_urlBtchangedho_sMax?: Maybe<Scalars['String']>;
  urls_urlBtchangedho_sMin?: Maybe<Scalars['String']>;
  urls_urlBtchangedno_sMax?: Maybe<Scalars['String']>;
  urls_urlBtchangedno_sMin?: Maybe<Scalars['String']>;
  urls_urlChildalphadx_sMax?: Maybe<Scalars['String']>;
  urls_urlChildalphadx_sMin?: Maybe<Scalars['String']>;
  urls_urlChildttrx_sMax?: Maybe<Scalars['String']>;
  urls_urlChildttrx_sMin?: Maybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_sMax?: Maybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_sMin?: Maybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_sMax?: Maybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_sMin?: Maybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_sMax?: Maybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_sMin?: Maybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_sMax?: Maybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_sMin?: Maybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_sMax?: Maybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_sMin?: Maybe<Scalars['String']>;
  urls_urlEhgegumzynw3_sMax?: Maybe<Scalars['String']>;
  urls_urlEhgegumzynw3_sMin?: Maybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_sMax?: Maybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_sMin?: Maybe<Scalars['String']>;
  urls_urlFastdao_sMax?: Maybe<Scalars['String']>;
  urls_urlFastdao_sMin?: Maybe<Scalars['String']>;
  urls_urlFrontdao_sMax?: Maybe<Scalars['String']>;
  urls_urlFrontdao_sMin?: Maybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_sMax?: Maybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_sMin?: Maybe<Scalars['String']>;
  urls_urlHmntptjudozg_sMax?: Maybe<Scalars['String']>;
  urls_urlHmntptjudozg_sMin?: Maybe<Scalars['String']>;
  urls_urlHypha_sMax?: Maybe<Scalars['String']>;
  urls_urlHypha_sMin?: Maybe<Scalars['String']>;
  urls_urlHyphademo_sMax?: Maybe<Scalars['String']>;
  urls_urlHyphademo_sMin?: Maybe<Scalars['String']>;
  urls_urlJupiter_sMax?: Maybe<Scalars['String']>;
  urls_urlJupiter_sMin?: Maybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_sMax?: Maybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_sMin?: Maybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_sMax?: Maybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_sMin?: Maybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_sMax?: Maybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_sMin?: Maybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_sMax?: Maybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_sMin?: Maybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_sMax?: Maybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_sMin?: Maybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_sMax?: Maybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_sMin?: Maybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_sMax?: Maybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_sMin?: Maybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_sMax?: Maybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_sMin?: Maybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_sMax?: Maybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_sMin?: Maybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_sMax?: Maybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_sMin?: Maybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_sMax?: Maybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_sMin?: Maybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_sMax?: Maybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_sMin?: Maybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_sMax?: Maybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_sMin?: Maybe<Scalars['String']>;
  urls_urlSeedscommons_sMax?: Maybe<Scalars['String']>;
  urls_urlSeedscommons_sMin?: Maybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_sMax?: Maybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_sMin?: Maybe<Scalars['String']>;
  urls_urlTestdao_sMax?: Maybe<Scalars['String']>;
  urls_urlTestdao_sMin?: Maybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_sMax?: Maybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_sMin?: Maybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_sMax?: Maybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_sMin?: Maybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_sMax?: Maybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_sMin?: Maybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_sMax?: Maybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_sMin?: Maybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_sMax?: Maybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_sMin?: Maybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_sMax?: Maybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_sMin?: Maybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_sMax?: Maybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_sMin?: Maybe<Scalars['String']>;
  urls_urlWrongdao_sMax?: Maybe<Scalars['String']>;
  urls_urlWrongdao_sMin?: Maybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_sMax?: Maybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_sMin?: Maybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_sMax?: Maybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_sMin?: Maybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_sMax?: Maybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_sMin?: Maybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_sMax?: Maybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_sMin?: Maybe<Scalars['String']>;
};

export type SuspendFilter = {
  and?: InputMaybe<Array<InputMaybe<SuspendFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_originalDocument_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<SuspendHasFilter>>>;
  not?: InputMaybe<SuspendFilter>;
  or?: InputMaybe<Array<InputMaybe<SuspendFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum SuspendHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Suspend = 'suspend',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type SuspendAggregateResult = {
  __typename?: 'SuspendAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']>;
  details_originalDocument_iAvg?: Maybe<Scalars['Float']>;
  details_originalDocument_iMax?: Maybe<Scalars['Int64']>;
  details_originalDocument_iMin?: Maybe<Scalars['Int64']>;
  details_originalDocument_iSum?: Maybe<Scalars['Int64']>;
  details_state_sMax?: Maybe<Scalars['String']>;
  details_state_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']>;
  system_commentName_nMax?: Maybe<Scalars['String']>;
  system_commentName_nMin?: Maybe<Scalars['String']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']>;
  system_description_sMax?: Maybe<Scalars['String']>;
  system_description_sMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type TimeshareFilter = {
  and?: InputMaybe<Array<InputMaybe<TimeshareFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignment_c?: InputMaybe<StringExactFilter>;
  details_assignment_i?: InputMaybe<Int64Filter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TimeshareHasFilter>>>;
  not?: InputMaybe<TimeshareFilter>;
  or?: InputMaybe<Array<InputMaybe<TimeshareFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TimeshareHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssignmentC = 'details_assignment_c',
  DetailsAssignmentI = 'details_assignment_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DocId = 'docId',
  Nextimeshare = 'nextimeshare',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TimeshareAggregateResult = {
  __typename?: 'TimeshareAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_assignment_cMax?: Maybe<Scalars['String']>;
  details_assignment_cMin?: Maybe<Scalars['String']>;
  details_assignment_iAvg?: Maybe<Scalars['Float']>;
  details_assignment_iMax?: Maybe<Scalars['Int64']>;
  details_assignment_iMin?: Maybe<Scalars['Int64']>;
  details_assignment_iSum?: Maybe<Scalars['Int64']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type TreasuryFilter = {
  and?: InputMaybe<Array<InputMaybe<TreasuryFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TreasuryHasFilter>>>;
  not?: InputMaybe<TreasuryFilter>;
  or?: InputMaybe<Array<InputMaybe<TreasuryFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TreasuryHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DocId = 'docId',
  Payment = 'payment',
  Redemption = 'redemption',
  Settings = 'settings',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasurer = 'treasurer',
  Treasuryof = 'treasuryof',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TreasuryAggregateResult = {
  __typename?: 'TreasuryAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_dao_iAvg?: Maybe<Scalars['Float']>;
  details_dao_iMax?: Maybe<Scalars['Int64']>;
  details_dao_iMin?: Maybe<Scalars['Int64']>;
  details_dao_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type TrsyPaymentFilter = {
  and?: InputMaybe<Array<InputMaybe<TrsyPaymentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amountPaid_a?: InputMaybe<StringTermFilter>;
  details_confirmedDate_t?: InputMaybe<DateTimeFilter>;
  details_creator_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_isConfirmed_i?: InputMaybe<Int64Filter>;
  details_notes_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TrsyPaymentHasFilter>>>;
  legacy_id_i?: InputMaybe<Int64Filter>;
  legacy_redemptionId_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<TrsyPaymentFilter>;
  or?: InputMaybe<Array<InputMaybe<TrsyPaymentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TrsyPaymentHasFilter {
  Attestation = 'attestation',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsConfirmedDateT = 'details_confirmedDate_t',
  DetailsCreatorN = 'details_creator_n',
  DetailsIsConfirmedI = 'details_isConfirmed_i',
  DetailsNotesS = 'details_notes_s',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyRedemptionIdI = 'legacy_redemptionId_i',
  Pays = 'pays',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TrsyPaymentAggregateResult = {
  __typename?: 'TrsyPaymentAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_amountPaid_aMax?: Maybe<Scalars['String']>;
  details_amountPaid_aMin?: Maybe<Scalars['String']>;
  details_confirmedDate_tMax?: Maybe<Scalars['DateTime']>;
  details_confirmedDate_tMin?: Maybe<Scalars['DateTime']>;
  details_creator_nMax?: Maybe<Scalars['String']>;
  details_creator_nMin?: Maybe<Scalars['String']>;
  details_isConfirmed_iAvg?: Maybe<Scalars['Float']>;
  details_isConfirmed_iMax?: Maybe<Scalars['Int64']>;
  details_isConfirmed_iMin?: Maybe<Scalars['Int64']>;
  details_isConfirmed_iSum?: Maybe<Scalars['Int64']>;
  details_notes_sMax?: Maybe<Scalars['String']>;
  details_notes_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  legacy_id_iAvg?: Maybe<Scalars['Float']>;
  legacy_id_iMax?: Maybe<Scalars['Int64']>;
  legacy_id_iMin?: Maybe<Scalars['Int64']>;
  legacy_id_iSum?: Maybe<Scalars['Int64']>;
  legacy_redemptionId_iAvg?: Maybe<Scalars['Float']>;
  legacy_redemptionId_iMax?: Maybe<Scalars['Int64']>;
  legacy_redemptionId_iMin?: Maybe<Scalars['Int64']>;
  legacy_redemptionId_iSum?: Maybe<Scalars['Int64']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type TypeVersionFilter = {
  and?: InputMaybe<Array<InputMaybe<TypeVersionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<TypeVersionHasFilter>>>;
  not?: InputMaybe<TypeVersionFilter>;
  or?: InputMaybe<Array<InputMaybe<TypeVersionFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  version?: InputMaybe<StringExactFilter>;
};

export enum TypeVersionHasFilter {
  Type = 'type',
  Version = 'version'
}

export type TypeVersionAggregateResult = {
  __typename?: 'TypeVersionAggregateResult';
  count?: Maybe<Scalars['Int']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  versionMax?: Maybe<Scalars['String']>;
  versionMin?: Maybe<Scalars['String']>;
};

export type UpvtElectnFilter = {
  and?: InputMaybe<Array<InputMaybe<UpvtElectnFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_duration_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_status_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<UpvtElectnHasFilter>>>;
  not?: InputMaybe<UpvtElectnFilter>;
  or?: InputMaybe<Array<InputMaybe<UpvtElectnFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum UpvtElectnHasFilter {
  Chiefround = 'chiefround',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Currentround = 'currentround',
  Dao = 'dao',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsStartDateT = 'details_startDate_t',
  DetailsStatusS = 'details_status_s',
  DocId = 'docId',
  Headround = 'headround',
  Round = 'round',
  Startround = 'startround',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type UpvtElectnAggregateResult = {
  __typename?: 'UpvtElectnAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_duration_iAvg?: Maybe<Scalars['Float']>;
  details_duration_iMax?: Maybe<Scalars['Int64']>;
  details_duration_iMin?: Maybe<Scalars['Int64']>;
  details_duration_iSum?: Maybe<Scalars['Int64']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']>;
  details_status_sMax?: Maybe<Scalars['String']>;
  details_status_sMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type VotableFilter = {
  and?: InputMaybe<Array<InputMaybe<VotableFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<VotableHasFilter>>>;
  not?: InputMaybe<VotableFilter>;
  or?: InputMaybe<Array<InputMaybe<VotableFilter>>>;
};

export enum VotableHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  DetailsDescriptionS = 'details_description_s',
  DetailsTitleS = 'details_title_s',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type VotableAggregateResult = {
  __typename?: 'VotableAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']>;
  count?: Maybe<Scalars['Int']>;
  details_description_sMax?: Maybe<Scalars['String']>;
  details_description_sMin?: Maybe<Scalars['String']>;
  details_title_sMax?: Maybe<Scalars['String']>;
  details_title_sMin?: Maybe<Scalars['String']>;
};

export type VoteFilter = {
  and?: InputMaybe<Array<InputMaybe<VoteFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteHasFilter>>>;
  not?: InputMaybe<VoteFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
  vote_date_t?: InputMaybe<DateTimeFilter>;
  vote_notes_s?: InputMaybe<StringRegExpFilter>;
  vote_vote_s?: InputMaybe<StringRegExpFilter>;
  vote_votePower_a?: InputMaybe<StringTermFilter>;
  vote_voter_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export enum VoteHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  VoteDateT = 'vote_date_t',
  VoteNotesS = 'vote_notes_s',
  VoteVoteS = 'vote_vote_s',
  VoteVotePowerA = 'vote_votePower_a',
  VoteVoterN = 'vote_voter_n',
  Voteon = 'voteon'
}

export type VoteAggregateResult = {
  __typename?: 'VoteAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
  vote_date_tMax?: Maybe<Scalars['DateTime']>;
  vote_date_tMin?: Maybe<Scalars['DateTime']>;
  vote_notes_sMax?: Maybe<Scalars['String']>;
  vote_notes_sMin?: Maybe<Scalars['String']>;
  vote_vote_sMax?: Maybe<Scalars['String']>;
  vote_vote_sMin?: Maybe<Scalars['String']>;
  vote_votePower_aMax?: Maybe<Scalars['String']>;
  vote_votePower_aMin?: Maybe<Scalars['String']>;
  vote_voter_nMax?: Maybe<Scalars['String']>;
  vote_voter_nMin?: Maybe<Scalars['String']>;
};

export type VoteGroupFilter = {
  and?: InputMaybe<Array<InputMaybe<VoteGroupFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_roundId_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteGroupHasFilter>>>;
  not?: InputMaybe<VoteGroupFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteGroupFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum VoteGroupHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRoundIdI = 'details_roundId_i',
  DocId = 'docId',
  Round = 'round',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote'
}

export type VoteGroupAggregateResult = {
  __typename?: 'VoteGroupAggregateResult';
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  details_roundId_iAvg?: Maybe<Scalars['Float']>;
  details_roundId_iMax?: Maybe<Scalars['Int64']>;
  details_roundId_iMin?: Maybe<Scalars['Int64']>;
  details_roundId_iSum?: Maybe<Scalars['Int64']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type VoteTallyFilter = {
  abstain_votePower_a?: InputMaybe<StringTermFilter>;
  and?: InputMaybe<Array<InputMaybe<VoteTallyFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  fail_votePower_a?: InputMaybe<StringTermFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteTallyHasFilter>>>;
  not?: InputMaybe<VoteTallyFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteTallyFilter>>>;
  pass_votePower_a?: InputMaybe<StringTermFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum VoteTallyHasFilter {
  AbstainVotePowerA = 'abstain_votePower_a',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  FailVotePowerA = 'fail_votePower_a',
  PassVotePowerA = 'pass_votePower_a',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteTallyAggregateResult = {
  __typename?: 'VoteTallyAggregateResult';
  abstain_votePower_aMax?: Maybe<Scalars['String']>;
  abstain_votePower_aMin?: Maybe<Scalars['String']>;
  contractMax?: Maybe<Scalars['String']>;
  contractMin?: Maybe<Scalars['String']>;
  count?: Maybe<Scalars['Int']>;
  createdDateMax?: Maybe<Scalars['DateTime']>;
  createdDateMin?: Maybe<Scalars['DateTime']>;
  creatorMax?: Maybe<Scalars['String']>;
  creatorMin?: Maybe<Scalars['String']>;
  docIdMax?: Maybe<Scalars['String']>;
  docIdMin?: Maybe<Scalars['String']>;
  fail_votePower_aMax?: Maybe<Scalars['String']>;
  fail_votePower_aMin?: Maybe<Scalars['String']>;
  pass_votePower_aMax?: Maybe<Scalars['String']>;
  pass_votePower_aMin?: Maybe<Scalars['String']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']>;
  typeMax?: Maybe<Scalars['String']>;
  typeMin?: Maybe<Scalars['String']>;
  updatedDateMax?: Maybe<Scalars['DateTime']>;
  updatedDateMin?: Maybe<Scalars['DateTime']>;
};

export type Alert = Document & {
  __typename?: 'Alert';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_content_s?: Maybe<Scalars['String']>;
  details_enabled_i?: Maybe<Scalars['Int64']>;
  details_level_n?: Maybe<Scalars['String']>;
  details_level_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  notifies?: Maybe<Array<Document>>;
  notifiesAggregate?: Maybe<DocumentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type AlertNotifiesArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AlertNotifiesAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type Document = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type DocumentOrder = {
  asc?: InputMaybe<DocumentOrderable>;
  desc?: InputMaybe<DocumentOrderable>;
  then?: InputMaybe<DocumentOrder>;
};

export enum DocumentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Assignbadge = Document & Votable & {
  __typename?: 'Assignbadge';
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']>;
  details_badge_c?: Maybe<Scalars['String']>;
  details_badge_i?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_electionId_i?: Maybe<Scalars['Int64']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']>;
  details_endTime_t?: Maybe<Scalars['DateTime']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_startPeriod_c?: Maybe<Scalars['String']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_startTime_t?: Maybe<Scalars['DateTime']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_category_s?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  system_proposer_n?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type AssignbadgeBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type AssignbadgeBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type AssignbadgeCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type AssignbadgeCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type AssignbadgeDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type AssignbadgeDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type AssignbadgeOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type AssignbadgeOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type AssignbadgeStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignbadgeStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignbadgeVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type AssignbadgeVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type AssignbadgeVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type AssignbadgeVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type Votable = {
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type VotableVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type VotableVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type VotableVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type VotableVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type VoteOrder = {
  asc?: InputMaybe<VoteOrderable>;
  desc?: InputMaybe<VoteOrderable>;
  then?: InputMaybe<VoteOrder>;
};

export enum VoteOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  VoteDateT = 'vote_date_t',
  VoteNotesS = 'vote_notes_s',
  VoteVoteS = 'vote_vote_s',
  VoteVotePowerA = 'vote_votePower_a',
  VoteVoterN = 'vote_voter_n'
}

export type Vote = Document & {
  __typename?: 'Vote';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote_date_t?: Maybe<Scalars['DateTime']>;
  vote_notes_s?: Maybe<Scalars['String']>;
  vote_vote_s?: Maybe<Scalars['String']>;
  vote_votePower_a?: Maybe<Scalars['String']>;
  vote_voter_n?: Maybe<Scalars['String']>;
  voteon?: Maybe<Array<Document>>;
  voteonAggregate?: Maybe<DocumentAggregateResult>;
};


export type VoteOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type VoteOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type VoteVoteonArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type VoteVoteonAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type MemberOrder = {
  asc?: InputMaybe<MemberOrderable>;
  desc?: InputMaybe<MemberOrderable>;
  then?: InputMaybe<MemberOrder>;
};

export enum MemberOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberN = 'details_member_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Member = Document & {
  __typename?: 'Member';
  applicantof?: Maybe<Array<Document>>;
  applicantofAggregate?: Maybe<DocumentAggregateResult>;
  applofcirc?: Maybe<Array<Circle>>;
  applofcircAggregate?: Maybe<CircleAggregateResult>;
  approvemsig?: Maybe<Array<Multisig>>;
  approvemsigAggregate?: Maybe<MultisigAggregateResult>;
  assignbadge?: Maybe<Array<Assignbadge>>;
  assignbadgeAggregate?: Maybe<AssignbadgeAggregateResult>;
  assigned?: Maybe<Array<Assignment>>;
  assignedAggregate?: Maybe<AssignmentAggregateResult>;
  attested?: Maybe<Array<Attestation>>;
  attestedAggregate?: Maybe<AttestationAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_member_n: Scalars['String'];
  docId: Scalars['String'];
  elctngroup?: Maybe<Array<VoteGroup>>;
  elctngroupAggregate?: Maybe<VoteGroupAggregateResult>;
  entrustedto?: Maybe<Array<Queststart>>;
  entrustedtoAggregate?: Maybe<QueststartAggregateResult>;
  holdsbadge?: Maybe<Array<Badge>>;
  holdsbadgeAggregate?: Maybe<BadgeAggregateResult>;
  memberof?: Maybe<Array<Document>>;
  memberofAggregate?: Maybe<DocumentAggregateResult>;
  memberofcirc?: Maybe<Array<Circle>>;
  memberofcircAggregate?: Maybe<CircleAggregateResult>;
  owns?: Maybe<Array<Document>>;
  ownsAggregate?: Maybe<DocumentAggregateResult>;
  paid?: Maybe<Array<Payment>>;
  paidAggregate?: Maybe<PaymentAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  questcomplet?: Maybe<Array<Document>>;
  questcompletAggregate?: Maybe<DocumentAggregateResult>;
  reactedto?: Maybe<Array<Comment>>;
  reactedtoAggregate?: Maybe<CommentAggregateResult>;
  reactionlnk?: Maybe<Array<Reaction>>;
  reactionlnkAggregate?: Maybe<ReactionAggregateResult>;
  redeembal?: Maybe<Array<Balance>>;
  redeembalAggregate?: Maybe<BalanceAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  treasurerof?: Maybe<Array<Treasury>>;
  treasurerofAggregate?: Maybe<TreasuryAggregateResult>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
};


export type MemberApplicantofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberApplicantofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberApplofcircArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type MemberApplofcircAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type MemberApprovemsigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};


export type MemberApprovemsigAggregateArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type MemberAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type MemberAssignbadgeAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type MemberAssignedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type MemberAssignedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type MemberAttestedArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};


export type MemberAttestedAggregateArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type MemberElctngroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type MemberElctngroupAggregateArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type MemberEntrustedtoArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type MemberEntrustedtoAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type MemberHoldsbadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type MemberHoldsbadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type MemberMemberofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberMemberofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberMemberofcircArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type MemberMemberofcircAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type MemberOwnsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberOwnsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberPaidArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemberPaidAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemberPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemberPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemberPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type MemberPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type MemberQuestcompletArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberQuestcompletAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberReactedtoArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type MemberReactedtoAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type MemberReactionlnkArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};


export type MemberReactionlnkAggregateArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type MemberRedeembalArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};


export type MemberRedeembalAggregateArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type MemberTreasurerofArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type MemberTreasurerofAggregateArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type MemberVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type MemberVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};

export type CircleOrder = {
  asc?: InputMaybe<CircleOrderable>;
  desc?: InputMaybe<CircleOrderable>;
  then?: InputMaybe<CircleOrder>;
};

export enum CircleOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Circle = Document & {
  __typename?: 'Circle';
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  budget?: Maybe<Array<Budget>>;
  budgetAggregate?: Maybe<BudgetAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_name_s?: Maybe<Scalars['String']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']>;
  details_purpose_s?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  lockedby?: Maybe<Array<Budget>>;
  lockedbyAggregate?: Maybe<BudgetAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentcircle?: Maybe<Array<Document>>;
  parentcircleAggregate?: Maybe<DocumentAggregateResult>;
  subcircle?: Maybe<Array<Circle>>;
  subcircleAggregate?: Maybe<CircleAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type CircleApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};


export type CircleBudgetAggregateArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type CircleCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type CircleCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type CircleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type CircleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type CircleLockedbyArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};


export type CircleLockedbyAggregateArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type CircleMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleParentcircleArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CircleParentcircleAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CircleSubcircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type CircleSubcircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type CircleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type CircleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type CircleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type CircleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type BudgetOrder = {
  asc?: InputMaybe<BudgetOrderable>;
  desc?: InputMaybe<BudgetOrderable>;
  then?: InputMaybe<BudgetOrder>;
};

export enum BudgetOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Budget = Document & {
  __typename?: 'Budget';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_circleId_i?: Maybe<Scalars['Int64']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_pegAmount_a?: Maybe<Scalars['String']>;
  details_rewardAmount_a?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_usdAmount_a?: Maybe<Scalars['String']>;
  details_voiceAmount_a?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type BudgetCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type BudgetCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type BudgetCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type BudgetCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type BudgetDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type BudgetDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type BudgetOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type BudgetOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BudgetVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type BudgetVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type BudgetVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type BudgetVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type CmntSectionOrder = {
  asc?: InputMaybe<CmntSectionOrderable>;
  desc?: InputMaybe<CmntSectionOrderable>;
  then?: InputMaybe<CmntSectionOrder>;
};

export enum CmntSectionOrderable {
  CommentSectionLikesI = 'commentSection_likes_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CmntSection = Document & {
  __typename?: 'CmntSection';
  cmntsectof?: Maybe<Array<Document>>;
  cmntsectofAggregate?: Maybe<DocumentAggregateResult>;
  comment?: Maybe<Array<Comment>>;
  commentAggregate?: Maybe<CommentAggregateResult>;
  commentSection_likes_i?: Maybe<Scalars['Int64']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  likeDetails_likes_i?: Maybe<Scalars['Int64']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type CmntSectionCmntsectofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CmntSectionCmntsectofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CmntSectionCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type CmntSectionCommentAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};

export type CommentOrder = {
  asc?: InputMaybe<CommentOrderable>;
  desc?: InputMaybe<CommentOrderable>;
  then?: InputMaybe<CommentOrder>;
};

export enum CommentOrderable {
  CommentAuthorN = 'comment_author_n',
  CommentCommentCountI = 'comment_commentCount_i',
  CommentContentS = 'comment_content_s',
  CommentDeletedI = 'comment_deleted_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  LikesJohnnyhypha1I = 'likes_johnnyhypha1_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Comment = Document & {
  __typename?: 'Comment';
  comment?: Maybe<Array<Comment>>;
  comment_author_n?: Maybe<Scalars['String']>;
  comment_commentCount_i?: Maybe<Scalars['Int64']>;
  comment_content_s?: Maybe<Scalars['String']>;
  comment_deleted_i?: Maybe<Scalars['Int64']>;
  commentAggregate?: Maybe<CommentAggregateResult>;
  commentof?: Maybe<Array<Document>>;
  commentofAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  likeDetails_likes_i?: Maybe<Scalars['Int64']>;
  likes_johnnyhypha1_i?: Maybe<Scalars['Int64']>;
  reactedby?: Maybe<Array<Member>>;
  reactedbyAggregate?: Maybe<MemberAggregateResult>;
  reaction?: Maybe<Array<Reaction>>;
  reactionAggregate?: Maybe<ReactionAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type CommentCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type CommentCommentAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type CommentCommentofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CommentCommentofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CommentReactedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type CommentReactedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CommentReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};


export type CommentReactionAggregateArgs = {
  filter?: InputMaybe<ReactionFilter>;
};

export type ReactionOrder = {
  asc?: InputMaybe<ReactionOrderable>;
  desc?: InputMaybe<ReactionOrderable>;
  then?: InputMaybe<ReactionOrder>;
};

export enum ReactionOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  ReactionTypeN = 'reaction_type_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Reaction = Document & {
  __typename?: 'Reaction';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  reaction_type_n?: Maybe<Scalars['String']>;
  reactionlnkr?: Maybe<Array<Member>>;
  reactionlnkrAggregate?: Maybe<MemberAggregateResult>;
  reactionof?: Maybe<Array<Comment>>;
  reactionofAggregate?: Maybe<CommentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type ReactionReactionlnkrArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type ReactionReactionlnkrAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ReactionReactionofArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type ReactionReactionofAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};

export type DaoOrder = {
  asc?: InputMaybe<DaoOrderable>;
  desc?: InputMaybe<DaoOrderable>;
  then?: InputMaybe<DaoOrder>;
};

export enum DaoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DetailsDaoTypeS = 'details_daoType_s',
  DetailsIsWaitingEcosystemI = 'details_isWaitingEcosystem_i',
  DetailsUnusedFieldN = 'details_unusedField_n',
  DocId = 'docId',
  SystemNodeLabelN = 'system_nodeLabel_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Dao = Document & {
  __typename?: 'Dao';
  admin?: Maybe<Array<Member>>;
  adminAggregate?: Maybe<MemberAggregateResult>;
  alert?: Maybe<Array<Alert>>;
  alertAggregate?: Maybe<AlertAggregateResult>;
  anchorchild?: Maybe<Array<Dao>>;
  anchorchildAggregate?: Maybe<DaoAggregateResult>;
  anchorparent?: Maybe<Array<Dao>>;
  anchorparentAggregate?: Maybe<DaoAggregateResult>;
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  chiefdelegate?: Maybe<Array<Member>>;
  chiefdelegateAggregate?: Maybe<MemberAggregateResult>;
  chiefround?: Maybe<Array<ElectnRound>>;
  chiefroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  childdraft?: Maybe<Array<DaoDraft>>;
  childdraftAggregate?: Maybe<DaoDraftAggregateResult>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  commember?: Maybe<Array<Member>>;
  commemberAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  current?: Maybe<Array<Period>>;
  currentAggregate?: Maybe<PeriodAggregateResult>;
  delegate?: Maybe<Array<Member>>;
  delegateAggregate?: Maybe<MemberAggregateResult>;
  details_daoName_n: Scalars['String'];
  details_daoType_s?: Maybe<Scalars['String']>;
  details_isWaitingEcosystem_i?: Maybe<Scalars['Int64']>;
  details_unusedField_n?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  election?: Maybe<Array<UpvtElectn>>;
  electionAggregate?: Maybe<UpvtElectnAggregateResult>;
  end?: Maybe<Array<Period>>;
  endAggregate?: Maybe<PeriodAggregateResult>;
  enroller?: Maybe<Array<Member>>;
  enrollerAggregate?: Maybe<MemberAggregateResult>;
  failedprops?: Maybe<Array<Document>>;
  failedpropsAggregate?: Maybe<DocumentAggregateResult>;
  headdelegate?: Maybe<Array<Member>>;
  headdelegateAggregate?: Maybe<MemberAggregateResult>;
  headround?: Maybe<Array<ElectnRound>>;
  headroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  ongoingelct?: Maybe<Array<UpvtElectn>>;
  ongoingelctAggregate?: Maybe<UpvtElectnAggregateResult>;
  openmultisig?: Maybe<Array<Multisig>>;
  openmultisigAggregate?: Maybe<MultisigAggregateResult>;
  owner?: Maybe<Array<Member>>;
  ownerAggregate?: Maybe<MemberAggregateResult>;
  passedprops?: Maybe<Array<Document>>;
  passedpropsAggregate?: Maybe<DocumentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  period?: Maybe<Array<Period>>;
  periodAggregate?: Maybe<PeriodAggregateResult>;
  planmanager?: Maybe<Array<PlanManager>>;
  planmanagerAggregate?: Maybe<PlanManagerAggregateResult>;
  previouselct?: Maybe<Array<UpvtElectn>>;
  previouselctAggregate?: Maybe<UpvtElectnAggregateResult>;
  proposal?: Maybe<Array<Document>>;
  proposalAggregate?: Maybe<DocumentAggregateResult>;
  questcomple?: Maybe<Array<Questcomple>>;
  questcompleAggregate?: Maybe<QuestcompleAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  stagingprop?: Maybe<Array<Document>>;
  stagingpropAggregate?: Maybe<DocumentAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  suspended?: Maybe<Array<Document>>;
  suspendedAggregate?: Maybe<DocumentAggregateResult>;
  system_nodeLabel_n?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  treasury?: Maybe<Array<Treasury>>;
  treasuryAggregate?: Maybe<TreasuryAggregateResult>;
  type: Scalars['String'];
  upcomingelct?: Maybe<Array<UpvtElectn>>;
  upcomingelctAggregate?: Maybe<UpvtElectnAggregateResult>;
  updatedDate: Scalars['DateTime'];
  votable?: Maybe<Array<Document>>;
  votableAggregate?: Maybe<DocumentAggregateResult>;
  voter?: Maybe<Array<Member>>;
  voterAggregate?: Maybe<MemberAggregateResult>;
};


export type DaoAdminArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoAdminAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};


export type DaoAlertAggregateArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type DaoAnchorchildArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoAnchorchildAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoAnchorparentArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoAnchorparentAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DaoBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DaoChiefdelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoChiefdelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoChiefroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoChiefroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoChilddraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type DaoChilddraftAggregateArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type DaoCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type DaoCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type DaoCommemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoCommemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoCurrentArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoCurrentAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoDelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoDelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoEndArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoEndAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoEnrollerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoEnrollerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoFailedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoFailedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoHeaddelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoHeaddelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoHeadroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoHeadroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoOngoingelctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoOngoingelctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoOpenmultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};


export type DaoOpenmultisigAggregateArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type DaoOwnerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoOwnerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoPassedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoPassedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type DaoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type DaoPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoPeriodAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoPlanmanagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type DaoPlanmanagerAggregateArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type DaoPreviouselctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoPreviouselctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoProposalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoProposalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type DaoQuestcompleAggregateArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type DaoQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type DaoQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type DaoRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};


export type DaoRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type DaoRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DaoSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type DaoStagingpropArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoStagingpropAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoSuspendedArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoSuspendedAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type DaoTreasuryAggregateArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type DaoUpcomingelctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUpcomingelctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoVotableArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoVotableAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoVoterArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoVoterAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type AlertOrder = {
  asc?: InputMaybe<AlertOrderable>;
  desc?: InputMaybe<AlertOrderable>;
  then?: InputMaybe<AlertOrder>;
};

export enum AlertOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsContentS = 'details_content_s',
  DetailsEnabledI = 'details_enabled_i',
  DetailsLevelN = 'details_level_n',
  DetailsLevelS = 'details_level_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BadgeOrder = {
  asc?: InputMaybe<BadgeOrderable>;
  desc?: InputMaybe<BadgeOrderable>;
  then?: InputMaybe<BadgeOrder>;
};

export enum BadgeOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsDetailsPurposeSI = 'details_detailsPurposeS_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdCoefficientX10000I = 'details_husdCoefficientX10000_i',
  DetailsHvoiceCoefficientX10000I = 'details_hvoiceCoefficientX10000_i',
  DetailsHyphaCoefficientX10000I = 'details_hyphaCoefficientX10000_i',
  DetailsIconS = 'details_icon_s',
  DetailsMaxCyclesI = 'details_maxCycles_i',
  DetailsMaxPeriodCountI = 'details_maxPeriodCount_i',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsSeedsCoefficientX10000I = 'details_seedsCoefficientX10000_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  SystemBadgeIdI = 'system_badgeId_i',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Badge = Document & Votable & {
  __typename?: 'Badge';
  assignment?: Maybe<Array<Assignbadge>>;
  assignmentAggregate?: Maybe<AssignbadgeAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  copyof?: Maybe<Array<Badge>>;
  copyofAggregate?: Maybe<BadgeAggregateResult>;
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']>;
  details_badge_i?: Maybe<Scalars['Int64']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_detailsPurposeS_i?: Maybe<Scalars['Int64']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']>;
  details_husdCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_icon_s?: Maybe<Scalars['String']>;
  details_maxCycles_i?: Maybe<Scalars['Int64']>;
  details_maxPeriodCount_i?: Maybe<Scalars['Int64']>;
  details_pegCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_purpose_s?: Maybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_startPeriod_c?: Maybe<Scalars['String']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  heldby?: Maybe<Array<Member>>;
  heldbyAggregate?: Maybe<MemberAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_badgeId_i?: Maybe<Scalars['Int64']>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  system_proposer_n?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type BadgeAssignmentArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type BadgeAssignmentAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type BadgeCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type BadgeCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type BadgeCopyofArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type BadgeCopyofAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type BadgeDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type BadgeDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type BadgeHeldbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type BadgeHeldbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BadgeOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type BadgeOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BadgeVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type BadgeVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type BadgeVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type BadgeVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type AssignbadgeOrder = {
  asc?: InputMaybe<AssignbadgeOrderable>;
  desc?: InputMaybe<AssignbadgeOrderable>;
  then?: InputMaybe<AssignbadgeOrder>;
};

export enum AssignbadgeOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeC = 'details_badge_c',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsElectionIdI = 'details_electionId_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsEndTimeT = 'details_endTime_t',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStartTimeT = 'details_startTime_t',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemCategoryS = 'system_category_s',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteTallyOrder = {
  asc?: InputMaybe<VoteTallyOrderable>;
  desc?: InputMaybe<VoteTallyOrderable>;
  then?: InputMaybe<VoteTallyOrder>;
};

export enum VoteTallyOrderable {
  AbstainVotePowerA = 'abstain_votePower_a',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  FailVotePowerA = 'fail_votePower_a',
  PassVotePowerA = 'pass_votePower_a',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteTally = Document & {
  __typename?: 'VoteTally';
  abstain_votePower_a?: Maybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  fail_votePower_a?: Maybe<Scalars['String']>;
  pass_votePower_a?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type ElectnRoundOrder = {
  asc?: InputMaybe<ElectnRoundOrderable>;
  desc?: InputMaybe<ElectnRoundOrderable>;
  then?: InputMaybe<ElectnRoundOrder>;
};

export enum ElectnRoundOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDelegatePowerI = 'details_delegatePower_i',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsPassingCountI = 'details_passingCount_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ElectnRound = Document & {
  __typename?: 'ElectnRound';
  candidate?: Maybe<Array<Document>>;
  candidateAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_delegatePower_i?: Maybe<Scalars['Int64']>;
  details_duration_i?: Maybe<Scalars['Int64']>;
  details_endDate_t?: Maybe<Scalars['DateTime']>;
  details_passingCount_i?: Maybe<Scalars['Int64']>;
  details_startDate_t?: Maybe<Scalars['DateTime']>;
  details_type_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  election?: Maybe<Array<UpvtElectn>>;
  electionAggregate?: Maybe<UpvtElectnAggregateResult>;
  nextround?: Maybe<Array<ElectnRound>>;
  nextroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  voted?: Maybe<Array<Member>>;
  votedAggregate?: Maybe<MemberAggregateResult>;
  winner?: Maybe<Array<Document>>;
  winnerAggregate?: Maybe<DocumentAggregateResult>;
};


export type ElectnRoundCandidateArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type ElectnRoundCandidateAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type ElectnRoundElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type ElectnRoundElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type ElectnRoundNextroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type ElectnRoundNextroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type ElectnRoundVotedArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type ElectnRoundVotedAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ElectnRoundWinnerArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type ElectnRoundWinnerAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type UpvtElectnOrder = {
  asc?: InputMaybe<UpvtElectnOrderable>;
  desc?: InputMaybe<UpvtElectnOrderable>;
  then?: InputMaybe<UpvtElectnOrder>;
};

export enum UpvtElectnOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsStartDateT = 'details_startDate_t',
  DetailsStatusS = 'details_status_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type UpvtElectn = Document & {
  __typename?: 'UpvtElectn';
  chiefround?: Maybe<Array<ElectnRound>>;
  chiefroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  currentround?: Maybe<Array<ElectnRound>>;
  currentroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_duration_i?: Maybe<Scalars['Int64']>;
  details_endDate_t?: Maybe<Scalars['DateTime']>;
  details_startDate_t?: Maybe<Scalars['DateTime']>;
  details_status_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  headround?: Maybe<Array<ElectnRound>>;
  headroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  startround?: Maybe<Array<ElectnRound>>;
  startroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type UpvtElectnChiefroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnChiefroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnCurrentroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnCurrentroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type UpvtElectnDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type UpvtElectnHeadroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnHeadroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnStartroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnStartroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};

export type DaoDraftOrder = {
  asc?: InputMaybe<DaoDraftOrderable>;
  desc?: InputMaybe<DaoDraftOrderable>;
  then?: InputMaybe<DaoDraftOrder>;
};

export enum DaoDraftOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DaoDraft = Document & {
  __typename?: 'DaoDraft';
  anchorparent?: Maybe<Array<Dao>>;
  anchorparentAggregate?: Maybe<DaoAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_daoName_n?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type DaoDraftAnchorparentArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoDraftAnchorparentAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoDraftSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DaoDraftSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};

export type SettingsOrder = {
  asc?: InputMaybe<SettingsOrderable>;
  desc?: InputMaybe<SettingsOrderable>;
  then?: InputMaybe<SettingsOrder>;
};

export enum SettingsOrderable {
  AdminsAccountN = 'admins_account_n',
  AdminsUpdatedDateT = 'admins_updatedDate_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  EcosystemDomainS = 'ecosystem_domain_s',
  EcosystemLogoS = 'ecosystem_logo_s',
  EcosystemNameS = 'ecosystem_name_s',
  EcosystemPurposeS = 'ecosystem_purpose_s',
  OnboardersAccountN = 'onboarders_account_n',
  OnboardersUpdatedDateT = 'onboarders_updatedDate_t',
  OtherSettingsLogoS = 'otherSettings_logo_s',
  SettingsAccountI = 'settings_account_i',
  SettingsAddAdminsEnabledI = 'settings_addAdminsEnabled_i',
  SettingsClaimEnabledI = 'settings_claimEnabled_i',
  SettingsCommentsContractN = 'settings_commentsContract_n',
  SettingsCommentsContractS = 'settings_commentsContract_s',
  SettingsCommunityotingQuorumPercentI = 'settings_communityotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentS = 'settings_communityotingQuorumPercent_s',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsContractsVersionS = 'settings_contractsVersion_s',
  SettingsContractVersionS = 'settings_contractVersion_s',
  SettingsDaoDescriptionS = 'settings_daoDescription_s',
  SettingsDaoNameN = 'settings_daoName_n',
  SettingsDaoSuperS = 'settings_daoSuper_s',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardOverlayColorS = 'settings_dashboardOverlayColor_s',
  SettingsDashboardOverlayOpacityS = 'settings_dashboardOverlayOpacity_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardPatternColorS = 'settings_dashboardPatternColor_s',
  SettingsDashboardPatternOpacityS = 'settings_dashboardPatternOpacity_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDiscordUrlS = 'settings_discordURL_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsEcosystemChildPriceA = 'settings_ecosystemChildPrice_a',
  SettingsEcosystemChildPriceStakedA = 'settings_ecosystemChildPriceStaked_a',
  SettingsEcosystemPriceA = 'settings_ecosystemPrice_a',
  SettingsEcosystemPriceStakedA = 'settings_ecosystemPriceStaked_a',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsGovernanceTokenContractN = 'settings_governanceTokenContract_n',
  SettingsHeaderPatternS = 'settings_headerPattern_s',
  SettingsHomepageHeaderS = 'settings_homepageHeader_s',
  SettingsHomepageSubtitleS = 'settings_homepageSubtitle_s',
  SettingsHusdTokenContractN = 'settings_husdTokenContract_n',
  SettingsHvoiceTokenContractN = 'settings_hvoiceTokenContract_n',
  SettingsHyphaCosaleContractN = 'settings_hyphaCosaleContract_n',
  SettingsHyphaDeferralFactorX100I = 'settings_hyphaDeferralFactorX100_i',
  SettingsHyphaTokenContractN = 'settings_hyphaTokenContract_n',
  SettingsHyphaUsdValueA = 'settings_hyphaUsdValue_a',
  SettingsIsHyphaI = 'settings_isHypha_i',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersHeaderS = 'settings_membersHeader_s',
  SettingsMembersOverlayColorS = 'settings_membersOverlayColor_s',
  SettingsMembersOverlayOpacityS = 'settings_membersOverlayOpacity_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersPatternColorS = 'settings_membersPatternColor_s',
  SettingsMembersPatternOpacityS = 'settings_membersPatternOpacity_s',
  SettingsMembersSubtitleS = 'settings_membersSubtitle_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsMyOtherOtherSettingI = 'settings_myOtherOtherSetting_i',
  SettingsMyOtherSettingI = 'settings_myOtherSetting_i',
  SettingsMySettingI = 'settings_mySetting_i',
  SettingsNameS = 'settings_name_s',
  SettingsNextCommentSectionN = 'settings_nextCommentSection_n',
  SettingsNextScheduledIdI = 'settings_nextScheduledId_i',
  SettingsNextScheduleIdI = 'settings_nextScheduleId_i',
  SettingsOnboarderAccountN = 'settings_onboarderAccount_n',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationOverlayColorS = 'settings_organisationOverlayColor_s',
  SettingsOrganisationOverlayOpacityS = 'settings_organisationOverlayOpacity_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationPatternColorS = 'settings_organisationPatternColor_s',
  SettingsOrganisationPatternOpacityS = 'settings_organisationPatternOpacity_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsOrganizationHeaderS = 'settings_organizationHeader_s',
  SettingsOrganizationSubtitleS = 'settings_organizationSubtitle_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternOpacityS = 'settings_patternOpacity_s',
  SettingsPausedI = 'settings_paused_i',
  SettingsPegTokenA = 'settings_pegToken_a',
  SettingsPegTokenContractN = 'settings_pegTokenContract_n',
  SettingsPegTokenNameS = 'settings_pegTokenName_s',
  SettingsPeriodDurationSecI = 'settings_periodDurationSec_i',
  SettingsPeriodDurationSecS = 'settings_periodDurationSec_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsHeaderS = 'settings_proposalsHeader_s',
  SettingsProposalsOverlayColorS = 'settings_proposalsOverlayColor_s',
  SettingsProposalsOverlayOpacityS = 'settings_proposalsOverlayOpacity_s',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsPatternColorS = 'settings_proposalsPatternColor_s',
  SettingsProposalsPatternOpacityS = 'settings_proposalsPatternOpacity_s',
  SettingsProposalsSubtitleS = 'settings_proposalsSubtitle_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsPublisherContractN = 'settings_publisherContract_n',
  SettingsRedemptionsEnabledI = 'settings_redemptionsEnabled_i',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsRewardTokenA = 'settings_rewardToken_a',
  SettingsRewardTokenContractN = 'settings_rewardTokenContract_n',
  SettingsRewardTokenNameS = 'settings_rewardTokenName_s',
  SettingsRewardToPegRatioA = 'settings_rewardToPegRatio_a',
  SettingsRootNodeS = 'settings_rootNode_s',
  SettingsSaleHyphaUsdValueA = 'settings_saleHyphaUsdValue_a',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSeedsDeferralFactorX100I = 'settings_seedsDeferralFactorX100_i',
  SettingsSeedsEscrowContractN = 'settings_seedsEscrowContract_n',
  SettingsSeedsTokenContractN = 'settings_seedsTokenContract_n',
  SettingsSettingsVotingAlignmentX100II = 'settings_settingsVotingAlignmentX100I_i',
  SettingsSettingsVotingQuorumX100II = 'settings_settingsVotingQuorumX100I_i',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsSplashOverlayColorS = 'settings_splashOverlayColor_s',
  SettingsSplashOverlayOpacityS = 'settings_splashOverlayOpacity_s',
  SettingsSplashPatternColorS = 'settings_splashPatternColor_s',
  SettingsSplashPatternOpacityS = 'settings_splashPatternOpacity_s',
  SettingsTestSetI = 'settings_testSet_i',
  SettingsTestSettingA = 'settings_testSetting_a',
  SettingsTestSettingS = 'settings_testSetting_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsThresholdI = 'settings_threshold_i',
  SettingsTitleS = 'settings_title_s',
  SettingsTreasuryContractN = 'settings_treasuryContract_n',
  SettingsUpdatedDateT = 'settings_updatedDate_t',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateS = 'settings_upvoteStartDate_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUpvoteStartTimeS = 'settings_upvoteStartTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsUsesSeedsI = 'settings_usesSeeds_i',
  SettingsVoiceTokenA = 'settings_voiceToken_a',
  SettingsVoiceTokenDecayPeriodI = 'settings_voiceTokenDecayPeriod_i',
  SettingsVoiceTokenDecayPeriodS = 'settings_voiceTokenDecayPeriod_s',
  SettingsVoiceTokenDecayPerPeriodX10MI = 'settings_voiceTokenDecayPerPeriodX10M_i',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentPercentS = 'settings_votingAlignmentPercent_s',
  SettingsVotingAlignmentPercentX100I = 'settings_votingAlignmentPercentX100_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingAlignmentX100S = 'settings_votingAlignmentX100_s',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVOtingdurationsecI = 'settings_vOTINGDURATIONSEC_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingDurationSecondsI = 'settings_votingDurationSeconds_i',
  SettingsVotingMethodS = 'settings_votingMethod_s',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumPercentS = 'settings_votingQuorumPercent_s',
  SettingsVotingQuorumPercentX100I = 'settings_votingQuorumPercentX100_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SettingsVotingQuorumX100S = 'settings_votingQuorumX100_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  TestsTestingsettingsI = 'tests_testingsettings_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  UrlsUrlS = 'urls_url_s',
  UrlsUrl1N5Kz3GemsegS = 'urls_url1N5Kz3Gemseg_s',
  UrlsUrl1QfetejflaflS = 'urls_url1Qfetejflafl_s',
  UrlsUrl2T4Fdni1StybS = 'urls_url2T4Fdni1Styb_s',
  UrlsUrl2Yfg3Nvby1ZlS = 'urls_url2Yfg3Nvby1Zl_s',
  UrlsUrl3Lk4NzggpubiS = 'urls_url3Lk4Nzggpubi_s',
  UrlsUrl5Lsfqinc2ZybS = 'urls_url5Lsfqinc2Zyb_s',
  UrlsUrl5Vn4YbbadgjjS = 'urls_url5Vn4Ybbadgjj_s',
  UrlsUrlB14MblffsutjS = 'urls_urlB14Mblffsutj_s',
  UrlsUrlBethenewdaoS = 'urls_urlBethenewdao_s',
  UrlsUrlBtchangedS = 'urls_urlBtchanged_s',
  UrlsUrlBtchangedhoS = 'urls_urlBtchangedho_s',
  UrlsUrlBtchangednoS = 'urls_urlBtchangedno_s',
  UrlsUrlChildalphadxS = 'urls_urlChildalphadx_s',
  UrlsUrlChildttrxS = 'urls_urlChildttrx_s',
  UrlsUrlDd3YmiavtdcyS = 'urls_urlDd3Ymiavtdcy_s',
  UrlsUrlDl51QmvjsegoS = 'urls_urlDl51Qmvjsego_s',
  UrlsUrlDnsz1CbwxpapS = 'urls_urlDnsz1Cbwxpap_s',
  UrlsUrlEdm3Mnsg1HnsS = 'urls_urlEdm3Mnsg1Hns_s',
  UrlsUrlEghlh3ZnzqwrS = 'urls_urlEghlh3Znzqwr_s',
  UrlsUrlEhgegumzynw3S = 'urls_urlEhgegumzynw3_s',
  UrlsUrlEz2Elj1Cje1ZS = 'urls_urlEz2Elj1Cje1Z_s',
  UrlsUrlFastdaoS = 'urls_urlFastdao_s',
  UrlsUrlFrontdaoS = 'urls_urlFrontdao_s',
  UrlsUrlG1Plywuz5OgbS = 'urls_urlG1Plywuz5Ogb_s',
  UrlsUrlHmntptjudozgS = 'urls_urlHmntptjudozg_s',
  UrlsUrlHyphaS = 'urls_urlHypha_s',
  UrlsUrlHyphademoS = 'urls_urlHyphademo_s',
  UrlsUrlJupiterS = 'urls_urlJupiter_s',
  UrlsUrlK5YhstzkcbrkS = 'urls_urlK5Yhstzkcbrk_s',
  UrlsUrlKd2U1Nqd5ZpmS = 'urls_urlKd2U1Nqd5Zpm_s',
  UrlsUrlKsjjde4Hbn2US = 'urls_urlKsjjde4Hbn2U_s',
  UrlsUrlKvqzvpqle2OiS = 'urls_urlKvqzvpqle2Oi_s',
  UrlsUrlL54Gm5HzawwgS = 'urls_urlL54Gm5Hzawwg_s',
  UrlsUrlMbaajxm41HfaS = 'urls_urlMbaajxm41Hfa_s',
  UrlsUrlN11Wig1Pds3WS = 'urls_urlN11Wig1Pds3W_s',
  UrlsUrlNa1Sonzbvtk5S = 'urls_urlNa1Sonzbvtk5_s',
  UrlsUrlO3Tzzbjaraj3S = 'urls_urlO3Tzzbjaraj3_s',
  UrlsUrlPgkuvuyd5TkfS = 'urls_urlPgkuvuyd5Tkf_s',
  UrlsUrlPkpcaltfb2AnS = 'urls_urlPkpcaltfb2An_s',
  UrlsUrlPtogan1Cqjp2S = 'urls_urlPtogan1Cqjp2_s',
  UrlsUrlR3Dtwhyei41KS = 'urls_urlR3Dtwhyei41K_s',
  UrlsUrlSeedscommonsS = 'urls_urlSeedscommons_s',
  UrlsUrlTc3Uweyd2A2CS = 'urls_urlTc3Uweyd2A2C_s',
  UrlsUrlTestdaoS = 'urls_urlTestdao_s',
  UrlsUrlTqsre5WhjjbyS = 'urls_urlTqsre5Whjjby_s',
  UrlsUrlUwztsw1L3Na5S = 'urls_urlUwztsw1L3Na5_s',
  UrlsUrlUzihb11Q5PpiS = 'urls_urlUzihb11Q5Ppi_s',
  UrlsUrlVqsgv5Mheq1ZS = 'urls_urlVqsgv5Mheq1Z_s',
  UrlsUrlVse4A2Ttg3OnS = 'urls_urlVse4A2Ttg3On_s',
  UrlsUrlVx35Wgozl15SS = 'urls_urlVx35Wgozl15S_s',
  UrlsUrlWdxuocdyahafS = 'urls_urlWdxuocdyahaf_s',
  UrlsUrlWrongdaoS = 'urls_urlWrongdao_s',
  UrlsUrlX5Gpg2Kk14RpS = 'urls_urlX5Gpg2Kk14Rp_s',
  UrlsUrlXx4Pyzevrrz3S = 'urls_urlXx4Pyzevrrz3_s',
  UrlsUrlYjtij3OxqizoS = 'urls_urlYjtij3Oxqizo_s',
  UrlsUrlYxypcwoh1PmnS = 'urls_urlYxypcwoh1Pmn_s'
}

export type Settings = Document & {
  __typename?: 'Settings';
  admins_account_n?: Maybe<Scalars['String']>;
  admins_updatedDate_t?: Maybe<Scalars['DateTime']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  ecosystem_domain_s?: Maybe<Scalars['String']>;
  ecosystem_logo_s?: Maybe<Scalars['String']>;
  ecosystem_name_s?: Maybe<Scalars['String']>;
  ecosystem_purpose_s?: Maybe<Scalars['String']>;
  onboarders_account_n?: Maybe<Scalars['String']>;
  onboarders_updatedDate_t?: Maybe<Scalars['DateTime']>;
  otherSettings_logo_s?: Maybe<Scalars['String']>;
  settings_account_i?: Maybe<Scalars['Int64']>;
  settings_addAdminsEnabled_i?: Maybe<Scalars['Int64']>;
  settings_claimEnabled_i?: Maybe<Scalars['Int64']>;
  settings_commentsContract_n?: Maybe<Scalars['String']>;
  settings_commentsContract_s?: Maybe<Scalars['String']>;
  settings_communityotingQuorumPercent_i?: Maybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_s?: Maybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: Maybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: Maybe<Scalars['Int64']>;
  settings_contractsVersion_s?: Maybe<Scalars['String']>;
  settings_contractVersion_s?: Maybe<Scalars['String']>;
  settings_daoDescription_s?: Maybe<Scalars['String']>;
  settings_daoName_n?: Maybe<Scalars['String']>;
  settings_daoSuper_s?: Maybe<Scalars['String']>;
  settings_daoTitle_s?: Maybe<Scalars['String']>;
  settings_daoUrl_s?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_dashboardOverlayColor_s?: Maybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_s?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_s?: Maybe<Scalars['String']>;
  settings_dashboardPatternColor_s?: Maybe<Scalars['String']>;
  settings_dashboardPatternOpacity_s?: Maybe<Scalars['String']>;
  settings_dashboardTitle_s?: Maybe<Scalars['String']>;
  settings_discordUrl_s?: Maybe<Scalars['String']>;
  settings_discordURL_s?: Maybe<Scalars['String']>;
  settings_documentationButtonText_s?: Maybe<Scalars['String']>;
  settings_documentationUrl_s?: Maybe<Scalars['String']>;
  settings_documentationURL_s?: Maybe<Scalars['String']>;
  settings_ecosystemChildPrice_a?: Maybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_a?: Maybe<Scalars['String']>;
  settings_ecosystemPrice_a?: Maybe<Scalars['String']>;
  settings_ecosystemPriceStaked_a?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_exploreParagraph_s?: Maybe<Scalars['String']>;
  settings_exploreTitle_s?: Maybe<Scalars['String']>;
  settings_extendedLogo_s?: Maybe<Scalars['String']>;
  settings_governanceTokenContract_n?: Maybe<Scalars['String']>;
  settings_headerPattern_s?: Maybe<Scalars['String']>;
  settings_homepageHeader_s?: Maybe<Scalars['String']>;
  settings_homepageSubtitle_s?: Maybe<Scalars['String']>;
  settings_husdTokenContract_n?: Maybe<Scalars['String']>;
  settings_hvoiceTokenContract_n?: Maybe<Scalars['String']>;
  settings_hyphaCosaleContract_n?: Maybe<Scalars['String']>;
  settings_hyphaDeferralFactorX100_i?: Maybe<Scalars['Int64']>;
  settings_hyphaTokenContract_n?: Maybe<Scalars['String']>;
  settings_hyphaUsdValue_a?: Maybe<Scalars['String']>;
  settings_isHypha_i?: Maybe<Scalars['Int64']>;
  settings_logo_s?: Maybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: Maybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_membersHeader_s?: Maybe<Scalars['String']>;
  settings_membersOverlayColor_s?: Maybe<Scalars['String']>;
  settings_membersOverlayOpacity_s?: Maybe<Scalars['String']>;
  settings_membersParagraph_s?: Maybe<Scalars['String']>;
  settings_membersPatternColor_s?: Maybe<Scalars['String']>;
  settings_membersPatternOpacity_s?: Maybe<Scalars['String']>;
  settings_membersSubtitle_s?: Maybe<Scalars['String']>;
  settings_membersTitle_s?: Maybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: Maybe<Scalars['Int64']>;
  settings_multisigEnabled_i?: Maybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_i?: Maybe<Scalars['Int64']>;
  settings_myOtherSetting_i?: Maybe<Scalars['Int64']>;
  settings_mySetting_i?: Maybe<Scalars['Int64']>;
  settings_name_s?: Maybe<Scalars['String']>;
  settings_nextCommentSection_n?: Maybe<Scalars['String']>;
  settings_nextScheduledId_i?: Maybe<Scalars['Int64']>;
  settings_nextScheduleId_i?: Maybe<Scalars['Int64']>;
  settings_onboarderAccount_n?: Maybe<Scalars['String']>;
  settings_organisationBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_organisationOverlayColor_s?: Maybe<Scalars['String']>;
  settings_organisationOverlayOpacity_s?: Maybe<Scalars['String']>;
  settings_organisationParagraph_s?: Maybe<Scalars['String']>;
  settings_organisationPatternColor_s?: Maybe<Scalars['String']>;
  settings_organisationPatternOpacity_s?: Maybe<Scalars['String']>;
  settings_organisationTitle_s?: Maybe<Scalars['String']>;
  settings_organizationHeader_s?: Maybe<Scalars['String']>;
  settings_organizationSubtitle_s?: Maybe<Scalars['String']>;
  settings_pattern_s?: Maybe<Scalars['String']>;
  settings_patternBase64_s?: Maybe<Scalars['String']>;
  settings_patternColor_s?: Maybe<Scalars['String']>;
  settings_patternOpacity_i?: Maybe<Scalars['Int64']>;
  settings_patternOpacity_s?: Maybe<Scalars['String']>;
  settings_paused_i?: Maybe<Scalars['Int64']>;
  settings_pegToken_a?: Maybe<Scalars['String']>;
  settings_pegTokenContract_n?: Maybe<Scalars['String']>;
  settings_pegTokenName_s?: Maybe<Scalars['String']>;
  settings_periodDurationSec_i?: Maybe<Scalars['Int64']>;
  settings_periodDurationSec_s?: Maybe<Scalars['String']>;
  settings_primaryColor_s?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: Maybe<Scalars['Int64']>;
  settings_proposalsHeader_s?: Maybe<Scalars['String']>;
  settings_proposalsOverlayColor_s?: Maybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_s?: Maybe<Scalars['String']>;
  settings_proposalsParagraph_s?: Maybe<Scalars['String']>;
  settings_proposalsPatternColor_s?: Maybe<Scalars['String']>;
  settings_proposalsPatternOpacity_s?: Maybe<Scalars['String']>;
  settings_proposalsSubtitle_s?: Maybe<Scalars['String']>;
  settings_proposalsTitle_s?: Maybe<Scalars['String']>;
  settings_publisherContract_n?: Maybe<Scalars['String']>;
  settings_redemptionsEnabled_i?: Maybe<Scalars['Int64']>;
  settings_removableBannersEnabled_i?: Maybe<Scalars['Int64']>;
  settings_rewardToken_a?: Maybe<Scalars['String']>;
  settings_rewardTokenContract_n?: Maybe<Scalars['String']>;
  settings_rewardTokenName_s?: Maybe<Scalars['String']>;
  settings_rewardToPegRatio_a?: Maybe<Scalars['String']>;
  settings_rootNode_s?: Maybe<Scalars['String']>;
  settings_saleHyphaUsdValue_a?: Maybe<Scalars['String']>;
  settings_secondaryColor_s?: Maybe<Scalars['String']>;
  settings_seedsDeferralFactorX100_i?: Maybe<Scalars['Int64']>;
  settings_seedsEscrowContract_n?: Maybe<Scalars['String']>;
  settings_seedsTokenContract_n?: Maybe<Scalars['String']>;
  settings_settingsVotingAlignmentX100I_i?: Maybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_i?: Maybe<Scalars['Int64']>;
  settings_socialChat_s?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_splashOverlayColor_s?: Maybe<Scalars['String']>;
  settings_splashOverlayOpacity_s?: Maybe<Scalars['String']>;
  settings_splashPatternColor_s?: Maybe<Scalars['String']>;
  settings_splashPatternOpacity_s?: Maybe<Scalars['String']>;
  settings_testSet_i?: Maybe<Scalars['Int64']>;
  settings_testSetting_a?: Maybe<Scalars['String']>;
  settings_testSetting_s?: Maybe<Scalars['String']>;
  settings_textColor_s?: Maybe<Scalars['String']>;
  settings_threshold_i?: Maybe<Scalars['Int64']>;
  settings_title_s?: Maybe<Scalars['String']>;
  settings_treasuryContract_n?: Maybe<Scalars['String']>;
  settings_updatedDate_t?: Maybe<Scalars['DateTime']>;
  settings_upvoteCheifDelegateCount_i?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: Maybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: Maybe<Scalars['String']>;
  settings_upvoteStartDate_s?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: Maybe<Scalars['String']>;
  settings_upvoteStartTime_s?: Maybe<Scalars['String']>;
  settings_url_s?: Maybe<Scalars['String']>;
  settings_usesSeeds_i?: Maybe<Scalars['Int64']>;
  settings_voiceToken_a?: Maybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_i?: Maybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_s?: Maybe<Scalars['String']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_i?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_s?: Maybe<Scalars['String']>;
  settings_votingAlignmentPercentX100_i?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_s?: Maybe<Scalars['String']>;
  settings_votingDurationSec_i?: Maybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_i?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_s?: Maybe<Scalars['String']>;
  settings_votingDurationSeconds_i?: Maybe<Scalars['Int64']>;
  settings_votingMethod_s?: Maybe<Scalars['String']>;
  settings_votingQuorumPercent_i?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_s?: Maybe<Scalars['String']>;
  settings_votingQuorumPercentX100_i?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  tests_testingsettings_i?: Maybe<Scalars['Int64']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  urls_url_s?: Maybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_s?: Maybe<Scalars['String']>;
  urls_url1Qfetejflafl_s?: Maybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_s?: Maybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_s?: Maybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_s?: Maybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_s?: Maybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_s?: Maybe<Scalars['String']>;
  urls_urlB14Mblffsutj_s?: Maybe<Scalars['String']>;
  urls_urlBethenewdao_s?: Maybe<Scalars['String']>;
  urls_urlBtchanged_s?: Maybe<Scalars['String']>;
  urls_urlBtchangedho_s?: Maybe<Scalars['String']>;
  urls_urlBtchangedno_s?: Maybe<Scalars['String']>;
  urls_urlChildalphadx_s?: Maybe<Scalars['String']>;
  urls_urlChildttrx_s?: Maybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_s?: Maybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_s?: Maybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_s?: Maybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_s?: Maybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_s?: Maybe<Scalars['String']>;
  urls_urlEhgegumzynw3_s?: Maybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_s?: Maybe<Scalars['String']>;
  urls_urlFastdao_s?: Maybe<Scalars['String']>;
  urls_urlFrontdao_s?: Maybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_s?: Maybe<Scalars['String']>;
  urls_urlHmntptjudozg_s?: Maybe<Scalars['String']>;
  urls_urlHypha_s?: Maybe<Scalars['String']>;
  urls_urlHyphademo_s?: Maybe<Scalars['String']>;
  urls_urlJupiter_s?: Maybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_s?: Maybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_s?: Maybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_s?: Maybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_s?: Maybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_s?: Maybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_s?: Maybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_s?: Maybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_s?: Maybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_s?: Maybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_s?: Maybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_s?: Maybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_s?: Maybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_s?: Maybe<Scalars['String']>;
  urls_urlSeedscommons_s?: Maybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_s?: Maybe<Scalars['String']>;
  urls_urlTestdao_s?: Maybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_s?: Maybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_s?: Maybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_s?: Maybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_s?: Maybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_s?: Maybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_s?: Maybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_s?: Maybe<Scalars['String']>;
  urls_urlWrongdao_s?: Maybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_s?: Maybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_s?: Maybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_s?: Maybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_s?: Maybe<Scalars['String']>;
};

export type PeriodOrder = {
  asc?: InputMaybe<PeriodOrderable>;
  desc?: InputMaybe<PeriodOrderable>;
  then?: InputMaybe<PeriodOrder>;
};

export enum PeriodOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsLabelS = 'details_label_s',
  DetailsStartTimeT = 'details_startTime_t',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemReadableStartDateS = 'system_readableStartDate_s',
  SystemReadableStartTimeS = 'system_readableStartTime_s',
  SystemUpdatedDateT = 'system_updatedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Period = Document & {
  __typename?: 'Period';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_label_s?: Maybe<Scalars['String']>;
  details_startTime_t?: Maybe<Scalars['DateTime']>;
  docId: Scalars['String'];
  next?: Maybe<Array<Period>>;
  nextAggregate?: Maybe<PeriodAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_readableStartDate_s?: Maybe<Scalars['String']>;
  system_readableStartTime_s?: Maybe<Scalars['String']>;
  system_updatedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type PeriodDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type PeriodDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PeriodNextArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type PeriodNextAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type PeriodPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type PeriodPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};

export type PaymentOrder = {
  asc?: InputMaybe<PaymentOrderable>;
  desc?: InputMaybe<PaymentOrderable>;
  then?: InputMaybe<PaymentOrder>;
};

export enum PaymentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountA = 'details_amount_a',
  DetailsAssignmentHashC = 'details_assignmentHash_c',
  DetailsDaoI = 'details_dao_i',
  DetailsMemoS = 'details_memo_s',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPayoutHashC = 'details_payoutHash_c',
  DetailsPeriodHashC = 'details_periodHash_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRecipientHashC = 'details_recipientHash_c',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Payment = Document & {
  __typename?: 'Payment';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amount_a?: Maybe<Scalars['String']>;
  details_assignmentHash_c?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_memo_s?: Maybe<Scalars['String']>;
  details_paymentDate_t?: Maybe<Scalars['DateTime']>;
  details_payoutHash_c?: Maybe<Scalars['String']>;
  details_periodHash_c?: Maybe<Scalars['String']>;
  details_recipient_n?: Maybe<Scalars['String']>;
  details_recipientHash_c?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type MultisigOrder = {
  asc?: InputMaybe<MultisigOrderable>;
  desc?: InputMaybe<MultisigOrderable>;
  then?: InputMaybe<MultisigOrder>;
};

export enum MultisigOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsOwnerN = 'details_owner_n',
  DocId = 'docId',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsTitleS = 'settings_title_s',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Multisig = Document & {
  __typename?: 'Multisig';
  approvedby?: Maybe<Array<Member>>;
  approvedbyAggregate?: Maybe<MemberAggregateResult>;
  canceledby?: Maybe<Array<Member>>;
  canceledbyAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_owner_n?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  executedby?: Maybe<Array<Member>>;
  executedbyAggregate?: Maybe<MemberAggregateResult>;
  settings_communityVotingAlignmentPercent_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: Maybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: Maybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: Maybe<Scalars['Int64']>;
  settings_daoTitle_s?: Maybe<Scalars['String']>;
  settings_daoUrl_s?: Maybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_dashboardParagraph_s?: Maybe<Scalars['String']>;
  settings_dashboardTitle_s?: Maybe<Scalars['String']>;
  settings_documentationButtonText_s?: Maybe<Scalars['String']>;
  settings_documentationURL_s?: Maybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_exploreParagraph_s?: Maybe<Scalars['String']>;
  settings_exploreTitle_s?: Maybe<Scalars['String']>;
  settings_extendedLogo_s?: Maybe<Scalars['String']>;
  settings_logo_s?: Maybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: Maybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_membersParagraph_s?: Maybe<Scalars['String']>;
  settings_membersTitle_s?: Maybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: Maybe<Scalars['Int64']>;
  settings_organisationBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_organisationParagraph_s?: Maybe<Scalars['String']>;
  settings_organisationTitle_s?: Maybe<Scalars['String']>;
  settings_pattern_s?: Maybe<Scalars['String']>;
  settings_patternBase64_s?: Maybe<Scalars['String']>;
  settings_patternColor_s?: Maybe<Scalars['String']>;
  settings_patternOpacity_i?: Maybe<Scalars['Int64']>;
  settings_primaryColor_s?: Maybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: Maybe<Scalars['Int64']>;
  settings_proposalsParagraph_s?: Maybe<Scalars['String']>;
  settings_proposalsTitle_s?: Maybe<Scalars['String']>;
  settings_removableBannersEnabled_i?: Maybe<Scalars['Int64']>;
  settings_secondaryColor_s?: Maybe<Scalars['String']>;
  settings_socialChat_s?: Maybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: Maybe<Scalars['String']>;
  settings_textColor_s?: Maybe<Scalars['String']>;
  settings_title_s?: Maybe<Scalars['String']>;
  settings_upvoteCheifDelegateCount_i?: Maybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: Maybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: Maybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: Maybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: Maybe<Scalars['String']>;
  settings_url_s?: Maybe<Scalars['String']>;
  settings_votingAlignmentPercent_i?: Maybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: Maybe<Scalars['Int64']>;
  settings_votingDurationSec_i?: Maybe<Scalars['Int64']>;
  settings_votingQuorumPercent_i?: Maybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: Maybe<Scalars['Int64']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type MultisigApprovedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigApprovedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type MultisigCanceledbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigCanceledbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type MultisigExecutedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigExecutedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type PayoutOrder = {
  asc?: InputMaybe<PayoutOrderable>;
  desc?: InputMaybe<PayoutOrderable>;
  then?: InputMaybe<PayoutOrder>;
};

export enum PayoutOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBypassEscrowI = 'details_bypassEscrow_i',
  DetailsContentS = 'details_content_s',
  DetailsContributionDateT = 'details_contributionDate_t',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdAmountA = 'details_husdAmount_a',
  DetailsHvoiceAmountA = 'details_hvoiceAmount_a',
  DetailsHyphaAmountA = 'details_hyphaAmount_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsIsCustomI = 'details_isCustom_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsProposalTypeN = 'details_proposalType_n',
  DetailsProposerN = 'details_proposer_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsSeedsAmountA = 'details_seedsAmount_a',
  DetailsSeedsEscrowAmountA = 'details_seedsEscrowAmount_a',
  DetailsSeedsInstantAmountA = 'details_seedsInstantAmount_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Payout = Document & Votable & {
  __typename?: 'Payout';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completed?: Maybe<Array<Payout>>;
  completedAggregate?: Maybe<PayoutAggregateResult>;
  completedby?: Maybe<Array<Payout>>;
  completedbyAggregate?: Maybe<PayoutAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_bypassEscrow_i?: Maybe<Scalars['Int64']>;
  details_content_s?: Maybe<Scalars['String']>;
  details_contributionDate_t?: Maybe<Scalars['DateTime']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']>;
  details_husdAmount_a?: Maybe<Scalars['String']>;
  details_hvoiceAmount_a?: Maybe<Scalars['String']>;
  details_hyphaAmount_a?: Maybe<Scalars['String']>;
  details_instantHusdPercX100_i?: Maybe<Scalars['Int64']>;
  details_isCustom_i?: Maybe<Scalars['Int64']>;
  details_owner_n?: Maybe<Scalars['String']>;
  details_paymentDate_t?: Maybe<Scalars['DateTime']>;
  details_pegAmount_a?: Maybe<Scalars['String']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_proposalSubtype_n?: Maybe<Scalars['String']>;
  details_proposalType_n?: Maybe<Scalars['String']>;
  details_proposer_n?: Maybe<Scalars['String']>;
  details_questStart_i?: Maybe<Scalars['Int64']>;
  details_recipient_n?: Maybe<Scalars['String']>;
  details_rewardAmount_a?: Maybe<Scalars['String']>;
  details_seedsAmount_a?: Maybe<Scalars['String']>;
  details_seedsEscrowAmount_a?: Maybe<Scalars['String']>;
  details_seedsInstantAmount_a?: Maybe<Scalars['String']>;
  details_startPeriod_c?: Maybe<Scalars['String']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  details_usdAmount_a?: Maybe<Scalars['String']>;
  details_voiceAmount_a?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  lockedby?: Maybe<Array<Payout>>;
  lockedbyAggregate?: Maybe<PayoutAggregateResult>;
  ownedby?: Maybe<Array<Document>>;
  ownedbyAggregate?: Maybe<DocumentAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  queststart?: Maybe<Array<Payout>>;
  queststartAggregate?: Maybe<PayoutAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PayoutCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PayoutCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PayoutCompletedArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutCompletedAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutCompletedbyArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutCompletedbyAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type PayoutDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PayoutLockedbyArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutLockedbyAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutOwnedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type PayoutOwnedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type PayoutPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type PayoutPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type PayoutQueststartArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutQueststartAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type PayoutStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type PayoutVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type PayoutVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PayoutVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PayoutVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type PlanManagerOrder = {
  asc?: InputMaybe<PlanManagerOrderable>;
  desc?: InputMaybe<PlanManagerOrderable>;
  then?: InputMaybe<PlanManagerOrder>;
};

export enum PlanManagerOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsCreditA = 'details_credit_a',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PlanManager = Document & {
  __typename?: 'PlanManager';
  bill?: Maybe<Array<BillingInfo>>;
  billAggregate?: Maybe<BillingInfoAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  currentbill?: Maybe<Array<BillingInfo>>;
  currentbillAggregate?: Maybe<BillingInfoAggregateResult>;
  details_credit_a?: Maybe<Scalars['String']>;
  details_type_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  lastbill?: Maybe<Array<BillingInfo>>;
  lastbillAggregate?: Maybe<BillingInfoAggregateResult>;
  prevstartbil?: Maybe<Array<BillingInfo>>;
  prevstartbilAggregate?: Maybe<BillingInfoAggregateResult>;
  startbill?: Maybe<Array<BillingInfo>>;
  startbillAggregate?: Maybe<BillingInfoAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type PlanManagerBillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerBillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerCurrentbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerCurrentbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerLastbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerLastbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerPrevstartbilArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerPrevstartbilAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerStartbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerStartbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};

export type BillingInfoOrder = {
  asc?: InputMaybe<BillingInfoOrderable>;
  desc?: InputMaybe<BillingInfoOrderable>;
  then?: InputMaybe<BillingInfoOrder>;
};

export enum BillingInfoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBillingDayI = 'details_billingDay_i',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsExpirationDateT = 'details_expirationDate_t',
  DetailsIsInfiniteI = 'details_isInfinite_i',
  DetailsOfferDiscountPercX10000I = 'details_offerDiscountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPlanNameS = 'details_planName_s',
  DetailsPlanPriceA = 'details_planPrice_a',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTotalPaidA = 'details_totalPaid_a',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BillingInfo = Document & {
  __typename?: 'BillingInfo';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_billingDay_i?: Maybe<Scalars['Int64']>;
  details_discountPercX10000_i?: Maybe<Scalars['Int64']>;
  details_endDate_t?: Maybe<Scalars['DateTime']>;
  details_expirationDate_t?: Maybe<Scalars['DateTime']>;
  details_isInfinite_i?: Maybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_i?: Maybe<Scalars['Int64']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_planName_s?: Maybe<Scalars['String']>;
  details_planPrice_a?: Maybe<Scalars['String']>;
  details_startDate_t?: Maybe<Scalars['DateTime']>;
  details_totalPaid_a?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  nextbill?: Maybe<Array<BillingInfo>>;
  nextbillAggregate?: Maybe<BillingInfoAggregateResult>;
  priceoffer?: Maybe<Array<PriceOffer>>;
  priceofferAggregate?: Maybe<PriceOfferAggregateResult>;
  pricingplan?: Maybe<Array<PricingPlan>>;
  pricingplanAggregate?: Maybe<PricingPlanAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type BillingInfoNextbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type BillingInfoNextbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type BillingInfoPriceofferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type BillingInfoPriceofferAggregateArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type BillingInfoPricingplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type BillingInfoPricingplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};

export type PriceOfferOrder = {
  asc?: InputMaybe<PriceOfferOrderable>;
  desc?: InputMaybe<PriceOfferOrderable>;
  then?: InputMaybe<PriceOfferOrder>;
};

export enum PriceOfferOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsTagS = 'details_tag_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PriceOffer = Document & {
  __typename?: 'PriceOffer';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_discountPercX10000_i?: Maybe<Scalars['Int64']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_tag_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type PricingPlanOrder = {
  asc?: InputMaybe<PricingPlanOrderable>;
  desc?: InputMaybe<PricingPlanOrderable>;
  then?: InputMaybe<PricingPlanOrder>;
};

export enum PricingPlanOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsMaxMemberCountI = 'details_maxMemberCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPriceA = 'details_price_a',
  DetailsReactivationPeriodSecI = 'details_reactivationPeriodSec_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PricingPlan = Document & {
  __typename?: 'PricingPlan';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_discountPercX10000_i?: Maybe<Scalars['Int64']>;
  details_maxMemberCount_i?: Maybe<Scalars['Int64']>;
  details_name_s?: Maybe<Scalars['String']>;
  details_price_a?: Maybe<Scalars['String']>;
  details_reactivationPeriodSec_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  priceoffer?: Maybe<Array<PriceOffer>>;
  priceofferAggregate?: Maybe<PriceOfferAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type PricingPlanPriceofferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type PricingPlanPriceofferAggregateArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};

export type QuestcompleOrder = {
  asc?: InputMaybe<QuestcompleOrderable>;
  desc?: InputMaybe<QuestcompleOrderable>;
  then?: InputMaybe<QuestcompleOrder>;
};

export enum QuestcompleOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsQuestStartC = 'details_questStart_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Questcomple = Document & Votable & {
  __typename?: 'Questcomple';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_description_s?: Maybe<Scalars['String']>;
  details_pegAmount_a?: Maybe<Scalars['String']>;
  details_questStart_c?: Maybe<Scalars['String']>;
  details_recipient_n?: Maybe<Scalars['String']>;
  details_rewardAmount_a?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_voiceAmount_a?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QuestcompleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type QuestcompleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QuestcompleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type QuestcompleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QuestcomplePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QuestcomplePaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QuestcompleQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompleQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type QuestcompleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QuestcompleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QuestcompleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type QueststartOrder = {
  asc?: InputMaybe<QueststartOrderable>;
  desc?: InputMaybe<QueststartOrderable>;
  then?: InputMaybe<QueststartOrder>;
};

export enum QueststartOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsParentQuestI = 'details_parentQuest_i',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Queststart = Document & Votable & {
  __typename?: 'Queststart';
  ascendant?: Maybe<Array<Queststart>>;
  ascendantAggregate?: Maybe<QueststartAggregateResult>;
  assignee?: Maybe<Array<Member>>;
  assigneeAggregate?: Maybe<MemberAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completedby?: Maybe<Array<Document>>;
  completedbyAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  descendant?: Maybe<Array<Queststart>>;
  descendantAggregate?: Maybe<QueststartAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']>;
  details_assignee_n?: Maybe<Scalars['String']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_circleId_i?: Maybe<Scalars['Int64']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_fulltimeCapacityX100_i?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']>;
  details_parentQuest_i?: Maybe<Scalars['Int64']>;
  details_pegAmount_a?: Maybe<Scalars['String']>;
  details_pegCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_recipient_n?: Maybe<Scalars['String']>;
  details_rewardAmount_a?: Maybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  details_voiceAmount_a?: Maybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  failedprops?: Maybe<Array<Questcomplet>>;
  failedpropsAggregate?: Maybe<QuestcompletAggregateResult>;
  lockedby?: Maybe<Array<Questcomplet>>;
  lockedbyAggregate?: Maybe<QuestcompletAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentquest?: Maybe<Array<Queststart>>;
  parentquestAggregate?: Maybe<QueststartAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QueststartAscendantArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartAscendantAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartAssigneeArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueststartAssigneeAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueststartCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type QueststartCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type QueststartCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QueststartCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QueststartCompletedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type QueststartCompletedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type QueststartDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type QueststartDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QueststartDescendantArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartDescendantAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartFailedpropsArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueststartFailedpropsAggregateArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueststartLockedbyArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueststartLockedbyAggregateArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueststartOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueststartOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueststartParentquestArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartParentquestAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QueststartPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QueststartStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type QueststartStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type QueststartVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type QueststartVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QueststartVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QueststartVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type QuestcompletOrder = {
  asc?: InputMaybe<QuestcompletOrderable>;
  desc?: InputMaybe<QuestcompletOrderable>;
  then?: InputMaybe<QuestcompletOrder>;
};

export enum QuestcompletOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Questcomplet = Document & {
  __typename?: 'Questcomplet';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completed?: Maybe<Array<Queststart>>;
  completedAggregate?: Maybe<QueststartAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_questStart_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QuestcompletCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QuestcompletCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QuestcompletCompletedArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompletCompletedAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompletDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type QuestcompletDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QuestcompletOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type QuestcompletOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QuestcompletQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompletQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompletVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type QuestcompletVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QuestcompletVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QuestcompletVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type RoleOrder = {
  asc?: InputMaybe<RoleOrderable>;
  desc?: InputMaybe<RoleOrderable>;
  then?: InputMaybe<RoleOrder>;
};

export enum RoleOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsMinTimeShareX100I = 'details_minTimeShareX100_i',
  DetailsOriginIdI = 'details_originId_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Role = Document & Votable & {
  __typename?: 'Role';
  assignment?: Maybe<Array<Assignment>>;
  assignmentAggregate?: Maybe<AssignmentAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_i?: Maybe<Scalars['Int64']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']>;
  details_minTimeShareX100_i?: Maybe<Scalars['Int64']>;
  details_originId_i?: Maybe<Scalars['Int64']>;
  details_owner_n?: Maybe<Scalars['String']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_suspensionDate_t?: Maybe<Scalars['DateTime']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type RoleAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type RoleAssignmentAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type RoleCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type RoleCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type RoleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type RoleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type RoleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type RoleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type RoleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type RoleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type RoleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type RoleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type AssignmentOrder = {
  asc?: InputMaybe<AssignmentOrderable>;
  desc?: InputMaybe<AssignmentOrderable>;
  then?: InputMaybe<AssignmentOrder>;
};

export enum AssignmentOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsApprovedDeferredPercX100I = 'details_approvedDeferredPercX100_i',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdSalaryPerPhaseA = 'details_husdSalaryPerPhase_a',
  DetailsHvoiceSalaryPerPhaseA = 'details_hvoiceSalaryPerPhase_a',
  DetailsHyphaSalaryPerPhaseA = 'details_hyphaSalaryPerPhase_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOwnerN = 'details_owner_n',
  DetailsPegSalaryPerPeriodA = 'details_pegSalaryPerPeriod_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRewardSalaryPerPeriodA = 'details_rewardSalaryPerPeriod_a',
  DetailsRoleC = 'details_role_c',
  DetailsRoleI = 'details_role_i',
  DetailsSeedsEscrowSalaryPerPhaseA = 'details_seedsEscrowSalaryPerPhase_a',
  DetailsSeedsInstantSalaryPerPhaseA = 'details_seedsInstantSalaryPerPhase_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdSalaryValuePerPhaseA = 'details_usdSalaryValuePerPhase_a',
  DetailsVoiceSalaryPerPeriodA = 'details_voiceSalaryPerPeriod_a',
  DetailsWithdrawalDateT = 'details_withdrawalDate_t',
  DetailsWithdrawalNotesS = 'details_withdrawalNotes_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Assignment = Document & Votable & {
  __typename?: 'Assignment';
  assignee?: Maybe<Array<Document>>;
  assigneeAggregate?: Maybe<DocumentAggregateResult>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  claimed?: Maybe<Array<Period>>;
  claimedAggregate?: Maybe<PeriodAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  curtimeshare?: Maybe<Array<Timeshare>>;
  curtimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']>;
  details_approvedDeferredPercX100_i?: Maybe<Scalars['Int64']>;
  details_assignee_n?: Maybe<Scalars['String']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']>;
  details_husdSalaryPerPhase_a?: Maybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_a?: Maybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_a?: Maybe<Scalars['String']>;
  details_instantHusdPercX100_i?: Maybe<Scalars['Int64']>;
  details_originalDocument_c?: Maybe<Scalars['String']>;
  details_owner_n?: Maybe<Scalars['String']>;
  details_pegSalaryPerPeriod_a?: Maybe<Scalars['String']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_rewardSalaryPerPeriod_a?: Maybe<Scalars['String']>;
  details_role_c?: Maybe<Scalars['String']>;
  details_role_i?: Maybe<Scalars['Int64']>;
  details_seedsEscrowSalaryPerPhase_a?: Maybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_a?: Maybe<Scalars['String']>;
  details_startPeriod_c?: Maybe<Scalars['String']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_suspensionDate_t?: Maybe<Scalars['DateTime']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_a?: Maybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_a?: Maybe<Scalars['String']>;
  details_withdrawalDate_t?: Maybe<Scalars['DateTime']>;
  details_withdrawalNotes_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  initimeshare?: Maybe<Array<Timeshare>>;
  initimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  lastimeshare?: Maybe<Array<Timeshare>>;
  lastimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  original?: Maybe<Array<Assignment>>;
  originalAggregate?: Maybe<AssignmentAggregateResult>;
  ownedby?: Maybe<Array<Document>>;
  ownedbyAggregate?: Maybe<DocumentAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  timeshare?: Maybe<Array<Timeshare>>;
  timeshareAggregate?: Maybe<TimeshareAggregateResult>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type AssignmentAssigneeArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AssignmentAssigneeAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type AssignmentClaimedArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignmentClaimedAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignmentCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type AssignmentCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type AssignmentCurtimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentCurtimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type AssignmentDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type AssignmentInitimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentInitimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentLastimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentLastimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentOriginalArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type AssignmentOriginalAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type AssignmentOwnedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AssignmentOwnedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type AssignmentRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};


export type AssignmentRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type AssignmentStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignmentStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignmentTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentTimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type AssignmentVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type AssignmentVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type AssignmentVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type TimeshareOrder = {
  asc?: InputMaybe<TimeshareOrderable>;
  desc?: InputMaybe<TimeshareOrderable>;
  then?: InputMaybe<TimeshareOrder>;
};

export enum TimeshareOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssignmentC = 'details_assignment_c',
  DetailsAssignmentI = 'details_assignment_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Timeshare = Document & {
  __typename?: 'Timeshare';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_assignment_c?: Maybe<Scalars['String']>;
  details_assignment_i?: Maybe<Scalars['Int64']>;
  details_startDate_t?: Maybe<Scalars['DateTime']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  nextimeshare?: Maybe<Array<Timeshare>>;
  nextimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type TimeshareNextimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type TimeshareNextimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};

export type TreasuryOrder = {
  asc?: InputMaybe<TreasuryOrderable>;
  desc?: InputMaybe<TreasuryOrderable>;
  then?: InputMaybe<TreasuryOrder>;
};

export enum TreasuryOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Treasury = Document & {
  __typename?: 'Treasury';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  payment?: Maybe<Array<TrsyPayment>>;
  paymentAggregate?: Maybe<TrsyPaymentAggregateResult>;
  redemption?: Maybe<Array<Redemption>>;
  redemptionAggregate?: Maybe<RedemptionAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  treasurer?: Maybe<Array<Member>>;
  treasurerAggregate?: Maybe<MemberAggregateResult>;
  treasuryof?: Maybe<Array<Dao>>;
  treasuryofAggregate?: Maybe<DaoAggregateResult>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type TreasuryPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type TreasuryPaymentAggregateArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type TreasuryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type TreasuryRedemptionAggregateArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type TreasurySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type TreasurySettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type TreasuryTreasurerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type TreasuryTreasurerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type TreasuryTreasuryofArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type TreasuryTreasuryofAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};

export type TrsyPaymentOrder = {
  asc?: InputMaybe<TrsyPaymentOrderable>;
  desc?: InputMaybe<TrsyPaymentOrderable>;
  then?: InputMaybe<TrsyPaymentOrder>;
};

export enum TrsyPaymentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsConfirmedDateT = 'details_confirmedDate_t',
  DetailsCreatorN = 'details_creator_n',
  DetailsIsConfirmedI = 'details_isConfirmed_i',
  DetailsNotesS = 'details_notes_s',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyRedemptionIdI = 'legacy_redemptionId_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TrsyPayment = Document & {
  __typename?: 'TrsyPayment';
  attestation?: Maybe<Array<Attestation>>;
  attestationAggregate?: Maybe<AttestationAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amountPaid_a?: Maybe<Scalars['String']>;
  details_confirmedDate_t?: Maybe<Scalars['DateTime']>;
  details_creator_n?: Maybe<Scalars['String']>;
  details_isConfirmed_i?: Maybe<Scalars['Int64']>;
  details_notes_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  legacy_id_i?: Maybe<Scalars['Int64']>;
  legacy_redemptionId_i?: Maybe<Scalars['Int64']>;
  pays?: Maybe<Array<Redemption>>;
  paysAggregate?: Maybe<RedemptionAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type TrsyPaymentAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};


export type TrsyPaymentAttestationAggregateArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type TrsyPaymentPaysArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type TrsyPaymentPaysAggregateArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};

export type AttestationOrder = {
  asc?: InputMaybe<AttestationOrderable>;
  desc?: InputMaybe<AttestationOrderable>;
  then?: InputMaybe<AttestationOrder>;
};

export enum AttestationOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsTreasurerN = 'details_treasurer_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Attestation = Document & {
  __typename?: 'Attestation';
  attestedby?: Maybe<Array<Member>>;
  attestedbyAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_treasurer_n?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type AttestationAttestedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type AttestationAttestedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type RedemptionOrder = {
  asc?: InputMaybe<RedemptionOrderable>;
  desc?: InputMaybe<RedemptionOrderable>;
  then?: InputMaybe<RedemptionOrder>;
};

export enum RedemptionOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsAmountRequestedA = 'details_amountRequested_a',
  DetailsRequestorN = 'details_requestor_n',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyNotesS = 'legacy_notes_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Redemption = Document & {
  __typename?: 'Redemption';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amountPaid_a?: Maybe<Scalars['String']>;
  details_amountRequested_a?: Maybe<Scalars['String']>;
  details_requestor_n?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  legacy_id_i?: Maybe<Scalars['Int64']>;
  legacy_notes_s?: Maybe<Scalars['String']>;
  paidby?: Maybe<Array<TrsyPayment>>;
  paidbyAggregate?: Maybe<TrsyPaymentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type RedemptionPaidbyArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type RedemptionPaidbyAggregateArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};

export type VoteGroupOrder = {
  asc?: InputMaybe<VoteGroupOrderable>;
  desc?: InputMaybe<VoteGroupOrderable>;
  then?: InputMaybe<VoteGroupOrder>;
};

export enum VoteGroupOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRoundIdI = 'details_roundId_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteGroup = Document & {
  __typename?: 'VoteGroup';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_roundId_i?: Maybe<Scalars['Int64']>;
  docId: Scalars['String'];
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Member>>;
  voteAggregate?: Maybe<MemberAggregateResult>;
};


export type VoteGroupRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type VoteGroupRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type VoteGroupVoteArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type VoteGroupVoteAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type BalanceOrder = {
  asc?: InputMaybe<BalanceOrderable>;
  desc?: InputMaybe<BalanceOrderable>;
  then?: InputMaybe<BalanceOrder>;
};

export enum BalanceOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsQuantityA = 'details_quantity_a',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type Balance = Document & {
  __typename?: 'Balance';
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_quantity_a?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  owner?: Maybe<Array<Member>>;
  ownerAggregate?: Maybe<MemberAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type BalanceOwnerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type BalanceOwnerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type Cursor = {
  __typename?: 'Cursor';
  cursor: Scalars['String'];
  id: Scalars['String'];
};

export type Dho = Document & {
  __typename?: 'Dho';
  alert?: Maybe<Array<Alert>>;
  alertAggregate?: Maybe<AlertAggregateResult>;
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  chiefdelegate?: Maybe<Array<Badge>>;
  chiefdelegateAggregate?: Maybe<BadgeAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  defpriceplan?: Maybe<Array<PricingPlan>>;
  defpriceplanAggregate?: Maybe<PricingPlanAggregateResult>;
  details_rootNode_n: Scalars['String'];
  docId: Scalars['String'];
  ecopriceplan?: Maybe<Array<PricingPlan>>;
  ecopriceplanAggregate?: Maybe<PricingPlanAggregateResult>;
  failedprops?: Maybe<Array<Document>>;
  failedpropsAggregate?: Maybe<DocumentAggregateResult>;
  headdelegate?: Maybe<Array<Badge>>;
  headdelegateAggregate?: Maybe<BadgeAggregateResult>;
  L2Nep42?: Maybe<Array<Dao>>;
  L2Nep42Aggregate?: Maybe<DaoAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  passedprops?: Maybe<Array<Document>>;
  passedpropsAggregate?: Maybe<DocumentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  pricingplan?: Maybe<Array<PricingPlan>>;
  pricingplanAggregate?: Maybe<PricingPlanAggregateResult>;
  proposal?: Maybe<Array<Document>>;
  proposalAggregate?: Maybe<DocumentAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  suspended?: Maybe<Array<Assignment>>;
  suspendedAggregate?: Maybe<AssignmentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type DhoAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};


export type DhoAlertAggregateArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type DhoApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DhoApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DhoBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoChiefdelegateArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoChiefdelegateAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoDefpriceplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoDefpriceplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoEcopriceplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoEcopriceplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoFailedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoFailedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoHeaddelegateArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoHeaddelegateAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoL2Nep42Args = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoL2Nep42AggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type DhoMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DhoPassedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoPassedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type DhoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type DhoPricingplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoPricingplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoProposalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoProposalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};


export type DhoRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type DhoSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DhoSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type DhoStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DhoStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DhoSuspendedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type DhoSuspendedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};

export type DoccacheConfig = {
  __typename?: 'DoccacheConfig';
  contract: Scalars['String'];
  documentsTable: Scalars['String'];
  edgesTable: Scalars['String'];
  elasticApiKey: Scalars['String'];
  elasticEndpoint: Scalars['String'];
  eosEndpoint: Scalars['String'];
  id: Scalars['String'];
};

export type Edit = Document & Votable & {
  __typename?: 'Edit';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotDescription_s?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_ballotTitle_s?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_originalDocument_c?: Maybe<Scalars['String']>;
  details_originalDocument_i?: Maybe<Scalars['Int64']>;
  details_periodCount_i?: Maybe<Scalars['Int64']>;
  details_role_c?: Maybe<Scalars['String']>;
  details_startPeriod_c?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  original?: Maybe<Array<Document>>;
  originalAggregate?: Maybe<DocumentAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type EditCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type EditCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type EditDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type EditDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type EditOriginalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type EditOriginalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type EditOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type EditOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type EditVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type EditVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type EditVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type EditVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type Memo = Document & {
  __typename?: 'Memo';
  assigned?: Maybe<Array<Assignment>>;
  assignedAggregate?: Maybe<AssignmentAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_memo_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  owns?: Maybe<Array<Document>>;
  ownsAggregate?: Maybe<DocumentAggregateResult>;
  paid?: Maybe<Array<Payment>>;
  paidAggregate?: Maybe<PaymentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};


export type MemoAssignedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type MemoAssignedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type MemoOwnsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemoOwnsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemoPaidArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemoPaidAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type MemoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};

export type Policy = Document & {
  __typename?: 'Policy';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_name_s?: Maybe<Scalars['String']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']>;
  details_purpose_s?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_url_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentcircle?: Maybe<Array<Circle>>;
  parentcircleAggregate?: Maybe<CircleAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PolicyCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PolicyCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PolicyDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type PolicyDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PolicyOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type PolicyOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type PolicyParentcircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type PolicyParentcircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type PolicyVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type PolicyVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PolicyVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PolicyVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type Poll = Document & {
  __typename?: 'Poll';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  details_votingMethod_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PollCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PollCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PollDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type PollDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PollOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type PollOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type PollVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type PollVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PollVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PollVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type Suspend = Document & Votable & {
  __typename?: 'Suspend';
  ballot_expiration_t?: Maybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']>;
  details_ballotSupply_a?: Maybe<Scalars['String']>;
  details_dao_i?: Maybe<Scalars['Int64']>;
  details_description_s?: Maybe<Scalars['String']>;
  details_originalDocument_c?: Maybe<Scalars['String']>;
  details_originalDocument_i?: Maybe<Scalars['Int64']>;
  details_state_s?: Maybe<Scalars['String']>;
  details_title_s?: Maybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  suspend?: Maybe<Array<Document>>;
  suspendAggregate?: Maybe<DocumentAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']>;
  system_commentName_n?: Maybe<Scalars['String']>;
  system_contractVersion_s?: Maybe<Scalars['String']>;
  system_description_s?: Maybe<Scalars['String']>;
  system_nodeLabel_s?: Maybe<Scalars['String']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type SuspendDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type SuspendDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type SuspendOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type SuspendOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type SuspendSuspendArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type SuspendSuspendAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type SuspendVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type SuspendVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type SuspendVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type SuspendVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type CursorOrder = {
  asc?: InputMaybe<CursorOrderable>;
  desc?: InputMaybe<CursorOrderable>;
  then?: InputMaybe<CursorOrder>;
};

export enum CursorOrderable {
  Cursor = 'cursor',
  Id = 'id'
}

export type DhoOrder = {
  asc?: InputMaybe<DhoOrderable>;
  desc?: InputMaybe<DhoOrderable>;
  then?: InputMaybe<DhoOrder>;
};

export enum DhoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRootNodeN = 'details_rootNode_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DoccacheConfigOrder = {
  asc?: InputMaybe<DoccacheConfigOrderable>;
  desc?: InputMaybe<DoccacheConfigOrderable>;
  then?: InputMaybe<DoccacheConfigOrder>;
};

export enum DoccacheConfigOrderable {
  Contract = 'contract',
  DocumentsTable = 'documentsTable',
  EdgesTable = 'edgesTable',
  ElasticApiKey = 'elasticApiKey',
  ElasticEndpoint = 'elasticEndpoint',
  EosEndpoint = 'eosEndpoint',
  Id = 'id'
}

export type EditOrder = {
  asc?: InputMaybe<EditOrderable>;
  desc?: InputMaybe<EditOrderable>;
  then?: InputMaybe<EditOrder>;
};

export enum EditOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotDescriptionS = 'details_ballotDescription_s',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBallotTitleS = 'details_ballotTitle_s',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRoleC = 'details_role_c',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStateS = 'details_state_s',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MemoOrder = {
  asc?: InputMaybe<MemoOrderable>;
  desc?: InputMaybe<MemoOrderable>;
  then?: InputMaybe<MemoOrder>;
};

export enum MemoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemoS = 'details_memo_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PolicyOrder = {
  asc?: InputMaybe<PolicyOrderable>;
  desc?: InputMaybe<PolicyOrderable>;
  then?: InputMaybe<PolicyOrder>;
};

export enum PolicyOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PollOrder = {
  asc?: InputMaybe<PollOrderable>;
  desc?: InputMaybe<PollOrderable>;
  then?: InputMaybe<PollOrder>;
};

export enum PollOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVotingMethodS = 'details_votingMethod_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type SuspendOrder = {
  asc?: InputMaybe<SuspendOrderable>;
  desc?: InputMaybe<SuspendOrderable>;
  then?: InputMaybe<SuspendOrder>;
};

export enum SuspendOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TypeVersionOrder = {
  asc?: InputMaybe<TypeVersionOrderable>;
  desc?: InputMaybe<TypeVersionOrderable>;
  then?: InputMaybe<TypeVersionOrder>;
};

export enum TypeVersionOrderable {
  Type = 'type',
  Version = 'version'
}

export type TypeVersion = {
  __typename?: 'TypeVersion';
  type: Scalars['String'];
  version?: Maybe<Scalars['String']>;
};

export type VotableOrder = {
  asc?: InputMaybe<VotableOrderable>;
  desc?: InputMaybe<VotableOrderable>;
  then?: InputMaybe<VotableOrder>;
};

export enum VotableOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  DetailsDescriptionS = 'details_description_s',
  DetailsTitleS = 'details_title_s'
}

export type Mutation = {
  __typename?: 'Mutation';
  addAlert?: Maybe<AddAlertPayload>;
  addAssignbadge?: Maybe<AddAssignbadgePayload>;
  addAssignment?: Maybe<AddAssignmentPayload>;
  addAttestation?: Maybe<AddAttestationPayload>;
  addBadge?: Maybe<AddBadgePayload>;
  addBalance?: Maybe<AddBalancePayload>;
  addBillingInfo?: Maybe<AddBillingInfoPayload>;
  addBudget?: Maybe<AddBudgetPayload>;
  addCircle?: Maybe<AddCirclePayload>;
  addCmntSection?: Maybe<AddCmntSectionPayload>;
  addComment?: Maybe<AddCommentPayload>;
  addCursor?: Maybe<AddCursorPayload>;
  addDao?: Maybe<AddDaoPayload>;
  addDaoDraft?: Maybe<AddDaoDraftPayload>;
  addDho?: Maybe<AddDhoPayload>;
  addDoccacheConfig?: Maybe<AddDoccacheConfigPayload>;
  addEdit?: Maybe<AddEditPayload>;
  addElectnRound?: Maybe<AddElectnRoundPayload>;
  addMember?: Maybe<AddMemberPayload>;
  addMemo?: Maybe<AddMemoPayload>;
  addMultisig?: Maybe<AddMultisigPayload>;
  addPayment?: Maybe<AddPaymentPayload>;
  addPayout?: Maybe<AddPayoutPayload>;
  addPeriod?: Maybe<AddPeriodPayload>;
  addPlanManager?: Maybe<AddPlanManagerPayload>;
  addPolicy?: Maybe<AddPolicyPayload>;
  addPoll?: Maybe<AddPollPayload>;
  addPriceOffer?: Maybe<AddPriceOfferPayload>;
  addPricingPlan?: Maybe<AddPricingPlanPayload>;
  addQuestcomple?: Maybe<AddQuestcomplePayload>;
  addQuestcomplet?: Maybe<AddQuestcompletPayload>;
  addQueststart?: Maybe<AddQueststartPayload>;
  addReaction?: Maybe<AddReactionPayload>;
  addRedemption?: Maybe<AddRedemptionPayload>;
  addRole?: Maybe<AddRolePayload>;
  addSettings?: Maybe<AddSettingsPayload>;
  addSuspend?: Maybe<AddSuspendPayload>;
  addTimeshare?: Maybe<AddTimesharePayload>;
  addTreasury?: Maybe<AddTreasuryPayload>;
  addTrsyPayment?: Maybe<AddTrsyPaymentPayload>;
  addTypeVersion?: Maybe<AddTypeVersionPayload>;
  addUpvtElectn?: Maybe<AddUpvtElectnPayload>;
  addVote?: Maybe<AddVotePayload>;
  addVoteGroup?: Maybe<AddVoteGroupPayload>;
  addVoteTally?: Maybe<AddVoteTallyPayload>;
  deleteAlert?: Maybe<DeleteAlertPayload>;
  deleteAssignbadge?: Maybe<DeleteAssignbadgePayload>;
  deleteAssignment?: Maybe<DeleteAssignmentPayload>;
  deleteAttestation?: Maybe<DeleteAttestationPayload>;
  deleteBadge?: Maybe<DeleteBadgePayload>;
  deleteBalance?: Maybe<DeleteBalancePayload>;
  deleteBillingInfo?: Maybe<DeleteBillingInfoPayload>;
  deleteBudget?: Maybe<DeleteBudgetPayload>;
  deleteCircle?: Maybe<DeleteCirclePayload>;
  deleteCmntSection?: Maybe<DeleteCmntSectionPayload>;
  deleteComment?: Maybe<DeleteCommentPayload>;
  deleteCursor?: Maybe<DeleteCursorPayload>;
  deleteDao?: Maybe<DeleteDaoPayload>;
  deleteDaoDraft?: Maybe<DeleteDaoDraftPayload>;
  deleteDho?: Maybe<DeleteDhoPayload>;
  deleteDoccacheConfig?: Maybe<DeleteDoccacheConfigPayload>;
  deleteDocument?: Maybe<DeleteDocumentPayload>;
  deleteEdit?: Maybe<DeleteEditPayload>;
  deleteElectnRound?: Maybe<DeleteElectnRoundPayload>;
  deleteMember?: Maybe<DeleteMemberPayload>;
  deleteMemo?: Maybe<DeleteMemoPayload>;
  deleteMultisig?: Maybe<DeleteMultisigPayload>;
  deletePayment?: Maybe<DeletePaymentPayload>;
  deletePayout?: Maybe<DeletePayoutPayload>;
  deletePeriod?: Maybe<DeletePeriodPayload>;
  deletePlanManager?: Maybe<DeletePlanManagerPayload>;
  deletePolicy?: Maybe<DeletePolicyPayload>;
  deletePoll?: Maybe<DeletePollPayload>;
  deletePriceOffer?: Maybe<DeletePriceOfferPayload>;
  deletePricingPlan?: Maybe<DeletePricingPlanPayload>;
  deleteQuestcomple?: Maybe<DeleteQuestcomplePayload>;
  deleteQuestcomplet?: Maybe<DeleteQuestcompletPayload>;
  deleteQueststart?: Maybe<DeleteQueststartPayload>;
  deleteReaction?: Maybe<DeleteReactionPayload>;
  deleteRedemption?: Maybe<DeleteRedemptionPayload>;
  deleteRole?: Maybe<DeleteRolePayload>;
  deleteSettings?: Maybe<DeleteSettingsPayload>;
  deleteSuspend?: Maybe<DeleteSuspendPayload>;
  deleteTimeshare?: Maybe<DeleteTimesharePayload>;
  deleteTreasury?: Maybe<DeleteTreasuryPayload>;
  deleteTrsyPayment?: Maybe<DeleteTrsyPaymentPayload>;
  deleteTypeVersion?: Maybe<DeleteTypeVersionPayload>;
  deleteUpvtElectn?: Maybe<DeleteUpvtElectnPayload>;
  deleteVotable?: Maybe<DeleteVotablePayload>;
  deleteVote?: Maybe<DeleteVotePayload>;
  deleteVoteGroup?: Maybe<DeleteVoteGroupPayload>;
  deleteVoteTally?: Maybe<DeleteVoteTallyPayload>;
  updateAlert?: Maybe<UpdateAlertPayload>;
  updateAssignbadge?: Maybe<UpdateAssignbadgePayload>;
  updateAssignment?: Maybe<UpdateAssignmentPayload>;
  updateAttestation?: Maybe<UpdateAttestationPayload>;
  updateBadge?: Maybe<UpdateBadgePayload>;
  updateBalance?: Maybe<UpdateBalancePayload>;
  updateBillingInfo?: Maybe<UpdateBillingInfoPayload>;
  updateBudget?: Maybe<UpdateBudgetPayload>;
  updateCircle?: Maybe<UpdateCirclePayload>;
  updateCmntSection?: Maybe<UpdateCmntSectionPayload>;
  updateComment?: Maybe<UpdateCommentPayload>;
  updateCursor?: Maybe<UpdateCursorPayload>;
  updateDao?: Maybe<UpdateDaoPayload>;
  updateDaoDraft?: Maybe<UpdateDaoDraftPayload>;
  updateDho?: Maybe<UpdateDhoPayload>;
  updateDoccacheConfig?: Maybe<UpdateDoccacheConfigPayload>;
  updateDocument?: Maybe<UpdateDocumentPayload>;
  updateEdit?: Maybe<UpdateEditPayload>;
  updateElectnRound?: Maybe<UpdateElectnRoundPayload>;
  updateMember?: Maybe<UpdateMemberPayload>;
  updateMemo?: Maybe<UpdateMemoPayload>;
  updateMultisig?: Maybe<UpdateMultisigPayload>;
  updatePayment?: Maybe<UpdatePaymentPayload>;
  updatePayout?: Maybe<UpdatePayoutPayload>;
  updatePeriod?: Maybe<UpdatePeriodPayload>;
  updatePlanManager?: Maybe<UpdatePlanManagerPayload>;
  updatePolicy?: Maybe<UpdatePolicyPayload>;
  updatePoll?: Maybe<UpdatePollPayload>;
  updatePriceOffer?: Maybe<UpdatePriceOfferPayload>;
  updatePricingPlan?: Maybe<UpdatePricingPlanPayload>;
  updateQuestcomple?: Maybe<UpdateQuestcomplePayload>;
  updateQuestcomplet?: Maybe<UpdateQuestcompletPayload>;
  updateQueststart?: Maybe<UpdateQueststartPayload>;
  updateReaction?: Maybe<UpdateReactionPayload>;
  updateRedemption?: Maybe<UpdateRedemptionPayload>;
  updateRole?: Maybe<UpdateRolePayload>;
  updateSettings?: Maybe<UpdateSettingsPayload>;
  updateSuspend?: Maybe<UpdateSuspendPayload>;
  updateTimeshare?: Maybe<UpdateTimesharePayload>;
  updateTreasury?: Maybe<UpdateTreasuryPayload>;
  updateTrsyPayment?: Maybe<UpdateTrsyPaymentPayload>;
  updateTypeVersion?: Maybe<UpdateTypeVersionPayload>;
  updateUpvtElectn?: Maybe<UpdateUpvtElectnPayload>;
  updateVotable?: Maybe<UpdateVotablePayload>;
  updateVote?: Maybe<UpdateVotePayload>;
  updateVoteGroup?: Maybe<UpdateVoteGroupPayload>;
  updateVoteTally?: Maybe<UpdateVoteTallyPayload>;
};


export type MutationAddAlertArgs = {
  input: Array<AddAlertInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddAssignbadgeArgs = {
  input: Array<AddAssignbadgeInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddAssignmentArgs = {
  input: Array<AddAssignmentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddAttestationArgs = {
  input: Array<AddAttestationInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddBadgeArgs = {
  input: Array<AddBadgeInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddBalanceArgs = {
  input: Array<AddBalanceInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddBillingInfoArgs = {
  input: Array<AddBillingInfoInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddBudgetArgs = {
  input: Array<AddBudgetInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddCircleArgs = {
  input: Array<AddCircleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddCmntSectionArgs = {
  input: Array<AddCmntSectionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddCommentArgs = {
  input: Array<AddCommentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddCursorArgs = {
  input: Array<AddCursorInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddDaoArgs = {
  input: Array<AddDaoInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddDaoDraftArgs = {
  input: Array<AddDaoDraftInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddDhoArgs = {
  input: Array<AddDhoInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddDoccacheConfigArgs = {
  input: Array<AddDoccacheConfigInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddEditArgs = {
  input: Array<AddEditInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddElectnRoundArgs = {
  input: Array<AddElectnRoundInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddMemberArgs = {
  input: Array<AddMemberInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddMemoArgs = {
  input: Array<AddMemoInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddMultisigArgs = {
  input: Array<AddMultisigInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPaymentArgs = {
  input: Array<AddPaymentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPayoutArgs = {
  input: Array<AddPayoutInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPeriodArgs = {
  input: Array<AddPeriodInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPlanManagerArgs = {
  input: Array<AddPlanManagerInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPolicyArgs = {
  input: Array<AddPolicyInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPollArgs = {
  input: Array<AddPollInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPriceOfferArgs = {
  input: Array<AddPriceOfferInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddPricingPlanArgs = {
  input: Array<AddPricingPlanInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddQuestcompleArgs = {
  input: Array<AddQuestcompleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddQuestcompletArgs = {
  input: Array<AddQuestcompletInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddQueststartArgs = {
  input: Array<AddQueststartInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddReactionArgs = {
  input: Array<AddReactionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddRedemptionArgs = {
  input: Array<AddRedemptionInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddRoleArgs = {
  input: Array<AddRoleInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddSettingsArgs = {
  input: Array<AddSettingsInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddSuspendArgs = {
  input: Array<AddSuspendInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddTimeshareArgs = {
  input: Array<AddTimeshareInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddTreasuryArgs = {
  input: Array<AddTreasuryInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddTrsyPaymentArgs = {
  input: Array<AddTrsyPaymentInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddTypeVersionArgs = {
  input: Array<AddTypeVersionInput>;
};


export type MutationAddUpvtElectnArgs = {
  input: Array<AddUpvtElectnInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddVoteArgs = {
  input: Array<AddVoteInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddVoteGroupArgs = {
  input: Array<AddVoteGroupInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationAddVoteTallyArgs = {
  input: Array<AddVoteTallyInput>;
  upsert?: InputMaybe<Scalars['Boolean']>;
};


export type MutationDeleteAlertArgs = {
  filter: AlertFilter;
};


export type MutationDeleteAssignbadgeArgs = {
  filter: AssignbadgeFilter;
};


export type MutationDeleteAssignmentArgs = {
  filter: AssignmentFilter;
};


export type MutationDeleteAttestationArgs = {
  filter: AttestationFilter;
};


export type MutationDeleteBadgeArgs = {
  filter: BadgeFilter;
};


export type MutationDeleteBalanceArgs = {
  filter: BalanceFilter;
};


export type MutationDeleteBillingInfoArgs = {
  filter: BillingInfoFilter;
};


export type MutationDeleteBudgetArgs = {
  filter: BudgetFilter;
};


export type MutationDeleteCircleArgs = {
  filter: CircleFilter;
};


export type MutationDeleteCmntSectionArgs = {
  filter: CmntSectionFilter;
};


export type MutationDeleteCommentArgs = {
  filter: CommentFilter;
};


export type MutationDeleteCursorArgs = {
  filter: CursorFilter;
};


export type MutationDeleteDaoArgs = {
  filter: DaoFilter;
};


export type MutationDeleteDaoDraftArgs = {
  filter: DaoDraftFilter;
};


export type MutationDeleteDhoArgs = {
  filter: DhoFilter;
};


export type MutationDeleteDoccacheConfigArgs = {
  filter: DoccacheConfigFilter;
};


export type MutationDeleteDocumentArgs = {
  filter: DocumentFilter;
};


export type MutationDeleteEditArgs = {
  filter: EditFilter;
};


export type MutationDeleteElectnRoundArgs = {
  filter: ElectnRoundFilter;
};


export type MutationDeleteMemberArgs = {
  filter: MemberFilter;
};


export type MutationDeleteMemoArgs = {
  filter: MemoFilter;
};


export type MutationDeleteMultisigArgs = {
  filter: MultisigFilter;
};


export type MutationDeletePaymentArgs = {
  filter: PaymentFilter;
};


export type MutationDeletePayoutArgs = {
  filter: PayoutFilter;
};


export type MutationDeletePeriodArgs = {
  filter: PeriodFilter;
};


export type MutationDeletePlanManagerArgs = {
  filter: PlanManagerFilter;
};


export type MutationDeletePolicyArgs = {
  filter: PolicyFilter;
};


export type MutationDeletePollArgs = {
  filter: PollFilter;
};


export type MutationDeletePriceOfferArgs = {
  filter: PriceOfferFilter;
};


export type MutationDeletePricingPlanArgs = {
  filter: PricingPlanFilter;
};


export type MutationDeleteQuestcompleArgs = {
  filter: QuestcompleFilter;
};


export type MutationDeleteQuestcompletArgs = {
  filter: QuestcompletFilter;
};


export type MutationDeleteQueststartArgs = {
  filter: QueststartFilter;
};


export type MutationDeleteReactionArgs = {
  filter: ReactionFilter;
};


export type MutationDeleteRedemptionArgs = {
  filter: RedemptionFilter;
};


export type MutationDeleteRoleArgs = {
  filter: RoleFilter;
};


export type MutationDeleteSettingsArgs = {
  filter: SettingsFilter;
};


export type MutationDeleteSuspendArgs = {
  filter: SuspendFilter;
};


export type MutationDeleteTimeshareArgs = {
  filter: TimeshareFilter;
};


export type MutationDeleteTreasuryArgs = {
  filter: TreasuryFilter;
};


export type MutationDeleteTrsyPaymentArgs = {
  filter: TrsyPaymentFilter;
};


export type MutationDeleteTypeVersionArgs = {
  filter: TypeVersionFilter;
};


export type MutationDeleteUpvtElectnArgs = {
  filter: UpvtElectnFilter;
};


export type MutationDeleteVotableArgs = {
  filter: VotableFilter;
};


export type MutationDeleteVoteArgs = {
  filter: VoteFilter;
};


export type MutationDeleteVoteGroupArgs = {
  filter: VoteGroupFilter;
};


export type MutationDeleteVoteTallyArgs = {
  filter: VoteTallyFilter;
};


export type MutationUpdateAlertArgs = {
  input: UpdateAlertInput;
};


export type MutationUpdateAssignbadgeArgs = {
  input: UpdateAssignbadgeInput;
};


export type MutationUpdateAssignmentArgs = {
  input: UpdateAssignmentInput;
};


export type MutationUpdateAttestationArgs = {
  input: UpdateAttestationInput;
};


export type MutationUpdateBadgeArgs = {
  input: UpdateBadgeInput;
};


export type MutationUpdateBalanceArgs = {
  input: UpdateBalanceInput;
};


export type MutationUpdateBillingInfoArgs = {
  input: UpdateBillingInfoInput;
};


export type MutationUpdateBudgetArgs = {
  input: UpdateBudgetInput;
};


export type MutationUpdateCircleArgs = {
  input: UpdateCircleInput;
};


export type MutationUpdateCmntSectionArgs = {
  input: UpdateCmntSectionInput;
};


export type MutationUpdateCommentArgs = {
  input: UpdateCommentInput;
};


export type MutationUpdateCursorArgs = {
  input: UpdateCursorInput;
};


export type MutationUpdateDaoArgs = {
  input: UpdateDaoInput;
};


export type MutationUpdateDaoDraftArgs = {
  input: UpdateDaoDraftInput;
};


export type MutationUpdateDhoArgs = {
  input: UpdateDhoInput;
};


export type MutationUpdateDoccacheConfigArgs = {
  input: UpdateDoccacheConfigInput;
};


export type MutationUpdateDocumentArgs = {
  input: UpdateDocumentInput;
};


export type MutationUpdateEditArgs = {
  input: UpdateEditInput;
};


export type MutationUpdateElectnRoundArgs = {
  input: UpdateElectnRoundInput;
};


export type MutationUpdateMemberArgs = {
  input: UpdateMemberInput;
};


export type MutationUpdateMemoArgs = {
  input: UpdateMemoInput;
};


export type MutationUpdateMultisigArgs = {
  input: UpdateMultisigInput;
};


export type MutationUpdatePaymentArgs = {
  input: UpdatePaymentInput;
};


export type MutationUpdatePayoutArgs = {
  input: UpdatePayoutInput;
};


export type MutationUpdatePeriodArgs = {
  input: UpdatePeriodInput;
};


export type MutationUpdatePlanManagerArgs = {
  input: UpdatePlanManagerInput;
};


export type MutationUpdatePolicyArgs = {
  input: UpdatePolicyInput;
};


export type MutationUpdatePollArgs = {
  input: UpdatePollInput;
};


export type MutationUpdatePriceOfferArgs = {
  input: UpdatePriceOfferInput;
};


export type MutationUpdatePricingPlanArgs = {
  input: UpdatePricingPlanInput;
};


export type MutationUpdateQuestcompleArgs = {
  input: UpdateQuestcompleInput;
};


export type MutationUpdateQuestcompletArgs = {
  input: UpdateQuestcompletInput;
};


export type MutationUpdateQueststartArgs = {
  input: UpdateQueststartInput;
};


export type MutationUpdateReactionArgs = {
  input: UpdateReactionInput;
};


export type MutationUpdateRedemptionArgs = {
  input: UpdateRedemptionInput;
};


export type MutationUpdateRoleArgs = {
  input: UpdateRoleInput;
};


export type MutationUpdateSettingsArgs = {
  input: UpdateSettingsInput;
};


export type MutationUpdateSuspendArgs = {
  input: UpdateSuspendInput;
};


export type MutationUpdateTimeshareArgs = {
  input: UpdateTimeshareInput;
};


export type MutationUpdateTreasuryArgs = {
  input: UpdateTreasuryInput;
};


export type MutationUpdateTrsyPaymentArgs = {
  input: UpdateTrsyPaymentInput;
};


export type MutationUpdateTypeVersionArgs = {
  input: UpdateTypeVersionInput;
};


export type MutationUpdateUpvtElectnArgs = {
  input: UpdateUpvtElectnInput;
};


export type MutationUpdateVotableArgs = {
  input: UpdateVotableInput;
};


export type MutationUpdateVoteArgs = {
  input: UpdateVoteInput;
};


export type MutationUpdateVoteGroupArgs = {
  input: UpdateVoteGroupInput;
};


export type MutationUpdateVoteTallyArgs = {
  input: UpdateVoteTallyInput;
};

export type AddAlertInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_content_s?: InputMaybe<Scalars['String']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']>;
  details_level_n?: InputMaybe<Scalars['String']>;
  details_level_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type DocumentRef = {
  docId: Scalars['String'];
};

export type AddAlertPayload = {
  __typename?: 'AddAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};

export type AddAssignbadgeInput = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_c?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_category_s?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type BadgeRef = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_icon_s?: InputMaybe<Scalars['String']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AssignbadgeRef = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_c?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_category_s?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type CmntSectionRef = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type CommentRef = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']>;
  comment_content_s?: InputMaybe<Scalars['String']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type MemberRef = {
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_member_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
};

export type CircleRef = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type BudgetRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type DaoRef = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoName_n?: InputMaybe<Scalars['String']>;
  details_daoType_s?: InputMaybe<Scalars['String']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']>;
  details_unusedField_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']>;
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type AlertRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_content_s?: InputMaybe<Scalars['String']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']>;
  details_level_n?: InputMaybe<Scalars['String']>;
  details_level_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type ElectnRoundRef = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_delegatePower_i?: InputMaybe<Scalars['Int64']>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type UpvtElectnRef = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_status_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type DaoDraftRef = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_daoName_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  settings?: InputMaybe<Array<SettingsRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type SettingsRef = {
  admins_account_n?: InputMaybe<Scalars['String']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ecosystem_domain_s?: InputMaybe<Scalars['String']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']>;
  onboarders_account_n?: InputMaybe<Scalars['String']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']>;
  settings_account_i?: InputMaybe<Scalars['Int64']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']>;
  settings_daoName_n?: InputMaybe<Scalars['String']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']>;
  settings_name_s?: InputMaybe<Scalars['String']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  urls_url_s?: InputMaybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']>;
};

export type PeriodRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  docId?: InputMaybe<Scalars['String']>;
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type PaymentRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amount_a?: InputMaybe<Scalars['String']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_memo_s?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']>;
  details_periodHash_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type MultisigRef = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type PayoutRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']>;
  details_content_s?: InputMaybe<Scalars['String']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']>;
  details_proposalType_n?: InputMaybe<Scalars['String']>;
  details_proposer_n?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type VoteRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote_date_t?: InputMaybe<Scalars['DateTime']>;
  vote_notes_s?: InputMaybe<Scalars['String']>;
  vote_vote_s?: InputMaybe<Scalars['String']>;
  vote_votePower_a?: InputMaybe<Scalars['String']>;
  vote_voter_n?: InputMaybe<Scalars['String']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type VoteTallyRef = {
  abstain_votePower_a?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  fail_votePower_a?: InputMaybe<Scalars['String']>;
  pass_votePower_a?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type PlanManagerRef = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type BillingInfoRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_billingDay_i?: InputMaybe<Scalars['Int64']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_planName_s?: InputMaybe<Scalars['String']>;
  details_planPrice_a?: InputMaybe<Scalars['String']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type PriceOfferRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_tag_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type PricingPlanRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_price_a?: InputMaybe<Scalars['String']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type QuestcompleRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_questStart_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type QueststartRef = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type QuestcompletRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type RoleRef = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_originId_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AssignmentRef = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_role_i?: InputMaybe<Scalars['Int64']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type TimeshareRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_assignment_c?: InputMaybe<Scalars['String']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type TreasuryRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type TrsyPaymentRef = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']>;
  details_creator_n?: InputMaybe<Scalars['String']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']>;
  details_notes_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type AttestationRef = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_treasurer_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type RedemptionRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']>;
  details_requestor_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_notes_s?: InputMaybe<Scalars['String']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type VoteGroupRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_roundId_i?: InputMaybe<Scalars['Int64']>;
  docId?: InputMaybe<Scalars['String']>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<MemberRef>>;
};

export type ReactionRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  reaction_type_n?: InputMaybe<Scalars['String']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type BalanceRef = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_quantity_a?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type AddAssignbadgePayload = {
  __typename?: 'AddAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type AddAssignmentInput = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_role_i?: InputMaybe<Scalars['Int64']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddAssignmentPayload = {
  __typename?: 'AddAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type AddAttestationInput = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_treasurer_n?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddAttestationPayload = {
  __typename?: 'AddAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};

export type AddBadgeInput = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_icon_s?: InputMaybe<Scalars['String']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddBadgePayload = {
  __typename?: 'AddBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};

export type AddBalanceInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_quantity_a?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddBalancePayload = {
  __typename?: 'AddBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};

export type AddBillingInfoInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_billingDay_i?: InputMaybe<Scalars['Int64']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_planName_s?: InputMaybe<Scalars['String']>;
  details_planPrice_a?: InputMaybe<Scalars['String']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddBillingInfoPayload = {
  __typename?: 'AddBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type AddBudgetInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddBudgetPayload = {
  __typename?: 'AddBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};

export type AddCircleInput = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddCirclePayload = {
  __typename?: 'AddCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};

export type AddCmntSectionInput = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddCmntSectionPayload = {
  __typename?: 'AddCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type AddCommentInput = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']>;
  comment_content_s?: InputMaybe<Scalars['String']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddCommentPayload = {
  __typename?: 'AddCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};

export type AddCursorInput = {
  cursor: Scalars['String'];
  id: Scalars['String'];
};

export type AddCursorPayload = {
  __typename?: 'AddCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CursorOrder>;
};

export type AddDaoInput = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoName_n: Scalars['String'];
  details_daoType_s?: InputMaybe<Scalars['String']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']>;
  details_unusedField_n?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type: Scalars['String'];
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate: Scalars['DateTime'];
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type AddDaoPayload = {
  __typename?: 'AddDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};

export type AddDaoDraftInput = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_daoName_n?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  settings?: InputMaybe<Array<SettingsRef>>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddDaoDraftPayload = {
  __typename?: 'AddDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type AddDhoInput = {
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  details_rootNode_n: Scalars['String'];
  docId: Scalars['String'];
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddDhoPayload = {
  __typename?: 'AddDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DhoOrder>;
};

export type AddDoccacheConfigInput = {
  contract: Scalars['String'];
  documentsTable: Scalars['String'];
  edgesTable: Scalars['String'];
  elasticApiKey: Scalars['String'];
  elasticEndpoint: Scalars['String'];
  eosEndpoint: Scalars['String'];
  id: Scalars['String'];
};

export type AddDoccacheConfigPayload = {
  __typename?: 'AddDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type AddEditInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddEditPayload = {
  __typename?: 'AddEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EditOrder>;
};

export type AddElectnRoundInput = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_delegatePower_i?: InputMaybe<Scalars['Int64']>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type AddElectnRoundPayload = {
  __typename?: 'AddElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type AddMemberInput = {
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_member_n: Scalars['String'];
  docId: Scalars['String'];
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
};

export type AddMemberPayload = {
  __typename?: 'AddMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};

export type AddMemoInput = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_memo_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddMemoPayload = {
  __typename?: 'AddMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemoOrder>;
};

export type AddMultisigInput = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddMultisigPayload = {
  __typename?: 'AddMultisigPayload';
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type AddMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};

export type AddPaymentInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amount_a?: InputMaybe<Scalars['String']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_memo_s?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']>;
  details_periodHash_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddPaymentPayload = {
  __typename?: 'AddPaymentPayload';
  numUids?: Maybe<Scalars['Int']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type AddPaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};

export type AddPayoutInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']>;
  details_content_s?: InputMaybe<Scalars['String']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']>;
  details_proposalType_n?: InputMaybe<Scalars['String']>;
  details_proposer_n?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPayoutPayload = {
  __typename?: 'AddPayoutPayload';
  numUids?: Maybe<Scalars['Int']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type AddPayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};

export type AddPeriodInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  docId: Scalars['String'];
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddPeriodPayload = {
  __typename?: 'AddPeriodPayload';
  numUids?: Maybe<Scalars['Int']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type AddPeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};

export type AddPlanManagerInput = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddPlanManagerPayload = {
  __typename?: 'AddPlanManagerPayload';
  numUids?: Maybe<Scalars['Int']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type AddPlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type AddPolicyInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPolicyPayload = {
  __typename?: 'AddPolicyPayload';
  numUids?: Maybe<Scalars['Int']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type AddPolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PolicyOrder>;
};

export type AddPollInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPollPayload = {
  __typename?: 'AddPollPayload';
  numUids?: Maybe<Scalars['Int']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type AddPollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PollOrder>;
};

export type AddPriceOfferInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_tag_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddPriceOfferPayload = {
  __typename?: 'AddPriceOfferPayload';
  numUids?: Maybe<Scalars['Int']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type AddPriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type AddPricingPlanInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_price_a?: InputMaybe<Scalars['String']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddPricingPlanPayload = {
  __typename?: 'AddPricingPlanPayload';
  numUids?: Maybe<Scalars['Int']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type AddPricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type AddQuestcompleInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_questStart_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQuestcomplePayload = {
  __typename?: 'AddQuestcomplePayload';
  numUids?: Maybe<Scalars['Int']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type AddQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type AddQuestcompletInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQuestcompletPayload = {
  __typename?: 'AddQuestcompletPayload';
  numUids?: Maybe<Scalars['Int']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type AddQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type AddQueststartInput = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQueststartPayload = {
  __typename?: 'AddQueststartPayload';
  numUids?: Maybe<Scalars['Int']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type AddQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};

export type AddReactionInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  reaction_type_n?: InputMaybe<Scalars['String']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddReactionPayload = {
  __typename?: 'AddReactionPayload';
  numUids?: Maybe<Scalars['Int']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type AddReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};

export type AddRedemptionInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']>;
  details_requestor_n?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_notes_s?: InputMaybe<Scalars['String']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddRedemptionPayload = {
  __typename?: 'AddRedemptionPayload';
  numUids?: Maybe<Scalars['Int']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type AddRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type AddRoleInput = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_originId_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddRolePayload = {
  __typename?: 'AddRolePayload';
  numUids?: Maybe<Scalars['Int']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type AddRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};

export type AddSettingsInput = {
  admins_account_n?: InputMaybe<Scalars['String']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  ecosystem_domain_s?: InputMaybe<Scalars['String']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']>;
  onboarders_account_n?: InputMaybe<Scalars['String']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']>;
  settings_account_i?: InputMaybe<Scalars['Int64']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']>;
  settings_daoName_n?: InputMaybe<Scalars['String']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']>;
  settings_name_s?: InputMaybe<Scalars['String']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  urls_url_s?: InputMaybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']>;
};

export type AddSettingsPayload = {
  __typename?: 'AddSettingsPayload';
  numUids?: Maybe<Scalars['Int']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type AddSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};

export type AddSuspendInput = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddSuspendPayload = {
  __typename?: 'AddSuspendPayload';
  numUids?: Maybe<Scalars['Int']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type AddSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SuspendOrder>;
};

export type AddTimeshareInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_assignment_c?: InputMaybe<Scalars['String']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddTimesharePayload = {
  __typename?: 'AddTimesharePayload';
  numUids?: Maybe<Scalars['Int']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type AddTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type AddTreasuryInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddTreasuryPayload = {
  __typename?: 'AddTreasuryPayload';
  numUids?: Maybe<Scalars['Int']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type AddTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type AddTrsyPaymentInput = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']>;
  details_creator_n?: InputMaybe<Scalars['String']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']>;
  details_notes_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddTrsyPaymentPayload = {
  __typename?: 'AddTrsyPaymentPayload';
  numUids?: Maybe<Scalars['Int']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type AddTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type AddTypeVersionInput = {
  type: Scalars['String'];
  version?: InputMaybe<Scalars['String']>;
};

export type AddTypeVersionPayload = {
  __typename?: 'AddTypeVersionPayload';
  numUids?: Maybe<Scalars['Int']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type AddTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type AddUpvtElectnInput = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_status_s?: InputMaybe<Scalars['String']>;
  docId: Scalars['String'];
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddUpvtElectnPayload = {
  __typename?: 'AddUpvtElectnPayload';
  numUids?: Maybe<Scalars['Int']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type AddUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type AddVoteInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote_date_t?: InputMaybe<Scalars['DateTime']>;
  vote_notes_s?: InputMaybe<Scalars['String']>;
  vote_vote_s?: InputMaybe<Scalars['String']>;
  vote_votePower_a?: InputMaybe<Scalars['String']>;
  vote_voter_n?: InputMaybe<Scalars['String']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type AddVotePayload = {
  __typename?: 'AddVotePayload';
  numUids?: Maybe<Scalars['Int']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type AddVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};

export type AddVoteGroupInput = {
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  details_roundId_i?: InputMaybe<Scalars['Int64']>;
  docId: Scalars['String'];
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
  vote?: InputMaybe<Array<MemberRef>>;
};

export type AddVoteGroupPayload = {
  __typename?: 'AddVoteGroupPayload';
  numUids?: Maybe<Scalars['Int']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type AddVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type AddVoteTallyInput = {
  abstain_votePower_a?: InputMaybe<Scalars['String']>;
  contract: Scalars['String'];
  createdDate: Scalars['DateTime'];
  creator: Scalars['String'];
  docId: Scalars['String'];
  fail_votePower_a?: InputMaybe<Scalars['String']>;
  pass_votePower_a?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type: Scalars['String'];
  updatedDate: Scalars['DateTime'];
};

export type AddVoteTallyPayload = {
  __typename?: 'AddVoteTallyPayload';
  numUids?: Maybe<Scalars['Int']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type AddVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type DeleteAlertPayload = {
  __typename?: 'DeleteAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};

export type DeleteAssignbadgePayload = {
  __typename?: 'DeleteAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type DeleteAssignmentPayload = {
  __typename?: 'DeleteAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type DeleteAttestationPayload = {
  __typename?: 'DeleteAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};

export type DeleteBadgePayload = {
  __typename?: 'DeleteBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};

export type DeleteBalancePayload = {
  __typename?: 'DeleteBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};

export type DeleteBillingInfoPayload = {
  __typename?: 'DeleteBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type DeleteBudgetPayload = {
  __typename?: 'DeleteBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};

export type DeleteCirclePayload = {
  __typename?: 'DeleteCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};

export type DeleteCmntSectionPayload = {
  __typename?: 'DeleteCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type DeleteCommentPayload = {
  __typename?: 'DeleteCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};

export type DeleteCursorPayload = {
  __typename?: 'DeleteCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CursorOrder>;
};

export type DeleteDaoPayload = {
  __typename?: 'DeleteDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};

export type DeleteDaoDraftPayload = {
  __typename?: 'DeleteDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type DeleteDhoPayload = {
  __typename?: 'DeleteDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DhoOrder>;
};

export type DeleteDoccacheConfigPayload = {
  __typename?: 'DeleteDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type DeleteDocumentPayload = {
  __typename?: 'DeleteDocumentPayload';
  document?: Maybe<Array<Maybe<Document>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteDocumentPayloadDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};

export type DeleteEditPayload = {
  __typename?: 'DeleteEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EditOrder>;
};

export type DeleteElectnRoundPayload = {
  __typename?: 'DeleteElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type DeleteMemberPayload = {
  __typename?: 'DeleteMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};

export type DeleteMemoPayload = {
  __typename?: 'DeleteMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemoOrder>;
};

export type DeleteMultisigPayload = {
  __typename?: 'DeleteMultisigPayload';
  msg?: Maybe<Scalars['String']>;
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type DeleteMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};

export type DeletePaymentPayload = {
  __typename?: 'DeletePaymentPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type DeletePaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};

export type DeletePayoutPayload = {
  __typename?: 'DeletePayoutPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type DeletePayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};

export type DeletePeriodPayload = {
  __typename?: 'DeletePeriodPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type DeletePeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};

export type DeletePlanManagerPayload = {
  __typename?: 'DeletePlanManagerPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type DeletePlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type DeletePolicyPayload = {
  __typename?: 'DeletePolicyPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type DeletePolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PolicyOrder>;
};

export type DeletePollPayload = {
  __typename?: 'DeletePollPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type DeletePollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PollOrder>;
};

export type DeletePriceOfferPayload = {
  __typename?: 'DeletePriceOfferPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type DeletePriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type DeletePricingPlanPayload = {
  __typename?: 'DeletePricingPlanPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type DeletePricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type DeleteQuestcomplePayload = {
  __typename?: 'DeleteQuestcomplePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type DeleteQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type DeleteQuestcompletPayload = {
  __typename?: 'DeleteQuestcompletPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type DeleteQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type DeleteQueststartPayload = {
  __typename?: 'DeleteQueststartPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type DeleteQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};

export type DeleteReactionPayload = {
  __typename?: 'DeleteReactionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type DeleteReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};

export type DeleteRedemptionPayload = {
  __typename?: 'DeleteRedemptionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type DeleteRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type DeleteRolePayload = {
  __typename?: 'DeleteRolePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type DeleteRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};

export type DeleteSettingsPayload = {
  __typename?: 'DeleteSettingsPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type DeleteSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};

export type DeleteSuspendPayload = {
  __typename?: 'DeleteSuspendPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type DeleteSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SuspendOrder>;
};

export type DeleteTimesharePayload = {
  __typename?: 'DeleteTimesharePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type DeleteTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type DeleteTreasuryPayload = {
  __typename?: 'DeleteTreasuryPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type DeleteTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type DeleteTrsyPaymentPayload = {
  __typename?: 'DeleteTrsyPaymentPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type DeleteTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type DeleteTypeVersionPayload = {
  __typename?: 'DeleteTypeVersionPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type DeleteTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type DeleteUpvtElectnPayload = {
  __typename?: 'DeleteUpvtElectnPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type DeleteUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type DeleteVotablePayload = {
  __typename?: 'DeleteVotablePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  votable?: Maybe<Array<Maybe<Votable>>>;
};


export type DeleteVotablePayloadVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VotableOrder>;
};

export type DeleteVotePayload = {
  __typename?: 'DeleteVotePayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type DeleteVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};

export type DeleteVoteGroupPayload = {
  __typename?: 'DeleteVoteGroupPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type DeleteVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type DeleteVoteTallyPayload = {
  __typename?: 'DeleteVoteTallyPayload';
  msg?: Maybe<Scalars['String']>;
  numUids?: Maybe<Scalars['Int']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type DeleteVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type UpdateAlertInput = {
  filter: AlertFilter;
  remove?: InputMaybe<AlertPatch>;
  set?: InputMaybe<AlertPatch>;
};

export type AlertPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_content_s?: InputMaybe<Scalars['String']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']>;
  details_level_n?: InputMaybe<Scalars['String']>;
  details_level_s?: InputMaybe<Scalars['String']>;
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateAlertPayload = {
  __typename?: 'UpdateAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};

export type UpdateAssignbadgeInput = {
  filter: AssignbadgeFilter;
  remove?: InputMaybe<AssignbadgePatch>;
  set?: InputMaybe<AssignbadgePatch>;
};

export type AssignbadgePatch = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_c?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_category_s?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateAssignbadgePayload = {
  __typename?: 'UpdateAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type UpdateAssignmentInput = {
  filter: AssignmentFilter;
  remove?: InputMaybe<AssignmentPatch>;
  set?: InputMaybe<AssignmentPatch>;
};

export type AssignmentPatch = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_role_i?: InputMaybe<Scalars['Int64']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']>;
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateAssignmentPayload = {
  __typename?: 'UpdateAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type UpdateAttestationInput = {
  filter: AttestationFilter;
  remove?: InputMaybe<AttestationPatch>;
  set?: InputMaybe<AttestationPatch>;
};

export type AttestationPatch = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_treasurer_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateAttestationPayload = {
  __typename?: 'UpdateAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};

export type UpdateBadgeInput = {
  filter: BadgeFilter;
  remove?: InputMaybe<BadgePatch>;
  set?: InputMaybe<BadgePatch>;
};

export type BadgePatch = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_badge_i?: InputMaybe<Scalars['Int64']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_icon_s?: InputMaybe<Scalars['String']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_proposer_n?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateBadgePayload = {
  __typename?: 'UpdateBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};

export type UpdateBalanceInput = {
  filter: BalanceFilter;
  remove?: InputMaybe<BalancePatch>;
  set?: InputMaybe<BalancePatch>;
};

export type BalancePatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_quantity_a?: InputMaybe<Scalars['String']>;
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateBalancePayload = {
  __typename?: 'UpdateBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};

export type UpdateBillingInfoInput = {
  filter: BillingInfoFilter;
  remove?: InputMaybe<BillingInfoPatch>;
  set?: InputMaybe<BillingInfoPatch>;
};

export type BillingInfoPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_billingDay_i?: InputMaybe<Scalars['Int64']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_planName_s?: InputMaybe<Scalars['String']>;
  details_planPrice_a?: InputMaybe<Scalars['String']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']>;
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateBillingInfoPayload = {
  __typename?: 'UpdateBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type UpdateBudgetInput = {
  filter: BudgetFilter;
  remove?: InputMaybe<BudgetPatch>;
  set?: InputMaybe<BudgetPatch>;
};

export type BudgetPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateBudgetPayload = {
  __typename?: 'UpdateBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};

export type UpdateCircleInput = {
  filter: CircleFilter;
  remove?: InputMaybe<CirclePatch>;
  set?: InputMaybe<CirclePatch>;
};

export type CirclePatch = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateCirclePayload = {
  __typename?: 'UpdateCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};

export type UpdateCmntSectionInput = {
  filter: CmntSectionFilter;
  remove?: InputMaybe<CmntSectionPatch>;
  set?: InputMaybe<CmntSectionPatch>;
};

export type CmntSectionPatch = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateCmntSectionPayload = {
  __typename?: 'UpdateCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type UpdateCommentInput = {
  filter: CommentFilter;
  remove?: InputMaybe<CommentPatch>;
  set?: InputMaybe<CommentPatch>;
};

export type CommentPatch = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']>;
  comment_content_s?: InputMaybe<Scalars['String']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateCommentPayload = {
  __typename?: 'UpdateCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};

export type UpdateCursorInput = {
  filter: CursorFilter;
  remove?: InputMaybe<CursorPatch>;
  set?: InputMaybe<CursorPatch>;
};

export type CursorPatch = {
  cursor?: InputMaybe<Scalars['String']>;
};

export type UpdateCursorPayload = {
  __typename?: 'UpdateCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CursorOrder>;
};

export type UpdateDaoInput = {
  filter: DaoFilter;
  remove?: InputMaybe<DaoPatch>;
  set?: InputMaybe<DaoPatch>;
};

export type DaoPatch = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoType_s?: InputMaybe<Scalars['String']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']>;
  details_unusedField_n?: InputMaybe<Scalars['String']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']>;
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type UpdateDaoPayload = {
  __typename?: 'UpdateDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};

export type UpdateDaoDraftInput = {
  filter: DaoDraftFilter;
  remove?: InputMaybe<DaoDraftPatch>;
  set?: InputMaybe<DaoDraftPatch>;
};

export type DaoDraftPatch = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_daoName_n?: InputMaybe<Scalars['String']>;
  settings?: InputMaybe<Array<SettingsRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateDaoDraftPayload = {
  __typename?: 'UpdateDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type UpdateDhoInput = {
  filter: DhoFilter;
  remove?: InputMaybe<DhoPatch>;
  set?: InputMaybe<DhoPatch>;
};

export type DhoPatch = {
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateDhoPayload = {
  __typename?: 'UpdateDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DhoOrder>;
};

export type UpdateDoccacheConfigInput = {
  filter: DoccacheConfigFilter;
  remove?: InputMaybe<DoccacheConfigPatch>;
  set?: InputMaybe<DoccacheConfigPatch>;
};

export type DoccacheConfigPatch = {
  contract?: InputMaybe<Scalars['String']>;
  documentsTable?: InputMaybe<Scalars['String']>;
  edgesTable?: InputMaybe<Scalars['String']>;
  elasticApiKey?: InputMaybe<Scalars['String']>;
  elasticEndpoint?: InputMaybe<Scalars['String']>;
  eosEndpoint?: InputMaybe<Scalars['String']>;
};

export type UpdateDoccacheConfigPayload = {
  __typename?: 'UpdateDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type UpdateDocumentInput = {
  filter: DocumentFilter;
  remove?: InputMaybe<DocumentPatch>;
  set?: InputMaybe<DocumentPatch>;
};

export type DocumentPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateDocumentPayload = {
  __typename?: 'UpdateDocumentPayload';
  document?: Maybe<Array<Maybe<Document>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateDocumentPayloadDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};

export type UpdateEditInput = {
  filter: EditFilter;
  remove?: InputMaybe<EditPatch>;
  set?: InputMaybe<EditPatch>;
};

export type EditPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateEditPayload = {
  __typename?: 'UpdateEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EditOrder>;
};

export type UpdateElectnRoundInput = {
  filter: ElectnRoundFilter;
  remove?: InputMaybe<ElectnRoundPatch>;
  set?: InputMaybe<ElectnRoundPatch>;
};

export type ElectnRoundPatch = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_delegatePower_i?: InputMaybe<Scalars['Int64']>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type UpdateElectnRoundPayload = {
  __typename?: 'UpdateElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type UpdateMemberInput = {
  filter: MemberFilter;
  remove?: InputMaybe<MemberPatch>;
  set?: InputMaybe<MemberPatch>;
};

export type MemberPatch = {
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
};

export type UpdateMemberPayload = {
  __typename?: 'UpdateMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};

export type UpdateMemoInput = {
  filter: MemoFilter;
  remove?: InputMaybe<MemoPatch>;
  set?: InputMaybe<MemoPatch>;
};

export type MemoPatch = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_memo_s?: InputMaybe<Scalars['String']>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateMemoPayload = {
  __typename?: 'UpdateMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemoOrder>;
};

export type UpdateMultisigInput = {
  filter: MultisigFilter;
  remove?: InputMaybe<MultisigPatch>;
  set?: InputMaybe<MultisigPatch>;
};

export type MultisigPatch = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateMultisigPayload = {
  __typename?: 'UpdateMultisigPayload';
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']>;
};


export type UpdateMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};

export type UpdatePaymentInput = {
  filter: PaymentFilter;
  remove?: InputMaybe<PaymentPatch>;
  set?: InputMaybe<PaymentPatch>;
};

export type PaymentPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amount_a?: InputMaybe<Scalars['String']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_memo_s?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']>;
  details_periodHash_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdatePaymentPayload = {
  __typename?: 'UpdatePaymentPayload';
  numUids?: Maybe<Scalars['Int']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type UpdatePaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};

export type UpdatePayoutInput = {
  filter: PayoutFilter;
  remove?: InputMaybe<PayoutPatch>;
  set?: InputMaybe<PayoutPatch>;
};

export type PayoutPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']>;
  details_content_s?: InputMaybe<Scalars['String']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']>;
  details_proposalType_n?: InputMaybe<Scalars['String']>;
  details_proposer_n?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdatePayoutPayload = {
  __typename?: 'UpdatePayoutPayload';
  numUids?: Maybe<Scalars['Int']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type UpdatePayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};

export type UpdatePeriodInput = {
  filter: PeriodFilter;
  remove?: InputMaybe<PeriodPatch>;
  set?: InputMaybe<PeriodPatch>;
};

export type PeriodPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']>;
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdatePeriodPayload = {
  __typename?: 'UpdatePeriodPayload';
  numUids?: Maybe<Scalars['Int']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type UpdatePeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};

export type UpdatePlanManagerInput = {
  filter: PlanManagerFilter;
  remove?: InputMaybe<PlanManagerPatch>;
  set?: InputMaybe<PlanManagerPatch>;
};

export type PlanManagerPatch = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']>;
  details_type_s?: InputMaybe<Scalars['String']>;
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdatePlanManagerPayload = {
  __typename?: 'UpdatePlanManagerPayload';
  numUids?: Maybe<Scalars['Int']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type UpdatePlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type UpdatePolicyInput = {
  filter: PolicyFilter;
  remove?: InputMaybe<PolicyPatch>;
  set?: InputMaybe<PolicyPatch>;
};

export type PolicyPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdatePolicyPayload = {
  __typename?: 'UpdatePolicyPayload';
  numUids?: Maybe<Scalars['Int']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type UpdatePolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PolicyOrder>;
};

export type UpdatePollInput = {
  filter: PollFilter;
  remove?: InputMaybe<PollPatch>;
  set?: InputMaybe<PollPatch>;
};

export type PollPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdatePollPayload = {
  __typename?: 'UpdatePollPayload';
  numUids?: Maybe<Scalars['Int']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type UpdatePollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PollOrder>;
};

export type UpdatePriceOfferInput = {
  filter: PriceOfferFilter;
  remove?: InputMaybe<PriceOfferPatch>;
  set?: InputMaybe<PriceOfferPatch>;
};

export type PriceOfferPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_tag_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdatePriceOfferPayload = {
  __typename?: 'UpdatePriceOfferPayload';
  numUids?: Maybe<Scalars['Int']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type UpdatePriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type UpdatePricingPlanInput = {
  filter: PricingPlanFilter;
  remove?: InputMaybe<PricingPlanPatch>;
  set?: InputMaybe<PricingPlanPatch>;
};

export type PricingPlanPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_price_a?: InputMaybe<Scalars['String']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdatePricingPlanPayload = {
  __typename?: 'UpdatePricingPlanPayload';
  numUids?: Maybe<Scalars['Int']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type UpdatePricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type UpdateQuestcompleInput = {
  filter: QuestcompleFilter;
  remove?: InputMaybe<QuestcomplePatch>;
  set?: InputMaybe<QuestcomplePatch>;
};

export type QuestcomplePatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_questStart_c?: InputMaybe<Scalars['String']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateQuestcomplePayload = {
  __typename?: 'UpdateQuestcomplePayload';
  numUids?: Maybe<Scalars['Int']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type UpdateQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type UpdateQuestcompletInput = {
  filter: QuestcompletFilter;
  remove?: InputMaybe<QuestcompletPatch>;
  set?: InputMaybe<QuestcompletPatch>;
};

export type QuestcompletPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateQuestcompletPayload = {
  __typename?: 'UpdateQuestcompletPayload';
  numUids?: Maybe<Scalars['Int']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type UpdateQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type UpdateQueststartInput = {
  filter: QueststartFilter;
  remove?: InputMaybe<QueststartPatch>;
  set?: InputMaybe<QueststartPatch>;
};

export type QueststartPatch = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_recipient_n?: InputMaybe<Scalars['String']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']>;
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateQueststartPayload = {
  __typename?: 'UpdateQueststartPayload';
  numUids?: Maybe<Scalars['Int']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type UpdateQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};

export type UpdateReactionInput = {
  filter: ReactionFilter;
  remove?: InputMaybe<ReactionPatch>;
  set?: InputMaybe<ReactionPatch>;
};

export type ReactionPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  reaction_type_n?: InputMaybe<Scalars['String']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateReactionPayload = {
  __typename?: 'UpdateReactionPayload';
  numUids?: Maybe<Scalars['Int']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type UpdateReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};

export type UpdateRedemptionInput = {
  filter: RedemptionFilter;
  remove?: InputMaybe<RedemptionPatch>;
  set?: InputMaybe<RedemptionPatch>;
};

export type RedemptionPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']>;
  details_requestor_n?: InputMaybe<Scalars['String']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_notes_s?: InputMaybe<Scalars['String']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateRedemptionPayload = {
  __typename?: 'UpdateRedemptionPayload';
  numUids?: Maybe<Scalars['Int']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type UpdateRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type UpdateRoleInput = {
  filter: RoleFilter;
  remove?: InputMaybe<RolePatch>;
  set?: InputMaybe<RolePatch>;
};

export type RolePatch = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_originId_i?: InputMaybe<Scalars['Int64']>;
  details_owner_n?: InputMaybe<Scalars['String']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateRolePayload = {
  __typename?: 'UpdateRolePayload';
  numUids?: Maybe<Scalars['Int']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type UpdateRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};

export type UpdateSettingsInput = {
  filter: SettingsFilter;
  remove?: InputMaybe<SettingsPatch>;
  set?: InputMaybe<SettingsPatch>;
};

export type SettingsPatch = {
  admins_account_n?: InputMaybe<Scalars['String']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  ecosystem_domain_s?: InputMaybe<Scalars['String']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']>;
  onboarders_account_n?: InputMaybe<Scalars['String']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']>;
  settings_account_i?: InputMaybe<Scalars['Int64']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']>;
  settings_daoName_n?: InputMaybe<Scalars['String']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']>;
  settings_logo_s?: InputMaybe<Scalars['String']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']>;
  settings_name_s?: InputMaybe<Scalars['String']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_pattern_s?: InputMaybe<Scalars['String']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']>;
  settings_textColor_s?: InputMaybe<Scalars['String']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']>;
  settings_title_s?: InputMaybe<Scalars['String']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']>;
  settings_url_s?: InputMaybe<Scalars['String']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  urls_url_s?: InputMaybe<Scalars['String']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']>;
};

export type UpdateSettingsPayload = {
  __typename?: 'UpdateSettingsPayload';
  numUids?: Maybe<Scalars['Int']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type UpdateSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};

export type UpdateSuspendInput = {
  filter: SuspendFilter;
  remove?: InputMaybe<SuspendPatch>;
  set?: InputMaybe<SuspendPatch>;
};

export type SuspendPatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateSuspendPayload = {
  __typename?: 'UpdateSuspendPayload';
  numUids?: Maybe<Scalars['Int']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type UpdateSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SuspendOrder>;
};

export type UpdateTimeshareInput = {
  filter: TimeshareFilter;
  remove?: InputMaybe<TimesharePatch>;
  set?: InputMaybe<TimesharePatch>;
};

export type TimesharePatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_assignment_c?: InputMaybe<Scalars['String']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateTimesharePayload = {
  __typename?: 'UpdateTimesharePayload';
  numUids?: Maybe<Scalars['Int']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type UpdateTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type UpdateTreasuryInput = {
  filter: TreasuryFilter;
  remove?: InputMaybe<TreasuryPatch>;
  set?: InputMaybe<TreasuryPatch>;
};

export type TreasuryPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateTreasuryPayload = {
  __typename?: 'UpdateTreasuryPayload';
  numUids?: Maybe<Scalars['Int']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type UpdateTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type UpdateTrsyPaymentInput = {
  filter: TrsyPaymentFilter;
  remove?: InputMaybe<TrsyPaymentPatch>;
  set?: InputMaybe<TrsyPaymentPatch>;
};

export type TrsyPaymentPatch = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']>;
  details_creator_n?: InputMaybe<Scalars['String']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']>;
  details_notes_s?: InputMaybe<Scalars['String']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateTrsyPaymentPayload = {
  __typename?: 'UpdateTrsyPaymentPayload';
  numUids?: Maybe<Scalars['Int']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type UpdateTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type UpdateTypeVersionInput = {
  filter: TypeVersionFilter;
  remove?: InputMaybe<TypeVersionPatch>;
  set?: InputMaybe<TypeVersionPatch>;
};

export type TypeVersionPatch = {
  type?: InputMaybe<Scalars['String']>;
  version?: InputMaybe<Scalars['String']>;
};

export type UpdateTypeVersionPayload = {
  __typename?: 'UpdateTypeVersionPayload';
  numUids?: Maybe<Scalars['Int']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type UpdateTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type UpdateUpvtElectnInput = {
  filter: UpvtElectnFilter;
  remove?: InputMaybe<UpvtElectnPatch>;
  set?: InputMaybe<UpvtElectnPatch>;
};

export type UpvtElectnPatch = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']>;
  details_status_s?: InputMaybe<Scalars['String']>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateUpvtElectnPayload = {
  __typename?: 'UpdateUpvtElectnPayload';
  numUids?: Maybe<Scalars['Int']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type UpdateUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type UpdateVotableInput = {
  filter: VotableFilter;
  remove?: InputMaybe<VotablePatch>;
  set?: InputMaybe<VotablePatch>;
};

export type VotablePatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type UpdateVotablePayload = {
  __typename?: 'UpdateVotablePayload';
  numUids?: Maybe<Scalars['Int']>;
  votable?: Maybe<Array<Maybe<Votable>>>;
};


export type UpdateVotablePayloadVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VotableOrder>;
};

export type UpdateVoteInput = {
  filter: VoteFilter;
  remove?: InputMaybe<VotePatch>;
  set?: InputMaybe<VotePatch>;
};

export type VotePatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote_date_t?: InputMaybe<Scalars['DateTime']>;
  vote_notes_s?: InputMaybe<Scalars['String']>;
  vote_vote_s?: InputMaybe<Scalars['String']>;
  vote_votePower_a?: InputMaybe<Scalars['String']>;
  vote_voter_n?: InputMaybe<Scalars['String']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type UpdateVotePayload = {
  __typename?: 'UpdateVotePayload';
  numUids?: Maybe<Scalars['Int']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type UpdateVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};

export type UpdateVoteGroupInput = {
  filter: VoteGroupFilter;
  remove?: InputMaybe<VoteGroupPatch>;
  set?: InputMaybe<VoteGroupPatch>;
};

export type VoteGroupPatch = {
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_roundId_i?: InputMaybe<Scalars['Int64']>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<MemberRef>>;
};

export type UpdateVoteGroupPayload = {
  __typename?: 'UpdateVoteGroupPayload';
  numUids?: Maybe<Scalars['Int']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type UpdateVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type UpdateVoteTallyInput = {
  filter: VoteTallyFilter;
  remove?: InputMaybe<VoteTallyPatch>;
  set?: InputMaybe<VoteTallyPatch>;
};

export type VoteTallyPatch = {
  abstain_votePower_a?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  fail_votePower_a?: InputMaybe<Scalars['String']>;
  pass_votePower_a?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type UpdateVoteTallyPayload = {
  __typename?: 'UpdateVoteTallyPayload';
  numUids?: Maybe<Scalars['Int']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type UpdateVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type Subscription = {
  __typename?: 'Subscription';
  aggregateAlert?: Maybe<AlertAggregateResult>;
  aggregateAssignbadge?: Maybe<AssignbadgeAggregateResult>;
  aggregateAssignment?: Maybe<AssignmentAggregateResult>;
  aggregateAttestation?: Maybe<AttestationAggregateResult>;
  aggregateBadge?: Maybe<BadgeAggregateResult>;
  aggregateBalance?: Maybe<BalanceAggregateResult>;
  aggregateBillingInfo?: Maybe<BillingInfoAggregateResult>;
  aggregateBudget?: Maybe<BudgetAggregateResult>;
  aggregateCircle?: Maybe<CircleAggregateResult>;
  aggregateCmntSection?: Maybe<CmntSectionAggregateResult>;
  aggregateComment?: Maybe<CommentAggregateResult>;
  aggregateDao?: Maybe<DaoAggregateResult>;
  aggregateDaoDraft?: Maybe<DaoDraftAggregateResult>;
  aggregateDho?: Maybe<DhoAggregateResult>;
  aggregateDocument?: Maybe<DocumentAggregateResult>;
  aggregateEdit?: Maybe<EditAggregateResult>;
  aggregateElectnRound?: Maybe<ElectnRoundAggregateResult>;
  aggregateMember?: Maybe<MemberAggregateResult>;
  aggregateMemo?: Maybe<MemoAggregateResult>;
  aggregateMultisig?: Maybe<MultisigAggregateResult>;
  aggregatePayment?: Maybe<PaymentAggregateResult>;
  aggregatePayout?: Maybe<PayoutAggregateResult>;
  aggregatePeriod?: Maybe<PeriodAggregateResult>;
  aggregatePlanManager?: Maybe<PlanManagerAggregateResult>;
  aggregatePolicy?: Maybe<PolicyAggregateResult>;
  aggregatePoll?: Maybe<PollAggregateResult>;
  aggregatePriceOffer?: Maybe<PriceOfferAggregateResult>;
  aggregatePricingPlan?: Maybe<PricingPlanAggregateResult>;
  aggregateQuestcomple?: Maybe<QuestcompleAggregateResult>;
  aggregateQuestcomplet?: Maybe<QuestcompletAggregateResult>;
  aggregateQueststart?: Maybe<QueststartAggregateResult>;
  aggregateReaction?: Maybe<ReactionAggregateResult>;
  aggregateRedemption?: Maybe<RedemptionAggregateResult>;
  aggregateRole?: Maybe<RoleAggregateResult>;
  aggregateSettings?: Maybe<SettingsAggregateResult>;
  aggregateSuspend?: Maybe<SuspendAggregateResult>;
  aggregateTimeshare?: Maybe<TimeshareAggregateResult>;
  aggregateTreasury?: Maybe<TreasuryAggregateResult>;
  aggregateTrsyPayment?: Maybe<TrsyPaymentAggregateResult>;
  aggregateUpvtElectn?: Maybe<UpvtElectnAggregateResult>;
  aggregateVotable?: Maybe<VotableAggregateResult>;
  aggregateVote?: Maybe<VoteAggregateResult>;
  aggregateVoteGroup?: Maybe<VoteGroupAggregateResult>;
  aggregateVoteTally?: Maybe<VoteTallyAggregateResult>;
  getAlert?: Maybe<Alert>;
  getAssignbadge?: Maybe<Assignbadge>;
  getAssignment?: Maybe<Assignment>;
  getAttestation?: Maybe<Attestation>;
  getBadge?: Maybe<Badge>;
  getBalance?: Maybe<Balance>;
  getBillingInfo?: Maybe<BillingInfo>;
  getBudget?: Maybe<Budget>;
  getCircle?: Maybe<Circle>;
  getCmntSection?: Maybe<CmntSection>;
  getComment?: Maybe<Comment>;
  getDao?: Maybe<Dao>;
  getDaoDraft?: Maybe<DaoDraft>;
  getDho?: Maybe<Dho>;
  /** @deprecated @id argument for get query on interface is being deprecated, it will be removed in v21.11.0, please update your query to not use that argument */
  getDocument?: Maybe<Document>;
  getEdit?: Maybe<Edit>;
  getElectnRound?: Maybe<ElectnRound>;
  getMember?: Maybe<Member>;
  getMemo?: Maybe<Memo>;
  getMultisig?: Maybe<Multisig>;
  getPayment?: Maybe<Payment>;
  getPayout?: Maybe<Payout>;
  getPeriod?: Maybe<Period>;
  getPlanManager?: Maybe<PlanManager>;
  getPolicy?: Maybe<Policy>;
  getPoll?: Maybe<Poll>;
  getPriceOffer?: Maybe<PriceOffer>;
  getPricingPlan?: Maybe<PricingPlan>;
  getQuestcomple?: Maybe<Questcomple>;
  getQuestcomplet?: Maybe<Questcomplet>;
  getQueststart?: Maybe<Queststart>;
  getReaction?: Maybe<Reaction>;
  getRedemption?: Maybe<Redemption>;
  getRole?: Maybe<Role>;
  getSettings?: Maybe<Settings>;
  getSuspend?: Maybe<Suspend>;
  getTimeshare?: Maybe<Timeshare>;
  getTreasury?: Maybe<Treasury>;
  getTrsyPayment?: Maybe<TrsyPayment>;
  getUpvtElectn?: Maybe<UpvtElectn>;
  getVote?: Maybe<Vote>;
  getVoteGroup?: Maybe<VoteGroup>;
  getVoteTally?: Maybe<VoteTally>;
  queryAlert?: Maybe<Array<Maybe<Alert>>>;
  queryAssignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  queryAssignment?: Maybe<Array<Maybe<Assignment>>>;
  queryAttestation?: Maybe<Array<Maybe<Attestation>>>;
  queryBadge?: Maybe<Array<Maybe<Badge>>>;
  queryBalance?: Maybe<Array<Maybe<Balance>>>;
  queryBillingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  queryBudget?: Maybe<Array<Maybe<Budget>>>;
  queryCircle?: Maybe<Array<Maybe<Circle>>>;
  queryCmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  queryComment?: Maybe<Array<Maybe<Comment>>>;
  queryDao?: Maybe<Array<Maybe<Dao>>>;
  queryDaoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  queryDho?: Maybe<Array<Maybe<Dho>>>;
  queryDocument?: Maybe<Array<Maybe<Document>>>;
  queryEdit?: Maybe<Array<Maybe<Edit>>>;
  queryElectnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  queryMember?: Maybe<Array<Maybe<Member>>>;
  queryMemo?: Maybe<Array<Maybe<Memo>>>;
  queryMultisig?: Maybe<Array<Maybe<Multisig>>>;
  queryPayment?: Maybe<Array<Maybe<Payment>>>;
  queryPayout?: Maybe<Array<Maybe<Payout>>>;
  queryPeriod?: Maybe<Array<Maybe<Period>>>;
  queryPlanManager?: Maybe<Array<Maybe<PlanManager>>>;
  queryPolicy?: Maybe<Array<Maybe<Policy>>>;
  queryPoll?: Maybe<Array<Maybe<Poll>>>;
  queryPriceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
  queryPricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
  queryQuestcomple?: Maybe<Array<Maybe<Questcomple>>>;
  queryQuestcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
  queryQueststart?: Maybe<Array<Maybe<Queststart>>>;
  queryReaction?: Maybe<Array<Maybe<Reaction>>>;
  queryRedemption?: Maybe<Array<Maybe<Redemption>>>;
  queryRole?: Maybe<Array<Maybe<Role>>>;
  querySettings?: Maybe<Array<Maybe<Settings>>>;
  querySuspend?: Maybe<Array<Maybe<Suspend>>>;
  queryTimeshare?: Maybe<Array<Maybe<Timeshare>>>;
  queryTreasury?: Maybe<Array<Maybe<Treasury>>>;
  queryTrsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
  queryUpvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
  queryVotable?: Maybe<Array<Maybe<Votable>>>;
  queryVote?: Maybe<Array<Maybe<Vote>>>;
  queryVoteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
  queryVoteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type SubscriptionAggregateAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type SubscriptionAggregateAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type SubscriptionAggregateAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type SubscriptionAggregateAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type SubscriptionAggregateBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type SubscriptionAggregateBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type SubscriptionAggregateBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type SubscriptionAggregateBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type SubscriptionAggregateCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type SubscriptionAggregateCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type SubscriptionAggregateCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type SubscriptionAggregateDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type SubscriptionAggregateDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type SubscriptionAggregateDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
};


export type SubscriptionAggregateDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type SubscriptionAggregateEditArgs = {
  filter?: InputMaybe<EditFilter>;
};


export type SubscriptionAggregateElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type SubscriptionAggregateMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type SubscriptionAggregateMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
};


export type SubscriptionAggregateMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type SubscriptionAggregatePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type SubscriptionAggregatePayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type SubscriptionAggregatePeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type SubscriptionAggregatePlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type SubscriptionAggregatePolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type SubscriptionAggregatePollArgs = {
  filter?: InputMaybe<PollFilter>;
};


export type SubscriptionAggregatePriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type SubscriptionAggregatePricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type SubscriptionAggregateQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type SubscriptionAggregateQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type SubscriptionAggregateQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type SubscriptionAggregateReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type SubscriptionAggregateRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type SubscriptionAggregateRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type SubscriptionAggregateSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type SubscriptionAggregateSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
};


export type SubscriptionAggregateTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type SubscriptionAggregateTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type SubscriptionAggregateTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type SubscriptionAggregateUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type SubscriptionAggregateVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
};


export type SubscriptionAggregateVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type SubscriptionAggregateVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type SubscriptionAggregateVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};


export type SubscriptionGetAlertArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetAssignbadgeArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetAssignmentArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetAttestationArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetBadgeArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetBalanceArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetBillingInfoArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetBudgetArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetCircleArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetCmntSectionArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetCommentArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetDaoArgs = {
  details_daoName_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type SubscriptionGetDaoDraftArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetDhoArgs = {
  details_rootNode_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type SubscriptionGetDocumentArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetEditArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetElectnRoundArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetMemberArgs = {
  details_member_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
};


export type SubscriptionGetMemoArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetMultisigArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPaymentArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPayoutArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPeriodArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPlanManagerArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPolicyArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPollArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPriceOfferArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetPricingPlanArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetQuestcompleArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetQuestcompletArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetQueststartArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetReactionArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetRedemptionArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetRoleArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetSettingsArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetSuspendArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetTimeshareArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetTreasuryArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetTrsyPaymentArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetUpvtElectnArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetVoteArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetVoteGroupArgs = {
  docId: Scalars['String'];
};


export type SubscriptionGetVoteTallyArgs = {
  docId: Scalars['String'];
};


export type SubscriptionQueryAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AlertOrder>;
};


export type SubscriptionQueryAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type SubscriptionQueryAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type SubscriptionQueryAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<AttestationOrder>;
};


export type SubscriptionQueryBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
};


export type SubscriptionQueryBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BalanceOrder>;
};


export type SubscriptionQueryBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type SubscriptionQueryBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BudgetOrder>;
};


export type SubscriptionQueryCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CircleOrder>;
};


export type SubscriptionQueryCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type SubscriptionQueryCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<CommentOrder>;
};


export type SubscriptionQueryDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoOrder>;
};


export type SubscriptionQueryDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type SubscriptionQueryDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DhoOrder>;
};


export type SubscriptionQueryDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<DocumentOrder>;
};


export type SubscriptionQueryEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<EditOrder>;
};


export type SubscriptionQueryElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type SubscriptionQueryMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemberOrder>;
};


export type SubscriptionQueryMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MemoOrder>;
};


export type SubscriptionQueryMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<MultisigOrder>;
};


export type SubscriptionQueryPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PaymentOrder>;
};


export type SubscriptionQueryPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
};


export type SubscriptionQueryPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PeriodOrder>;
};


export type SubscriptionQueryPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type SubscriptionQueryPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PolicyOrder>;
};


export type SubscriptionQueryPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PollOrder>;
};


export type SubscriptionQueryPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type SubscriptionQueryPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type SubscriptionQueryQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type SubscriptionQueryQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type SubscriptionQueryQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<QueststartOrder>;
};


export type SubscriptionQueryReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<ReactionOrder>;
};


export type SubscriptionQueryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type SubscriptionQueryRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
};


export type SubscriptionQuerySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SettingsOrder>;
};


export type SubscriptionQuerySuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<SuspendOrder>;
};


export type SubscriptionQueryTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type SubscriptionQueryTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type SubscriptionQueryTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type SubscriptionQueryUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type SubscriptionQueryVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VotableOrder>;
};


export type SubscriptionQueryVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteOrder>;
};


export type SubscriptionQueryVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type SubscriptionQueryVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type AuthRule = {
  and?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  not?: InputMaybe<AuthRule>;
  or?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  rule?: InputMaybe<Scalars['String']>;
};

export type ContainsFilter = {
  point?: InputMaybe<PointRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type PointRef = {
  latitude: Scalars['Float'];
  longitude: Scalars['Float'];
};

export type PolygonRef = {
  coordinates: Array<PointListRef>;
};

export type PointListRef = {
  points: Array<PointRef>;
};

export type CursorRef = {
  cursor?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type CustomHttp = {
  body?: InputMaybe<Scalars['String']>;
  forwardHeaders?: InputMaybe<Array<Scalars['String']>>;
  graphql?: InputMaybe<Scalars['String']>;
  introspectionHeaders?: InputMaybe<Array<Scalars['String']>>;
  method: HttpMethod;
  mode?: InputMaybe<Mode>;
  secretHeaders?: InputMaybe<Array<Scalars['String']>>;
  skipIntrospection?: InputMaybe<Scalars['Boolean']>;
  url: Scalars['String'];
};

export enum HttpMethod {
  Delete = 'DELETE',
  Get = 'GET',
  Patch = 'PATCH',
  Post = 'POST',
  Put = 'PUT'
}

export enum Mode {
  Batch = 'BATCH',
  Single = 'SINGLE'
}

export enum DgraphIndex {
  Bool = 'bool',
  Day = 'day',
  Exact = 'exact',
  Float = 'float',
  Fulltext = 'fulltext',
  Geo = 'geo',
  Hash = 'hash',
  Hour = 'hour',
  Int = 'int',
  Int64 = 'int64',
  Month = 'month',
  Regexp = 'regexp',
  Term = 'term',
  Trigram = 'trigram',
  Year = 'year'
}

export type DhoRef = {
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  details_rootNode_n?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type DoccacheConfigRef = {
  contract?: InputMaybe<Scalars['String']>;
  documentsTable?: InputMaybe<Scalars['String']>;
  edgesTable?: InputMaybe<Scalars['String']>;
  elasticApiKey?: InputMaybe<Scalars['String']>;
  elasticEndpoint?: InputMaybe<Scalars['String']>;
  eosEndpoint?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type EditRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']>;
  details_role_c?: InputMaybe<Scalars['String']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type FloatFilter = {
  between?: InputMaybe<FloatRange>;
  eq?: InputMaybe<Scalars['Float']>;
  ge?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  le?: InputMaybe<Scalars['Float']>;
  lt?: InputMaybe<Scalars['Float']>;
};

export type FloatRange = {
  max: Scalars['Float'];
  min: Scalars['Float'];
};

export type GenerateMutationParams = {
  add?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type GenerateQueryParams = {
  aggregate?: InputMaybe<Scalars['Boolean']>;
  get?: InputMaybe<Scalars['Boolean']>;
  password?: InputMaybe<Scalars['Boolean']>;
  query?: InputMaybe<Scalars['Boolean']>;
};

export type IntersectsFilter = {
  multiPolygon?: InputMaybe<MultiPolygonRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type MultiPolygonRef = {
  polygons: Array<PolygonRef>;
};

export type IntFilter = {
  between?: InputMaybe<IntRange>;
  eq?: InputMaybe<Scalars['Int']>;
  ge?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  le?: InputMaybe<Scalars['Int']>;
  lt?: InputMaybe<Scalars['Int']>;
};

export type IntRange = {
  max: Scalars['Int'];
  min: Scalars['Int'];
};

export type MemoRef = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  details_memo_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
};

export type MultiPolygon = {
  __typename?: 'MultiPolygon';
  polygons: Array<Polygon>;
};

export type Polygon = {
  __typename?: 'Polygon';
  coordinates: Array<PointList>;
};

export type PointList = {
  __typename?: 'PointList';
  points: Array<Point>;
};

export type Point = {
  __typename?: 'Point';
  latitude: Scalars['Float'];
  longitude: Scalars['Float'];
};

export type NearFilter = {
  coordinate: PointRef;
  distance: Scalars['Float'];
};

export type PointGeoFilter = {
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type WithinFilter = {
  polygon: PolygonRef;
};

export type PolicyRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_name_s?: InputMaybe<Scalars['String']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']>;
  details_purpose_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_url_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type PollRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type PolygonGeoFilter = {
  contains?: InputMaybe<ContainsFilter>;
  intersects?: InputMaybe<IntersectsFilter>;
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type StringFullTextFilter = {
  alloftext?: InputMaybe<Scalars['String']>;
  anyoftext?: InputMaybe<Scalars['String']>;
};

export type StringHashFilter = {
  eq?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type SuspendRef = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  createdDate?: InputMaybe<Scalars['DateTime']>;
  creator?: InputMaybe<Scalars['String']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']>;
  details_dao_i?: InputMaybe<Scalars['Int64']>;
  details_description_s?: InputMaybe<Scalars['String']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']>;
  details_state_s?: InputMaybe<Scalars['String']>;
  details_title_s?: InputMaybe<Scalars['String']>;
  docId?: InputMaybe<Scalars['String']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']>;
  system_commentName_n?: InputMaybe<Scalars['String']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']>;
  system_description_s?: InputMaybe<Scalars['String']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']>;
  type?: InputMaybe<Scalars['String']>;
  updatedDate?: InputMaybe<Scalars['DateTime']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type TypeVersionRef = {
  type?: InputMaybe<Scalars['String']>;
  version?: InputMaybe<Scalars['String']>;
};

export type ActiveDaoSubsSubscriptionVariables = Exact<{
  regexp: Scalars['String'];
}>;


export type ActiveDaoSubsSubscription = { __typename?: 'Subscription', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, announcements?: Array<{ __typename?: 'Alert', id: string, title?: string | null, message?: string | null, enabled?: BigInt | null }> | null, planmanager?: Array<{ __typename?: 'PlanManager', bill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null }> | null, currentbill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null }> | null, lastbill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null }> | null }> | null, settings?: Array<{ __typename?: 'Settings', settings_claimEnabled_i?: BigInt | null, settings_daoUrl_s?: string | null, settings_daoName_n?: string | null, settings_daoTitle_s?: string | null, settings_daoDescription_s?: string | null, settings_governanceTokenContract_n?: string | null, settings_pegToken_a?: string | null, settings_pegTokenContract_n?: string | null, settings_rewardToken_a?: string | null, settings_rewardTokenContract_n?: string | null, settings_rewardToPegRatio_a?: string | null, settings_treasuryContract_n?: string | null, settings_voiceToken_a?: string | null, settings_socialChat_s?: string | null, settings_proposalsCreationEnabled_i?: BigInt | null, settings_membersApplicationEnabled_i?: BigInt | null, settings_removableBannersEnabled_i?: BigInt | null, settings_votingDurationSec_i?: BigInt | null, settings_periodDurationSec_i?: BigInt | null, settings_votingAlignmentX100_i?: BigInt | null, settings_votingQuorumX100_i?: BigInt | null, settings_voiceTokenDecayPeriod_i?: BigInt | null, settings_usesSeeds_i?: BigInt | null, settings_isHypha_i?: BigInt | null, settings_logo_s?: string | null, settings_extendedLogo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_textColor_s?: string | null, settings_pattern_s?: string | null, settings_patternColor_s?: string | null, settings_patternOpacity_i?: BigInt | null, settings_patternBase64_s?: string | null, settings_splashBackgroundImage_s?: string | null, settings_dashboardBackgroundImage_s?: string | null, settings_dashboardTitle_s?: string | null, settings_dashboardParagraph_s?: string | null, settings_proposalsBackgroundImage_s?: string | null, settings_proposalsTitle_s?: string | null, settings_proposalsParagraph_s?: string | null, settings_membersBackgroundImage_s?: string | null, settings_membersTitle_s?: string | null, settings_membersParagraph_s?: string | null, settings_organisationBackgroundImage_s?: string | null, settings_organisationTitle_s?: string | null, settings_organisationParagraph_s?: string | null, settings_exploreBackgroundImage_s?: string | null, settings_exploreTitle_s?: string | null, settings_exploreParagraph_s?: string | null, settings_documentationURL_s?: string | null }> | null } | null> | null };

export type PlanPageQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type PlanPageQuery = { __typename?: 'Query', plans?: Array<{ __typename?: 'PricingPlan', id: string, name?: string | null, price?: string | null, maxMemberCount?: BigInt | null, discountPerc?: BigInt | null, eactivationPeriodSec?: BigInt | null, priceoffer?: Array<{ __typename?: 'PriceOffer', docId: string }> | null } | null> | null, offers?: Array<{ __typename?: 'PriceOffer', id: string, name?: string | null, periodCount?: BigInt | null, discountPerc?: BigInt | null } | null> | null, getDao?: { __typename: 'Dao', docId: string, planmanager?: Array<{ __typename: 'PlanManager', docId: string, bill?: Array<{ __typename: 'BillingInfo', details_startDate_t?: Date | null, details_expirationDate_t?: Date | null, details_planName_s?: string | null, docId: string }> | null }> | null } | null };

export type AdminQueryVariables = Exact<{
  daoId: Scalars['String'];
  username: Scalars['String'];
}>;


export type AdminQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, admin?: Array<{ __typename?: 'Member', docId: string }> | null } | null };

export type ApplicantQueryVariables = Exact<{
  daoId: Scalars['String'];
  username: Scalars['String'];
}>;


export type ApplicantQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, applicant?: Array<{ __typename?: 'Member', docId: string }> | null } | null };

export type EnrollerQueryVariables = Exact<{
  daoId: Scalars['String'];
  username: Scalars['String'];
}>;


export type EnrollerQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, enroller?: Array<{ __typename?: 'Member', docId: string }> | null } | null };

export type MemberQueryVariables = Exact<{
  daoId: Scalars['String'];
  username: Scalars['String'];
}>;


export type MemberQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, member?: Array<{ __typename?: 'Member', docId: string }> | null } | null };

export type DaoArchetypesQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<RoleOrder>;
  filter?: InputMaybe<RoleFilter>;
}>;


export type DaoArchetypesQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, role?: Array<{ __typename?: 'Role', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null, assignment?: Array<{ __typename?: 'Assignment', details_assignee_n?: string | null }> | null, assignmentAggregate?: { __typename?: 'AssignmentAggregateResult', count?: number | null } | null }> | null } | null };

export type TimeshareQueryVariables = Exact<{
  docId: Scalars['Int64'];
}>;


export type TimeshareQuery = { __typename?: 'Query', queryTimeshare?: Array<{ __typename?: 'Timeshare', details_startDate_t?: Date | null, details_timeShareX100_i?: BigInt | null } | null> | null };

export type AssignmentsPastQueryVariables = Exact<{
  username: Scalars['String'];
}>;


export type AssignmentsPastQuery = { __typename?: 'Query', queryMember?: Array<{ __typename?: 'Member', details_member_n: string, assigned?: Array<{ __typename: 'Assignment', details_title_s?: string | null, details_periodCount_i?: BigInt | null, details_state_s?: string | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null }> | null }> | null } | null> | null };

export type ActiveAssignmentsQueryVariables = Exact<{
  filter?: InputMaybe<AssignmentFilter>;
}>;


export type ActiveAssignmentsQuery = { __typename?: 'Query', aggregateAssignment?: { __typename?: 'AssignmentAggregateResult', count?: number | null } | null };

export type ApprovedAssignmentsQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type ApprovedAssignmentsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, passedprops?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge' } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_voiceSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_pegSalaryPerPeriod_a?: string | null, creator: string, docId: string, details_title_s?: string | null, details_state_s?: string | null, details_periodCount_i?: BigInt | null, claimedAggregate?: { __typename?: 'PeriodAggregateResult', count?: number | null } | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null } | null };

export type DaoBadgeAssignmentsQueryVariables = Exact<{
  daoName: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type DaoBadgeAssignmentsQuery = { __typename?: 'Query', queryAssignbadge?: Array<{ __typename?: 'Assignbadge', details_title_s?: string | null, details_state_s?: string | null, details_description_s?: string | null, details_periodCount_i?: BigInt | null, docId: string, ballot_expiration_t?: Date | null, badge?: Array<{ __typename?: 'Badge', details_icon_s?: string | null }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null, details_label_s?: string | null }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | null> | null };

export type DaoAssignmentsQueryVariables = Exact<{
  daoName: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type DaoAssignmentsQuery = { __typename?: 'Query', queryAssignment?: Array<{ __typename?: 'Assignment', details_title_s?: string | null, details_usdSalaryValuePerPhase_a?: string | null, details_state_s?: string | null, details_description_s?: string | null, details_periodCount_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotAlignment_i?: BigInt | null, details_approvedDeferredPercX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, docId: string, ballot_expiration_t?: Date | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null, details_label_s?: string | null }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_state_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | null> | null };

export type DaoBadgesOptionsQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
  filter?: InputMaybe<BadgeFilter>;
}>;


export type DaoBadgesOptionsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, details_daoName_n: string, badge?: Array<{ __typename: 'Badge', details_icon_s?: string | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, docId: string }> | null } | null };

export type ActiveBadgesQueryVariables = Exact<{
  daoId: Scalars['String'];
  filter?: InputMaybe<BadgeFilter>;
}>;


export type ActiveBadgesQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, badgeAggregate?: { __typename?: 'BadgeAggregateResult', count?: number | null } | null } | null };

export type DaoBadgesQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<BadgeOrder>;
  filter?: InputMaybe<BadgeFilter>;
}>;


export type DaoBadgesQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, details_daoName_n: string, badge?: Array<{ __typename: 'Badge', details_icon_s?: string | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, docId: string, assignment?: Array<{ __typename?: 'Assignbadge', docId: string, details_assignee_n?: string | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null }> | null, assignmentAggregate?: { __typename?: 'AssignbadgeAggregateResult', count?: number | null } | null }> | null } | null };

export type MemberBadgesQueryVariables = Exact<{
  daoId: Scalars['String'];
  username: Scalars['String'];
}>;


export type MemberBadgesQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, details_daoName_n: string, badge?: Array<{ __typename: 'Badge', details_icon_s?: string | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, docId: string, assignment?: Array<{ __typename?: 'Assignbadge', details_assignee_n?: string | null, docId: string }> | null }> | null } | null };

export type CircleDetailsSubSubscriptionVariables = Exact<{
  circleId: Scalars['String'];
}>;


export type CircleDetailsSubSubscription = { __typename?: 'Subscription', queryCircle?: Array<{ __typename?: 'Circle', details_state_s?: string | null, id: string, name?: string | null, purpose?: string | null, budget?: string | null, applicants?: Array<{ __typename?: 'Member', username: string, joinedDate: Date }> | null, members?: Array<{ __typename?: 'Member', username: string, joinedDate: Date }> | null, parentcircle?: Array<{ __typename?: 'Alert', id: string } | { __typename?: 'Assignbadge', id: string } | { __typename?: 'Vote', id: string } | { __typename?: 'Member', id: string } | { __typename?: 'Circle', id: string } | { __typename?: 'Budget', id: string } | { __typename?: 'CmntSection', id: string } | { __typename?: 'Comment', id: string } | { __typename?: 'Reaction', id: string } | { __typename?: 'Dao', id: string } | { __typename?: 'Badge', id: string } | { __typename?: 'VoteTally', id: string } | { __typename?: 'ElectnRound', id: string } | { __typename?: 'UpvtElectn', id: string } | { __typename?: 'DaoDraft', id: string } | { __typename?: 'Settings', id: string } | { __typename?: 'Period', id: string } | { __typename?: 'Payment', id: string } | { __typename?: 'Multisig', id: string } | { __typename?: 'Payout', id: string } | { __typename?: 'PlanManager', id: string } | { __typename?: 'BillingInfo', id: string } | { __typename?: 'PriceOffer', id: string } | { __typename?: 'PricingPlan', id: string } | { __typename?: 'Questcomple', id: string } | { __typename?: 'Queststart', id: string } | { __typename?: 'Questcomplet', id: string } | { __typename?: 'Role', id: string } | { __typename?: 'Assignment', id: string } | { __typename?: 'Timeshare', id: string } | { __typename?: 'Treasury', id: string } | { __typename?: 'TrsyPayment', id: string } | { __typename?: 'Attestation', id: string } | { __typename?: 'Redemption', id: string } | { __typename?: 'VoteGroup', id: string } | { __typename?: 'Balance', id: string } | { __typename?: 'Dho', id: string } | { __typename?: 'Edit', id: string } | { __typename?: 'Memo', id: string } | { __typename?: 'Policy', id: string } | { __typename?: 'Poll', id: string } | { __typename?: 'Suspend', id: string }> | null, subcircle?: Array<{ __typename?: 'Circle', id: string, name?: string | null, purpose?: string | null, budget?: string | null }> | null } | null> | null };

export type CircleDetailsQueryVariables = Exact<{
  circleId: Scalars['String'];
}>;


export type CircleDetailsQuery = { __typename?: 'Query', queryCircle?: Array<{ __typename?: 'Circle', details_state_s?: string | null, id: string, name?: string | null, purpose?: string | null, budget?: string | null, applicants?: Array<{ __typename?: 'Member', username: string, joinedDate: Date }> | null, members?: Array<{ __typename?: 'Member', username: string, joinedDate: Date }> | null, parentcircle?: Array<{ __typename?: 'Alert', id: string } | { __typename?: 'Assignbadge', id: string } | { __typename?: 'Vote', id: string } | { __typename?: 'Member', id: string } | { __typename?: 'Circle', id: string } | { __typename?: 'Budget', id: string } | { __typename?: 'CmntSection', id: string } | { __typename?: 'Comment', id: string } | { __typename?: 'Reaction', id: string } | { __typename?: 'Dao', id: string } | { __typename?: 'Badge', id: string } | { __typename?: 'VoteTally', id: string } | { __typename?: 'ElectnRound', id: string } | { __typename?: 'UpvtElectn', id: string } | { __typename?: 'DaoDraft', id: string } | { __typename?: 'Settings', id: string } | { __typename?: 'Period', id: string } | { __typename?: 'Payment', id: string } | { __typename?: 'Multisig', id: string } | { __typename?: 'Payout', id: string } | { __typename?: 'PlanManager', id: string } | { __typename?: 'BillingInfo', id: string } | { __typename?: 'PriceOffer', id: string } | { __typename?: 'PricingPlan', id: string } | { __typename?: 'Questcomple', id: string } | { __typename?: 'Queststart', id: string } | { __typename?: 'Questcomplet', id: string } | { __typename?: 'Role', id: string } | { __typename?: 'Assignment', id: string } | { __typename?: 'Timeshare', id: string } | { __typename?: 'Treasury', id: string } | { __typename?: 'TrsyPayment', id: string } | { __typename?: 'Attestation', id: string } | { __typename?: 'Redemption', id: string } | { __typename?: 'VoteGroup', id: string } | { __typename?: 'Balance', id: string } | { __typename?: 'Dho', id: string } | { __typename?: 'Edit', id: string } | { __typename?: 'Memo', id: string } | { __typename?: 'Policy', id: string } | { __typename?: 'Poll', id: string } | { __typename?: 'Suspend', id: string }> | null, subcircles?: Array<{ __typename?: 'Circle', id: string, name?: string | null, purpose?: string | null, budget?: string | null }> | null } | null> | null };

export type DaoCirclesQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type DaoCirclesQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, details_daoName_n: string, circle?: Array<{ __typename?: 'Circle', id: string, name?: string | null, purpose?: string | null, budget?: string | null, applicant?: Array<{ __typename?: 'Member', username: string }> | null, members?: Array<{ __typename?: 'Member', username: string }> | null, subcircles?: Array<{ __typename?: 'Circle', id: string, name?: string | null, purpose?: string | null, budget?: string | null }> | null }> | null } | null };

export type ActiveDaoQueryVariables = Exact<{
  regexp: Scalars['String'];
}>;


export type ActiveDaoQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, details_daoType_s?: string | null, details_isWaitingEcosystem_i?: BigInt | null, createdDate: Date, upcomingelct?: Array<{ __typename?: 'UpvtElectn', docId: string }> | null, announcements?: Array<{ __typename?: 'Alert', id: string, title?: string | null, message?: string | null, enabled?: BigInt | null }> | null, planmanager?: Array<{ __typename?: 'PlanManager', bill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null, pricingplan?: Array<{ __typename?: 'PricingPlan', maxMemberCount?: BigInt | null }> | null }> | null, currentbill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null, pricingplan?: Array<{ __typename?: 'PricingPlan', maxMemberCount?: BigInt | null }> | null }> | null, lastbill?: Array<{ __typename?: 'BillingInfo', id: string, startDate?: Date | null, endDate?: Date | null, expirationDate?: Date | null, periodCount?: BigInt | null, name?: string | null, price?: string | null, isInfinite?: BigInt | null, discountPercX10000?: BigInt | null, pricingplan?: Array<{ __typename?: 'PricingPlan', maxMemberCount?: BigInt | null }> | null }> | null }> | null, multisigs?: Array<{ __typename?: 'Multisig', type: string, details_dao_i?: BigInt | null, id: string, url?: string | null, title?: string | null, proposalsCreationEnabled?: BigInt | null, membersApplicationEnabled?: BigInt | null, removableBannersEnabled?: BigInt | null, votingAlignmentPercent?: BigInt | null, votingQuorumPercent?: BigInt | null, approvedby?: Array<{ __typename?: 'Member', docId: string, details_member_n: string }> | null }> | null, settings?: Array<{ __typename?: 'Settings', ecosystem_name_s?: string | null, ecosystem_logo_s?: string | null, ecosystem_domain_s?: string | null, ecosystem_purpose_s?: string | null, settings_onboarderAccount_n?: string | null, settings_claimEnabled_i?: BigInt | null, settings_daoUrl_s?: string | null, settings_daoName_n?: string | null, settings_daoTitle_s?: string | null, settings_daoDescription_s?: string | null, settings_governanceTokenContract_n?: string | null, settings_pegToken_a?: string | null, settings_pegTokenContract_n?: string | null, settings_rewardToken_a?: string | null, settings_rewardTokenContract_n?: string | null, settings_rewardToPegRatio_a?: string | null, settings_treasuryContract_n?: string | null, settings_voiceToken_a?: string | null, settings_socialChat_s?: string | null, settings_documentationButtonText_s?: string | null, settings_proposalsCreationEnabled_i?: BigInt | null, settings_membersApplicationEnabled_i?: BigInt | null, settings_removableBannersEnabled_i?: BigInt | null, settings_votingDurationSec_i?: BigInt | null, settings_periodDurationSec_i?: BigInt | null, settings_votingAlignmentX100_i?: BigInt | null, settings_votingQuorumX100_i?: BigInt | null, settings_voiceTokenDecayPeriod_i?: BigInt | null, settings_communityVotingEnabled_i?: BigInt | null, settings_communityVotingMethod_s?: string | null, settings_upvoteStartDateTime_s?: string | null, settings_upvoteDuration_i?: BigInt | null, settings_upvoteRounds_s?: string | null, settings_upvoteCheifDelegateCount_i?: BigInt | null, settings_upvoteCheifDelegateDuration_i?: BigInt | null, settings_upvoteHeadDelegateRound_i?: BigInt | null, settings_upvoteHeadDelegateDuration_i?: BigInt | null, settings_communityVotingDurationSec_i?: BigInt | null, settings_communityVotingAlignmentPercent_i?: BigInt | null, settings_communityVotingQuorumPercent_i?: BigInt | null, settings_usesSeeds_i?: BigInt | null, settings_isHypha_i?: BigInt | null, settings_logo_s?: string | null, settings_extendedLogo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_textColor_s?: string | null, settings_pattern_s?: string | null, settings_patternColor_s?: string | null, settings_patternOpacity_i?: BigInt | null, settings_patternBase64_s?: string | null, settings_splashBackgroundImage_s?: string | null, settings_dashboardBackgroundImage_s?: string | null, settings_dashboardTitle_s?: string | null, settings_dashboardParagraph_s?: string | null, settings_proposalsBackgroundImage_s?: string | null, settings_proposalsTitle_s?: string | null, settings_proposalsParagraph_s?: string | null, settings_membersBackgroundImage_s?: string | null, settings_membersTitle_s?: string | null, settings_membersParagraph_s?: string | null, settings_organisationBackgroundImage_s?: string | null, settings_organisationTitle_s?: string | null, settings_organisationParagraph_s?: string | null, settings_exploreBackgroundImage_s?: string | null, settings_exploreTitle_s?: string | null, settings_exploreParagraph_s?: string | null, settings_documentationURL_s?: string | null }> | null, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null } | null> | null };

export type ActiveDaoCreatedQueryVariables = Exact<{
  regexp: Scalars['String'];
}>;


export type ActiveDaoCreatedQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, settings?: Array<{ __typename?: 'Settings', settings_claimEnabled_i?: BigInt | null, settings_daoUrl_s?: string | null, settings_daoName_n?: string | null, settings_daoTitle_s?: string | null, settings_daoDescription_s?: string | null, settings_governanceTokenContract_n?: string | null, settings_pegToken_a?: string | null, settings_pegTokenContract_n?: string | null, settings_rewardToken_a?: string | null, settings_rewardTokenContract_n?: string | null, settings_rewardToPegRatio_a?: string | null, settings_treasuryContract_n?: string | null, settings_voiceToken_a?: string | null, settings_socialChat_s?: string | null, settings_proposalsCreationEnabled_i?: BigInt | null, settings_membersApplicationEnabled_i?: BigInt | null, settings_removableBannersEnabled_i?: BigInt | null, settings_votingDurationSec_i?: BigInt | null, settings_periodDurationSec_i?: BigInt | null, settings_votingAlignmentX100_i?: BigInt | null, settings_votingQuorumX100_i?: BigInt | null, settings_voiceTokenDecayPeriod_i?: BigInt | null, settings_usesSeeds_i?: BigInt | null, settings_isHypha_i?: BigInt | null, settings_logo_s?: string | null, settings_extendedLogo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_textColor_s?: string | null, settings_pattern_s?: string | null, settings_patternColor_s?: string | null, settings_patternOpacity_i?: BigInt | null, settings_patternBase64_s?: string | null, settings_splashBackgroundImage_s?: string | null, settings_dashboardBackgroundImage_s?: string | null, settings_dashboardTitle_s?: string | null, settings_dashboardParagraph_s?: string | null, settings_proposalsBackgroundImage_s?: string | null, settings_proposalsTitle_s?: string | null, settings_proposalsParagraph_s?: string | null, settings_membersBackgroundImage_s?: string | null, settings_membersTitle_s?: string | null, settings_membersParagraph_s?: string | null, settings_organisationBackgroundImage_s?: string | null, settings_organisationTitle_s?: string | null, settings_organisationParagraph_s?: string | null, settings_exploreBackgroundImage_s?: string | null, settings_exploreTitle_s?: string | null, settings_exploreParagraph_s?: string | null, settings_documentationURL_s?: string | null }> | null, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null } | null> | null };

export type DaoDraftQueryVariables = Exact<{
  daoName: Scalars['String'];
}>;


export type DaoDraftQuery = { __typename?: 'Query', queryDaoDraft?: Array<{ __typename?: 'DaoDraft', docId: string, details_daoName_n?: string | null, settings?: Array<{ __typename?: 'Settings', settings_claimEnabled_i?: BigInt | null, settings_daoUrl_s?: string | null, settings_daoName_n?: string | null, settings_daoTitle_s?: string | null, settings_daoDescription_s?: string | null, settings_governanceTokenContract_n?: string | null, settings_pegToken_a?: string | null, settings_pegTokenContract_n?: string | null, settings_rewardToken_a?: string | null, settings_rewardTokenContract_n?: string | null, settings_rewardToPegRatio_a?: string | null, settings_treasuryContract_n?: string | null, settings_voiceToken_a?: string | null, settings_socialChat_s?: string | null, settings_proposalsCreationEnabled_i?: BigInt | null, settings_membersApplicationEnabled_i?: BigInt | null, settings_removableBannersEnabled_i?: BigInt | null, settings_votingDurationSec_i?: BigInt | null, settings_periodDurationSec_i?: BigInt | null, settings_votingAlignmentX100_i?: BigInt | null, settings_votingQuorumX100_i?: BigInt | null, settings_voiceTokenDecayPeriod_i?: BigInt | null, settings_usesSeeds_i?: BigInt | null, settings_isHypha_i?: BigInt | null, settings_logo_s?: string | null, settings_extendedLogo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_textColor_s?: string | null, settings_pattern_s?: string | null, settings_patternColor_s?: string | null, settings_patternOpacity_i?: BigInt | null, settings_patternBase64_s?: string | null, settings_splashBackgroundImage_s?: string | null, settings_dashboardBackgroundImage_s?: string | null, settings_dashboardTitle_s?: string | null, settings_dashboardParagraph_s?: string | null, settings_proposalsBackgroundImage_s?: string | null, settings_proposalsTitle_s?: string | null, settings_proposalsParagraph_s?: string | null, settings_membersBackgroundImage_s?: string | null, settings_membersTitle_s?: string | null, settings_membersParagraph_s?: string | null, settings_organisationBackgroundImage_s?: string | null, settings_organisationTitle_s?: string | null, settings_organisationParagraph_s?: string | null, settings_exploreBackgroundImage_s?: string | null, settings_exploreTitle_s?: string | null, settings_exploreParagraph_s?: string | null, settings_documentationURL_s?: string | null }> | null } | null> | null };

export type DaoListAscQueryVariables = Exact<{
  filter?: InputMaybe<DaoFilter>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type DaoListAscQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, createdDate: Date, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null }> | null, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null> | null };

export type DaoListInfoQueryVariables = Exact<{
  filter?: InputMaybe<DaoFilter>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
  order?: InputMaybe<DaoOrder>;
}>;


export type DaoListInfoQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, admin?: Array<{ __typename?: 'Member', details_member_n: string }> | null, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_votingDurationSec_i?: BigInt | null, settings_periodDurationSec_i?: BigInt | null }> | null } | null> | null };

export type DaoListRecentQueryVariables = Exact<{
  filter?: InputMaybe<DaoFilter>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type DaoListRecentQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, createdDate: Date, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null }> | null, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null> | null };

export type DaoListQueryVariables = Exact<{
  order?: InputMaybe<DaoOrder>;
  filter?: InputMaybe<DaoFilter>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type DaoListQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, createdDate: Date, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_daoUrl_s?: string | null }> | null, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null> | null };

export type AlertsQueryVariables = Exact<{ [key: string]: never; }>;


export type AlertsQuery = { __typename?: 'Query', queryDho?: Array<{ __typename?: 'Dho', alert?: Array<{ __typename?: 'Alert', id: string, content?: string | null, enabled?: BigInt | null, level?: string | null }> | null } | null> | null };

export type EcosystemChildrenQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type EcosystemChildrenQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, anchorchild?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, createdDate: Date, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_daoUrl_s?: string | null, settings_onboarderAccount_n?: string | null }> | null }> | null, childdraft?: Array<{ __typename?: 'DaoDraft', docId: string, details_daoName_n?: string | null, createdDate: Date, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_daoUrl_s?: string | null, settings_onboarderAccount_n?: string | null }> | null }> | null } | null };

export type ActiveEcosystemQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type ActiveEcosystemQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, details_daoType_s?: string | null, details_isWaitingEcosystem_i?: BigInt | null, settings?: Array<{ __typename?: 'Settings', ecosystem_name_s?: string | null, ecosystem_logo_s?: string | null, ecosystem_domain_s?: string | null, ecosystem_purpose_s?: string | null }> | null } | null> | null };

export type EcosystemsListQueryVariables = Exact<{ [key: string]: never; }>;


export type EcosystemsListQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', createdDate: Date, settings?: Array<{ __typename?: 'Settings', ecosystem_name_s?: string | null, ecosystem_purpose_s?: string | null, ecosystem_logo_s?: string | null, ecosystem_domain_s?: string | null }> | null, anchorchildAggregate?: { __typename?: 'DaoAggregateResult', count?: number | null } | null, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, commemberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null } | null> | null };

export type DhoQueryVariables = Exact<{ [key: string]: never; }>;


export type DhoQuery = { __typename?: 'Query', queryDho?: Array<{ __typename?: 'Dho', settings?: Array<{ __typename?: 'Settings', settings_pegToken_a?: string | null, settings_pegTokenContract_n?: string | null, settings_rewardTokenContract_n?: string | null, settings_governanceTokenContract_n?: string | null, settings_voiceToken_a?: string | null, settings_logo_s?: string | null, contract: string, ecosystemPrice?: string | null, ecosystemPriceStaked?: string | null, ecosystemChildPrice?: string | null, ecosystemChildPriceStaked?: string | null }> | null } | null> | null };

export type ApplicantPaginationQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  filter?: InputMaybe<MemberFilter>;
  order?: InputMaybe<MemberOrder>;
}>;


export type ApplicantPaginationQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, applicant?: Array<{ __typename: 'Member', details_member_n: string, createdDate: Date, docId: string }> | null } | null };

export type GetActiveAssignmentsQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type GetActiveAssignmentsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, role?: Array<{ __typename?: 'Role', docId: string, assignment?: Array<{ __typename?: 'Assignment', docId: string, creator: string }> | null }> | null, badge?: Array<{ __typename?: 'Badge', docId: string, assignment?: Array<{ __typename?: 'Assignbadge', docId: string, creator: string }> | null }> | null } | null };

export type CountMembersQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type CountMembersQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null } | null };

export type MembersQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
}>;


export type MembersQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, member?: Array<{ __typename: 'Member', details_member_n: string, createdDate: Date, docId: string }> | null } | null };

export type ComunityMembersPaginationQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  filter?: InputMaybe<MemberFilter>;
  order?: InputMaybe<MemberOrder>;
}>;


export type ComunityMembersPaginationQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, commember?: Array<{ __typename: 'Member', details_member_n: string, createdDate: Date, docId: string }> | null } | null };

export type CoreMembersPaginationQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  filter?: InputMaybe<MemberFilter>;
  order?: InputMaybe<MemberOrder>;
}>;


export type CoreMembersPaginationQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, member?: Array<{ __typename: 'Member', details_member_n: string, createdDate: Date, docId: string }> | null } | null };

export type PaymentCountQueryVariables = Exact<{
  user: Scalars['String'];
}>;


export type PaymentCountQuery = { __typename?: 'Query', aggregatePayment?: { __typename?: 'PaymentAggregateResult', count?: number | null } | null };

export type PaymentsQueryVariables = Exact<{
  filter?: InputMaybe<PaymentFilter>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
  order?: InputMaybe<PaymentOrder>;
}>;


export type PaymentsQuery = { __typename?: 'Query', queryPayment?: Array<{ __typename?: 'Payment', createdDate: Date, amount?: string | null, memo?: string | null, hash?: string | null } | null> | null };

export type DaoPayoutsQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order?: InputMaybe<PayoutOrder>;
  filter?: InputMaybe<PayoutFilter>;
}>;


export type DaoPayoutsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, details_daoName_n: string, payout?: Array<{ __typename?: 'Payout', details_title_s?: string | null, details_description_s?: string | null, docId: string, paymentAggregate?: { __typename?: 'PaymentAggregateResult', count?: number | null } | null, payment?: Array<{ __typename?: 'Payment', details_amount_a?: string | null }> | null }> | null } | null };

export type RecentPayoutsQueryVariables = Exact<{
  daoId: Scalars['String'];
  filter?: InputMaybe<PayoutFilter>;
}>;


export type RecentPayoutsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, payoutAggregate?: { __typename?: 'PayoutAggregateResult', count?: number | null } | null } | null };

export type PeriodsUpcomingQueryVariables = Exact<{
  daoId?: InputMaybe<Scalars['String']>;
  after: Scalars['DateTime'];
}>;


export type PeriodsUpcomingQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', details_daoName_n: string, period?: Array<{ __typename?: 'Period', docId: string, details_label_s?: string | null, details_startTime_t?: Date | null }> | null } | null };

export type PeriodsRangeQueryVariables = Exact<{
  daoId: Scalars['String'];
  start: Scalars['DateTime'];
  count: Scalars['Int'];
}>;


export type PeriodsRangeQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, period?: Array<{ __typename?: 'Period', details_label_s?: string | null, details_startTime_t?: Date | null, docId: string, next?: Array<{ __typename?: 'Period', end?: Date | null }> | null }> | null } | null };

export type QueryActivityAssignmentsQueryVariables = Exact<{
  username: Scalars['String'];
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type QueryActivityAssignmentsQuery = { __typename?: 'Query', getDao?: { __typename: 'Dao', docId: string, votable?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', type: string, docId: string, details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_badge_i?: BigInt | null, creator: string, createdDate: Date, details_periodCount_i?: BigInt | null, details_ballotAlignment_i?: BigInt | null, ballot_expiration_t?: Date | null, badge?: Array<{ __typename?: 'Badge', docId: string, details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Queststart', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Questcomplet' } | { __typename: 'Role', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Assignment', type: string, docId: string, details_title_s?: string | null, details_usdSalaryValuePerPhase_a?: string | null, details_state_s?: string | null, details_description_s?: string | null, details_periodCount_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotAlignment_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_approvedDeferredPercX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, ballot_expiration_t?: Date | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null, details_label_s?: string | null }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', docId: string, details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend', ballot_expiration_t?: Date | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null }> | null } | null };

export type GetMemberBasicInfoQueryVariables = Exact<{
  username: Scalars['String'];
}>;


export type GetMemberBasicInfoQuery = { __typename?: 'Query', getMember?: { __typename: 'Member', docId: string, details_member_n: string, createdDate: Date } | null };

export type QueryActivityContributionsQueryVariables = Exact<{
  username: Scalars['String'];
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type QueryActivityContributionsQuery = { __typename?: 'Query', queryPayout?: Array<{ __typename?: 'Payout', docId: string, details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_url_s?: string | null, details_recipient_n?: string | null, creator: string, createdDate: Date, details_voiceAmount_a?: string | null, details_rewardAmount_a?: string | null, ballot_expiration_t?: Date | null, details_pegAmount_a?: string | null, details_ballotSupply_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotAlignment_i?: BigInt | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | null> | null };

export type ProfileDhosQueryVariables = Exact<{
  username: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type ProfileDhosQuery = { __typename?: 'Query', getMember?: { __typename: 'Member', docId: string, createdDate: Date, details_member_n: string, memberofAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null, memberof?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member' } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao', docId: string, details_daoName_n: string, settings?: Array<{ __typename?: 'Settings', settings_daoTitle_s?: string | null, settings_isHypha_i?: BigInt | null, settings_logo_s?: string | null, settings_daoUrl_s?: string | null }> | null } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, applicantof?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member' } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao', details_daoName_n: string, settings?: Array<{ __typename?: 'Settings', settings_daoTitle_s?: string | null, settings_daoUrl_s?: string | null }> | null } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null } | null };

export type GetStatsQueryVariables = Exact<{
  username: Scalars['String'];
  daoId: Scalars['Int64'];
  daoName?: InputMaybe<Scalars['String']>;
}>;


export type GetStatsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, votableAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null, getMember?: { __typename?: 'Member', payoutAggregate?: { __typename?: 'PayoutAggregateResult', count?: number | null } | null } | null };

export type GetMemberVotesQueryVariables = Exact<{
  username: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
}>;


export type GetMemberVotesQuery = { __typename?: 'Query', getMember?: { __typename: 'Member', docId: string, vote?: Array<{ __typename?: 'Vote', docId: string, vote_vote_s?: string | null, vote_date_t?: Date | null, voteon?: Array<{ __typename: 'Alert', creator: string, docId: string } | { __typename: 'Assignbadge', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'Vote', creator: string, docId: string } | { __typename: 'Member', creator: string, docId: string } | { __typename: 'Circle', creator: string, docId: string } | { __typename: 'Budget', creator: string, docId: string } | { __typename: 'CmntSection', creator: string, docId: string } | { __typename: 'Comment', creator: string, docId: string } | { __typename: 'Reaction', creator: string, docId: string } | { __typename: 'Dao', creator: string, docId: string } | { __typename: 'Badge', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'VoteTally', creator: string, docId: string } | { __typename: 'ElectnRound', creator: string, docId: string } | { __typename: 'UpvtElectn', creator: string, docId: string } | { __typename: 'DaoDraft', creator: string, docId: string } | { __typename: 'Settings', creator: string, docId: string } | { __typename: 'Period', creator: string, docId: string } | { __typename: 'Payment', creator: string, docId: string } | { __typename: 'Multisig', creator: string, docId: string } | { __typename: 'Payout', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'PlanManager', creator: string, docId: string } | { __typename: 'BillingInfo', creator: string, docId: string } | { __typename: 'PriceOffer', creator: string, docId: string } | { __typename: 'PricingPlan', creator: string, docId: string } | { __typename: 'Questcomple', creator: string, docId: string } | { __typename: 'Queststart', creator: string, docId: string } | { __typename: 'Questcomplet', creator: string, docId: string } | { __typename: 'Role', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'Assignment', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'Timeshare', creator: string, docId: string } | { __typename: 'Treasury', creator: string, docId: string } | { __typename: 'TrsyPayment', creator: string, docId: string } | { __typename: 'Attestation', creator: string, docId: string } | { __typename: 'Redemption', creator: string, docId: string } | { __typename: 'VoteGroup', creator: string, docId: string } | { __typename: 'Balance', creator: string, docId: string } | { __typename: 'Dho', creator: string, docId: string } | { __typename: 'Edit', creator: string, docId: string, details_title_s?: string | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null } | { __typename: 'Memo', creator: string, docId: string } | { __typename: 'Policy', creator: string, docId: string } | { __typename: 'Poll', creator: string, docId: string } | { __typename: 'Suspend', details_title_s?: string | null, creator: string, docId: string, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null }> | null }> | null } | null };

export type ProposalCountQueryVariables = Exact<{
  daoId: Scalars['String'];
  initDate: Scalars['DateTime'];
  finalDate: Scalars['DateTime'];
}>;


export type ProposalCountQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null };

export type CommentQueryVariables = Exact<{
  docId: Scalars['String'];
}>;


export type CommentQuery = { __typename?: 'Query', getComment?: { __typename: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null, replies?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null } | null };

export type ProposalSubscriptionVariables = Exact<{
  docId: Scalars['String'];
}>;


export type ProposalSubscription = { __typename?: 'Subscription', getDocument?: { __typename: 'Alert', docId: string, creator: string, createdDate: Date } | { __typename: 'Assignbadge', docId: string, creator: string, createdDate: Date, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null } | { __typename: 'Vote', docId: string, creator: string, createdDate: Date } | { __typename: 'Member', docId: string, creator: string, createdDate: Date } | { __typename: 'Circle', docId: string, creator: string, createdDate: Date } | { __typename: 'Budget', docId: string, creator: string, createdDate: Date } | { __typename: 'CmntSection', docId: string, creator: string, createdDate: Date } | { __typename: 'Comment', docId: string, creator: string, createdDate: Date } | { __typename: 'Reaction', docId: string, creator: string, createdDate: Date } | { __typename: 'Dao', docId: string, creator: string, createdDate: Date } | { __typename: 'Badge', docId: string, creator: string, createdDate: Date } | { __typename: 'VoteTally', docId: string, creator: string, createdDate: Date } | { __typename: 'ElectnRound', docId: string, creator: string, createdDate: Date } | { __typename: 'UpvtElectn', docId: string, creator: string, createdDate: Date } | { __typename: 'DaoDraft', docId: string, creator: string, createdDate: Date } | { __typename: 'Settings', docId: string, creator: string, createdDate: Date } | { __typename: 'Period', docId: string, creator: string, createdDate: Date } | { __typename: 'Payment', docId: string, creator: string, createdDate: Date } | { __typename: 'Multisig', docId: string, creator: string, createdDate: Date } | { __typename: 'Payout', docId: string, creator: string, createdDate: Date, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null } | { __typename: 'PlanManager', docId: string, creator: string, createdDate: Date } | { __typename: 'BillingInfo', docId: string, creator: string, createdDate: Date } | { __typename: 'PriceOffer', docId: string, creator: string, createdDate: Date } | { __typename: 'PricingPlan', docId: string, creator: string, createdDate: Date } | { __typename: 'Questcomple', docId: string, creator: string, createdDate: Date } | { __typename: 'Queststart', docId: string, creator: string, createdDate: Date } | { __typename: 'Questcomplet', docId: string, creator: string, createdDate: Date } | { __typename: 'Role', docId: string, creator: string, createdDate: Date, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null } | { __typename: 'Assignment', details_usdSalaryValuePerPhase_a?: string | null, docId: string, creator: string, createdDate: Date, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null } | { __typename: 'Timeshare', docId: string, creator: string, createdDate: Date } | { __typename: 'Treasury', docId: string, creator: string, createdDate: Date } | { __typename: 'TrsyPayment', docId: string, creator: string, createdDate: Date } | { __typename: 'Attestation', docId: string, creator: string, createdDate: Date } | { __typename: 'Redemption', docId: string, creator: string, createdDate: Date } | { __typename: 'VoteGroup', docId: string, creator: string, createdDate: Date } | { __typename: 'Balance', docId: string, creator: string, createdDate: Date } | { __typename: 'Dho', docId: string, creator: string, createdDate: Date } | { __typename: 'Edit', docId: string, creator: string, createdDate: Date, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null } | { __typename: 'Memo', docId: string, creator: string, createdDate: Date } | { __typename: 'Policy', docId: string, creator: string, createdDate: Date } | { __typename: 'Poll', docId: string, creator: string, createdDate: Date } | { __typename: 'Suspend', docId: string, creator: string, createdDate: Date } | null };

export type ProposalDetailQueryVariables = Exact<{
  docId: Scalars['String'];
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type ProposalDetailQuery = { __typename?: 'Query', getDocument?: { __typename: 'Alert', docId: string, creator: string, createdDate: Date } | { __typename: 'Assignbadge', ballot_expiration_t?: Date | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_startPeriod_i?: BigInt | null, details_assignee_n?: string | null, docId: string, creator: string, createdDate: Date, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, badge?: Array<{ __typename?: 'Badge', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_icon_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Vote', docId: string, creator: string, createdDate: Date } | { __typename: 'Member', docId: string, creator: string, createdDate: Date } | { __typename: 'Circle', docId: string, creator: string, createdDate: Date } | { __typename: 'Budget', docId: string, creator: string, createdDate: Date } | { __typename: 'CmntSection', docId: string, creator: string, createdDate: Date } | { __typename: 'Comment', docId: string, creator: string, createdDate: Date } | { __typename: 'Reaction', docId: string, creator: string, createdDate: Date } | { __typename: 'Dao', docId: string, creator: string, createdDate: Date } | { __typename: 'Badge', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, details_icon_s?: string | null, details_state_s?: string | null, details_maxCycles_i?: BigInt | null, details_maxPeriodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_purpose_s?: string | null, system_proposer_n?: string | null, docId: string, creator: string, createdDate: Date, assignment?: Array<{ __typename?: 'Assignbadge', details_assignee_n?: string | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null }> | null, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'VoteTally', docId: string, creator: string, createdDate: Date } | { __typename: 'ElectnRound', docId: string, creator: string, createdDate: Date } | { __typename: 'UpvtElectn', docId: string, creator: string, createdDate: Date } | { __typename: 'DaoDraft', docId: string, creator: string, createdDate: Date } | { __typename: 'Settings', docId: string, creator: string, createdDate: Date } | { __typename: 'Period', docId: string, creator: string, createdDate: Date } | { __typename: 'Payment', docId: string, creator: string, createdDate: Date } | { __typename: 'Multisig', docId: string, creator: string, createdDate: Date } | { __typename: 'Payout', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_url_s?: string | null, details_usdAmount_a?: string | null, details_deferredPercX100_i?: BigInt | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_isCustom_i?: BigInt | null, details_owner_n?: string | null, docId: string, creator: string, createdDate: Date, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'PlanManager', docId: string, creator: string, createdDate: Date } | { __typename: 'BillingInfo', docId: string, creator: string, createdDate: Date } | { __typename: 'PriceOffer', docId: string, creator: string, createdDate: Date } | { __typename: 'PricingPlan', docId: string, creator: string, createdDate: Date } | { __typename: 'Questcomple', docId: string, creator: string, createdDate: Date, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Queststart', docId: string, creator: string, createdDate: Date, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Questcomplet', docId: string, creator: string, createdDate: Date } | { __typename: 'Role', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_fulltimeCapacityX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null, details_owner_n?: string | null, docId: string, creator: string, createdDate: Date, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Assignment', details_usdSalaryValuePerPhase_a?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_approvedDeferredPercX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, creator: string, createdDate: Date, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, start?: Array<{ __typename?: 'Period', docId: string, details_label_s?: string | null, details_startTime_t?: Date | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Timeshare', docId: string, creator: string, createdDate: Date } | { __typename: 'Treasury', docId: string, creator: string, createdDate: Date } | { __typename: 'TrsyPayment', docId: string, creator: string, createdDate: Date } | { __typename: 'Attestation', docId: string, creator: string, createdDate: Date } | { __typename: 'Redemption', docId: string, creator: string, createdDate: Date } | { __typename: 'VoteGroup', docId: string, creator: string, createdDate: Date } | { __typename: 'Balance', docId: string, creator: string, createdDate: Date } | { __typename: 'Dho', docId: string, creator: string, createdDate: Date } | { __typename: 'Edit', ballot_expiration_t?: Date | null, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, details_periodCount_i?: BigInt | null, details_state_s?: string | null, docId: string, creator: string, createdDate: Date, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_state_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null, details_icon_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_usdSalaryValuePerPhase_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_url_s?: string | null, details_periodCount_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_approvedDeferredPercX100_i?: BigInt | null, details_state_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', createdDate: Date, id: string, author?: string | null, content?: string | null, deletedStatus?: BigInt | null, reactions?: Array<{ __typename?: 'Reaction', reactionlnkrAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, reactionlnkr?: Array<{ __typename?: 'Member', author: string }> | null }> | null, commentAggregate?: { __typename?: 'CommentAggregateResult', count?: number | null } | null }> | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Memo', docId: string, creator: string, createdDate: Date } | { __typename: 'Policy', docId: string, creator: string, createdDate: Date } | { __typename: 'Poll', docId: string, creator: string, createdDate: Date } | { __typename: 'Suspend', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_originalDocument_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, creator: string, createdDate: Date, dao?: Array<{ __typename?: 'Dao', details_daoName_n: string }> | null, suspend?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, details_periodCount_i?: BigInt | null, details_startPeriod_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_assignee_n?: string | null, badge?: Array<{ __typename?: 'Badge', details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null } | { __typename?: 'Vote' } | { __typename?: 'Member' } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, details_icon_s?: string | null, details_state_s?: string | null, details_maxCycles_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_state_s?: string | null } | { __typename?: 'Assignment', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | null };

export type ProposalsSubsSubscriptionVariables = Exact<{
  docId: Scalars['String'];
  user?: InputMaybe<Scalars['String']>;
  first?: InputMaybe<Scalars['Int']>;
}>;


export type ProposalsSubsSubscription = { __typename?: 'Subscription', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, proposal?: Array<{ __typename: 'Alert', docId: string } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_badge_i?: BigInt | null, creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_assignee_n?: string | null, docId: string, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Vote', docId: string } | { __typename: 'Member', docId: string } | { __typename: 'Circle', docId: string } | { __typename: 'Budget', docId: string } | { __typename: 'CmntSection', docId: string } | { __typename: 'Comment', docId: string } | { __typename: 'Reaction', docId: string } | { __typename: 'Dao', docId: string } | { __typename: 'Badge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, system_proposer_n?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'VoteTally', docId: string } | { __typename: 'ElectnRound', docId: string } | { __typename: 'UpvtElectn', docId: string } | { __typename: 'DaoDraft', docId: string } | { __typename: 'Settings', docId: string } | { __typename: 'Period', docId: string } | { __typename: 'Payment', docId: string } | { __typename: 'Multisig', docId: string } | { __typename: 'Payout', ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_title_s?: string | null, details_description_s?: string | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_owner_n?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'PlanManager', docId: string } | { __typename: 'BillingInfo', docId: string } | { __typename: 'PriceOffer', docId: string } | { __typename: 'PricingPlan', docId: string } | { __typename: 'Questcomple', docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Queststart', docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Questcomplet', docId: string } | { __typename: 'Role', details_title_s?: string | null, ballot_expiration_t?: Date | null, details_annualUsdSalary_a?: string | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Assignment', creator: string, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Timeshare', docId: string } | { __typename: 'Treasury', docId: string } | { __typename: 'TrsyPayment', docId: string } | { __typename: 'Attestation', docId: string } | { __typename: 'Redemption', docId: string } | { __typename: 'VoteGroup', docId: string } | { __typename: 'Balance', docId: string } | { __typename: 'Dho', docId: string } | { __typename: 'Edit', creator: string, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_title_s?: string | null, details_description_s?: string | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Memo', docId: string } | { __typename: 'Policy', docId: string } | { __typename: 'Poll', docId: string } | { __typename: 'Suspend', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null }> | null } | null> | null };

export type ProposalsActiveVoteQueryVariables = Exact<{
  docId: Scalars['String'];
  user?: InputMaybe<Scalars['String']>;
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type ProposalsActiveVoteQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, proposal?: Array<{ __typename: 'Alert', docId: string } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, details_state_s?: string | null, details_badge_i?: BigInt | null, creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_assignee_n?: string | null, docId: string, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Vote', docId: string } | { __typename: 'Member', docId: string } | { __typename: 'Circle', docId: string } | { __typename: 'Budget', docId: string } | { __typename: 'CmntSection', docId: string } | { __typename: 'Comment', docId: string } | { __typename: 'Reaction', docId: string } | { __typename: 'Dao', docId: string } | { __typename: 'Badge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, system_proposer_n?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'VoteTally', docId: string } | { __typename: 'ElectnRound', docId: string } | { __typename: 'UpvtElectn', docId: string } | { __typename: 'DaoDraft', docId: string } | { __typename: 'Settings', docId: string } | { __typename: 'Period', docId: string } | { __typename: 'Payment', docId: string } | { __typename: 'Multisig', docId: string } | { __typename: 'Payout', ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_title_s?: string | null, details_description_s?: string | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_owner_n?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'PlanManager', docId: string } | { __typename: 'BillingInfo', docId: string } | { __typename: 'PriceOffer', docId: string } | { __typename: 'PricingPlan', docId: string } | { __typename: 'Questcomple', docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Queststart', docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Questcomplet', docId: string } | { __typename: 'Role', details_title_s?: string | null, ballot_expiration_t?: Date | null, details_annualUsdSalary_a?: string | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Assignment', creator: string, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, lastimeshare?: Array<{ __typename?: 'Timeshare', details_timeShareX100_i?: BigInt | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Timeshare', docId: string } | { __typename: 'Treasury', docId: string } | { __typename: 'TrsyPayment', docId: string } | { __typename: 'Attestation', docId: string } | { __typename: 'Redemption', docId: string } | { __typename: 'VoteGroup', docId: string } | { __typename: 'Balance', docId: string } | { __typename: 'Dho', docId: string } | { __typename: 'Edit', creator: string, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_title_s?: string | null, details_description_s?: string | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null } | { __typename: 'Memo', docId: string } | { __typename: 'Policy', docId: string } | { __typename: 'Poll', docId: string } | { __typename: 'Suspend', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, creator: string, createdDate: Date, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, docId: string, pass?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, abstain?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, fail?: { __typename?: 'VoteAggregateResult', count?: number | null } | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null }> | null, vote?: Array<{ __typename?: 'Vote', vote_date_t?: Date | null, vote_voter_n?: string | null, vote_vote_s?: string | null, vote_votePower_a?: string | null }> | null }> | null } | null> | null };

export type ProposalsActiveQueryVariables = Exact<{
  name: Scalars['String'];
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type ProposalsActiveQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, proposal?: Array<{ __typename?: 'Alert', docId: string } | { __typename?: 'Assignbadge', docId: string } | { __typename?: 'Vote', docId: string } | { __typename?: 'Member', docId: string } | { __typename?: 'Circle', docId: string } | { __typename?: 'Budget', docId: string } | { __typename?: 'CmntSection', docId: string } | { __typename?: 'Comment', docId: string } | { __typename?: 'Reaction', docId: string } | { __typename?: 'Dao', docId: string } | { __typename?: 'Badge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, docId: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null } | { __typename?: 'VoteTally', docId: string } | { __typename?: 'ElectnRound', docId: string } | { __typename?: 'UpvtElectn', docId: string } | { __typename?: 'DaoDraft', docId: string } | { __typename?: 'Settings', docId: string } | { __typename?: 'Period', docId: string } | { __typename?: 'Payment', docId: string } | { __typename?: 'Multisig', docId: string } | { __typename?: 'Payout', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, docId: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null } | { __typename?: 'PlanManager', docId: string } | { __typename?: 'BillingInfo', docId: string } | { __typename?: 'PriceOffer', docId: string } | { __typename?: 'PricingPlan', docId: string } | { __typename?: 'Questcomple', docId: string } | { __typename?: 'Queststart', docId: string } | { __typename?: 'Questcomplet', docId: string } | { __typename?: 'Role', details_title_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, docId: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null } | { __typename?: 'Assignment', docId: string } | { __typename?: 'Timeshare', docId: string } | { __typename?: 'Treasury', docId: string } | { __typename?: 'TrsyPayment', docId: string } | { __typename?: 'Attestation', docId: string } | { __typename?: 'Redemption', docId: string } | { __typename?: 'VoteGroup', docId: string } | { __typename?: 'Balance', docId: string } | { __typename?: 'Dho', docId: string } | { __typename?: 'Edit', docId: string } | { __typename?: 'Memo', docId: string } | { __typename?: 'Policy', docId: string } | { __typename?: 'Poll', docId: string } | { __typename?: 'Suspend', docId: string }> | null } | null> | null };

export type ProposalsCountQueryVariables = Exact<{
  docId: Scalars['String'];
}>;


export type ProposalsCountQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null, votableAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null, stagingpropAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null> | null };

export type HistoryProposalsQueryVariables = Exact<{
  docId: Scalars['String'];
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type HistoryProposalsQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, votable?: Array<{ __typename?: 'Alert', docId: string, type: string } | { __typename?: 'Assignbadge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_startPeriod_i?: BigInt | null, details_assignee_n?: string | null, createdDate: Date, docId: string, type: string, badge?: Array<{ __typename?: 'Badge', details_icon_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Vote', docId: string, type: string } | { __typename?: 'Member', docId: string, type: string } | { __typename?: 'Circle', details_dao_i?: BigInt | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Budget', docId: string, type: string } | { __typename?: 'CmntSection', docId: string, type: string } | { __typename?: 'Comment', docId: string, type: string } | { __typename?: 'Reaction', docId: string, type: string } | { __typename?: 'Dao', docId: string, type: string } | { __typename?: 'Badge', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, details_icon_s?: string | null, details_state_s?: string | null, details_maxCycles_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, system_proposer_n?: string | null, docId: string, type: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'VoteTally', docId: string, type: string } | { __typename?: 'ElectnRound', docId: string, type: string } | { __typename?: 'UpvtElectn', docId: string, type: string } | { __typename?: 'DaoDraft', docId: string, type: string } | { __typename?: 'Settings', docId: string, type: string } | { __typename?: 'Period', docId: string, type: string } | { __typename?: 'Payment', docId: string, type: string } | { __typename?: 'Multisig', docId: string, type: string } | { __typename?: 'Payout', details_dao_i?: BigInt | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_url_s?: string | null, details_usdAmount_a?: string | null, details_deferredPercX100_i?: BigInt | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_owner_n?: string | null, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'PlanManager', docId: string, type: string } | { __typename?: 'BillingInfo', docId: string, type: string } | { __typename?: 'PriceOffer', docId: string, type: string } | { __typename?: 'PricingPlan', docId: string, type: string } | { __typename?: 'Questcomple', docId: string, type: string } | { __typename?: 'Queststart', docId: string, type: string } | { __typename?: 'Questcomplet', docId: string, type: string } | { __typename?: 'Role', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null, details_owner_n?: string | null, createdDate: Date, creator: string, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Assignment', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, type: string, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, role?: Array<{ __typename?: 'Role', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Timeshare', docId: string, type: string } | { __typename?: 'Treasury', docId: string, type: string } | { __typename?: 'TrsyPayment', docId: string, type: string } | { __typename?: 'Attestation', docId: string, type: string } | { __typename?: 'Redemption', docId: string, type: string } | { __typename?: 'VoteGroup', docId: string, type: string } | { __typename?: 'Balance', docId: string, type: string } | { __typename?: 'Dho', docId: string, type: string } | { __typename?: 'Edit', details_dao_i?: BigInt | null, details_state_s?: string | null, creator: string, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, createdDate: Date, docId: string, type: string, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_title_s?: string | null, details_description_s?: string | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Memo', docId: string, type: string } | { __typename?: 'Policy', docId: string, type: string } | { __typename?: 'Poll', docId: string, type: string } | { __typename?: 'Suspend', docId: string, type: string }> | null } | null> | null };

export type StageProposalsSubsSubscriptionVariables = Exact<{
  docId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
}>;


export type StageProposalsSubsSubscription = { __typename?: 'Subscription', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, stagingprop?: Array<{ __typename?: 'Alert', docId: string, type: string } | { __typename?: 'Assignbadge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_startPeriod_i?: BigInt | null, details_assignee_n?: string | null, createdDate: Date, docId: string, type: string, badge?: Array<{ __typename?: 'Badge', details_icon_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Vote', docId: string, type: string } | { __typename?: 'Member', docId: string, type: string } | { __typename?: 'Circle', docId: string, type: string } | { __typename?: 'Budget', docId: string, type: string } | { __typename?: 'CmntSection', docId: string, type: string } | { __typename?: 'Comment', docId: string, type: string } | { __typename?: 'Reaction', docId: string, type: string } | { __typename?: 'Dao', docId: string, type: string } | { __typename?: 'Badge', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, details_icon_s?: string | null, details_state_s?: string | null, details_maxCycles_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, system_proposer_n?: string | null, docId: string, type: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'VoteTally', docId: string, type: string } | { __typename?: 'ElectnRound', docId: string, type: string } | { __typename?: 'UpvtElectn', docId: string, type: string } | { __typename?: 'DaoDraft', docId: string, type: string } | { __typename?: 'Settings', docId: string, type: string } | { __typename?: 'Period', docId: string, type: string } | { __typename?: 'Payment', docId: string, type: string } | { __typename?: 'Multisig', docId: string, type: string } | { __typename?: 'Payout', details_dao_i?: BigInt | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_url_s?: string | null, details_usdAmount_a?: string | null, details_deferredPercX100_i?: BigInt | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_owner_n?: string | null, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'PlanManager', docId: string, type: string } | { __typename?: 'BillingInfo', docId: string, type: string } | { __typename?: 'PriceOffer', docId: string, type: string } | { __typename?: 'PricingPlan', docId: string, type: string } | { __typename?: 'Questcomple', docId: string, type: string } | { __typename?: 'Queststart', docId: string, type: string } | { __typename?: 'Questcomplet', docId: string, type: string } | { __typename?: 'Role', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null, details_owner_n?: string | null, createdDate: Date, creator: string, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Assignment', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, type: string, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, role?: Array<{ __typename?: 'Role', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Timeshare', docId: string, type: string } | { __typename?: 'Treasury', docId: string, type: string } | { __typename?: 'TrsyPayment', docId: string, type: string } | { __typename?: 'Attestation', docId: string, type: string } | { __typename?: 'Redemption', docId: string, type: string } | { __typename?: 'VoteGroup', docId: string, type: string } | { __typename?: 'Balance', docId: string, type: string } | { __typename?: 'Dho', docId: string, type: string } | { __typename?: 'Edit', details_dao_i?: BigInt | null, details_state_s?: string | null, creator: string, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, createdDate: Date, docId: string, type: string, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_title_s?: string | null, details_description_s?: string | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Memo', docId: string, type: string } | { __typename?: 'Policy', docId: string, type: string } | { __typename?: 'Poll', docId: string, type: string } | { __typename?: 'Suspend', docId: string, type: string }> | null } | null> | null };

export type StageProposalsQueryVariables = Exact<{
  docId: Scalars['String'];
  first: Scalars['Int'];
  offset: Scalars['Int'];
}>;


export type StageProposalsQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', details_daoName_n: string, docId: string, stagingprop?: Array<{ __typename?: 'Alert', docId: string, type: string } | { __typename?: 'Assignbadge', details_description_s?: string | null, details_title_s?: string | null, ballot_expiration_t?: Date | null, details_state_s?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_startPeriod_i?: BigInt | null, details_assignee_n?: string | null, createdDate: Date, docId: string, type: string, badge?: Array<{ __typename?: 'Badge', details_icon_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Vote', docId: string, type: string } | { __typename?: 'Member', docId: string, type: string } | { __typename?: 'Circle', docId: string, type: string } | { __typename?: 'Budget', docId: string, type: string } | { __typename?: 'CmntSection', docId: string, type: string } | { __typename?: 'Comment', docId: string, type: string } | { __typename?: 'Reaction', docId: string, type: string } | { __typename?: 'Dao', docId: string, type: string } | { __typename?: 'Badge', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_pegCoefficientX10000_i?: BigInt | null, details_voiceCoefficientX10000_i?: BigInt | null, details_rewardCoefficientX10000_i?: BigInt | null, details_icon_s?: string | null, details_state_s?: string | null, details_maxCycles_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, system_proposer_n?: string | null, docId: string, type: string, vote?: Array<{ __typename?: 'Vote', vote_voter_n?: string | null, vote_vote_s?: string | null }> | null, votetally?: Array<{ __typename?: 'VoteTally', pass_votePower_a?: string | null, fail_votePower_a?: string | null, abstain_votePower_a?: string | null, creator: string, createdDate: Date }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'VoteTally', docId: string, type: string } | { __typename?: 'ElectnRound', docId: string, type: string } | { __typename?: 'UpvtElectn', docId: string, type: string } | { __typename?: 'DaoDraft', docId: string, type: string } | { __typename?: 'Settings', docId: string, type: string } | { __typename?: 'Period', docId: string, type: string } | { __typename?: 'Payment', docId: string, type: string } | { __typename?: 'Multisig', docId: string, type: string } | { __typename?: 'Payout', details_dao_i?: BigInt | null, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_url_s?: string | null, details_usdAmount_a?: string | null, details_deferredPercX100_i?: BigInt | null, details_pegAmount_a?: string | null, details_rewardAmount_a?: string | null, details_voiceAmount_a?: string | null, ballot_expiration_t?: Date | null, creator: string, createdDate: Date, details_owner_n?: string | null, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'PlanManager', docId: string, type: string } | { __typename?: 'BillingInfo', docId: string, type: string } | { __typename?: 'PriceOffer', docId: string, type: string } | { __typename?: 'PricingPlan', docId: string, type: string } | { __typename?: 'Questcomple', docId: string, type: string } | { __typename?: 'Queststart', docId: string, type: string } | { __typename?: 'Questcomplet', docId: string, type: string } | { __typename?: 'Role', ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_state_s?: string | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null, details_owner_n?: string | null, createdDate: Date, creator: string, docId: string, type: string, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Assignment', creator: string, createdDate: Date, ballot_expiration_t?: Date | null, details_title_s?: string | null, details_description_s?: string | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, details_state_s?: string | null, docId: string, type: string, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, role?: Array<{ __typename?: 'Role', type: string, docId: string, details_state_s?: string | null, details_title_s?: string | null, details_description_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null, details_minTimeShareX100_i?: BigInt | null }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Timeshare', docId: string, type: string } | { __typename?: 'Treasury', docId: string, type: string } | { __typename?: 'TrsyPayment', docId: string, type: string } | { __typename?: 'Attestation', docId: string, type: string } | { __typename?: 'Redemption', docId: string, type: string } | { __typename?: 'VoteGroup', docId: string, type: string } | { __typename?: 'Balance', docId: string, type: string } | { __typename?: 'Dho', docId: string, type: string } | { __typename?: 'Edit', details_dao_i?: BigInt | null, details_state_s?: string | null, creator: string, details_ballotTitle_s?: string | null, details_ballotDescription_s?: string | null, ballot_expiration_t?: Date | null, details_assignee_n?: string | null, details_periodCount_i?: BigInt | null, details_ballotQuorum_i?: BigInt | null, details_ballotSupply_a?: string | null, details_ballotAlignment_i?: BigInt | null, details_timeShareX100_i?: BigInt | null, details_deferredPercX100_i?: BigInt | null, createdDate: Date, docId: string, type: string, original?: Array<{ __typename: 'Alert' } | { __typename: 'Assignbadge', details_title_s?: string | null, details_description_s?: string | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, badge?: Array<{ __typename?: 'Badge', details_title_s?: string | null }> | null } | { __typename: 'Vote' } | { __typename: 'Member' } | { __typename: 'Circle' } | { __typename: 'Budget' } | { __typename: 'CmntSection' } | { __typename: 'Comment' } | { __typename: 'Reaction' } | { __typename: 'Dao' } | { __typename: 'Badge' } | { __typename: 'VoteTally' } | { __typename: 'ElectnRound' } | { __typename: 'UpvtElectn' } | { __typename: 'DaoDraft' } | { __typename: 'Settings' } | { __typename: 'Period' } | { __typename: 'Payment' } | { __typename: 'Multisig' } | { __typename: 'Payout' } | { __typename: 'PlanManager' } | { __typename: 'BillingInfo' } | { __typename: 'PriceOffer' } | { __typename: 'PricingPlan' } | { __typename: 'Questcomple' } | { __typename: 'Queststart' } | { __typename: 'Questcomplet' } | { __typename: 'Role' } | { __typename: 'Assignment', details_title_s?: string | null, details_description_s?: string | null, details_pegSalaryPerPeriod_a?: string | null, details_rewardSalaryPerPeriod_a?: string | null, details_voiceSalaryPerPeriod_a?: string | null, claimed?: Array<{ __typename?: 'Period', docId: string }> | null, start?: Array<{ __typename?: 'Period', details_startTime_t?: Date | null }> | null, role?: Array<{ __typename?: 'Role', details_title_s?: string | null, details_annualUsdSalary_a?: string | null, details_minDeferredX100_i?: BigInt | null }> | null } | { __typename: 'Timeshare' } | { __typename: 'Treasury' } | { __typename: 'TrsyPayment' } | { __typename: 'Attestation' } | { __typename: 'Redemption' } | { __typename: 'VoteGroup' } | { __typename: 'Balance' } | { __typename: 'Dho' } | { __typename: 'Edit' } | { __typename: 'Memo' } | { __typename: 'Policy' } | { __typename: 'Poll' } | { __typename: 'Suspend' }> | null, cmntsect?: Array<{ __typename?: 'CmntSection', docId: string, comment?: Array<{ __typename?: 'Comment', id: string, deletedStatus?: BigInt | null }> | null }> | null } | { __typename?: 'Memo', docId: string, type: string } | { __typename?: 'Policy', docId: string, type: string } | { __typename?: 'Poll', docId: string, type: string } | { __typename?: 'Suspend', docId: string, type: string }> | null } | null> | null };

export type QuestStartQueryVariables = Exact<{
  daoId: Scalars['String'];
}>;


export type QuestStartQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, queststartAggregate?: { __typename?: 'QueststartAggregateResult', count?: number | null } | null } | null };

export type BadgesTestQueryVariables = Exact<{ [key: string]: never; }>;


export type BadgesTestQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string } | null> | null };

export type DaoRedemptionsQueryVariables = Exact<{
  daoId: Scalars['String'];
  first?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  filter?: InputMaybe<RedemptionFilter>;
  order?: InputMaybe<RedemptionOrder>;
}>;


export type DaoRedemptionsQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', docId: string, treasury?: Array<{ __typename?: 'Treasury', redemption?: Array<{ __typename?: 'Redemption', docId: string, details_requestor_n?: string | null, details_amountRequested_a?: string | null, createdDate: Date, details_amountPaid_a?: string | null, paidby?: Array<{ __typename?: 'TrsyPayment', createdDate: Date, details_creator_n?: string | null, details_notes_s?: string | null }> | null }> | null, redemptionAggregate?: { __typename?: 'RedemptionAggregateResult', count?: number | null } | null, treasurerAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, treasurer?: Array<{ __typename?: 'Member', details_member_n: string }> | null }> | null } | null };

export type UpvoteElectionSubsSubscriptionVariables = Exact<{
  daoName: Scalars['String'];
}>;


export type UpvoteElectionSubsSubscription = { __typename?: 'Subscription', getDao?: { __typename?: 'Dao', voterAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, delegateAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, ongoingelct?: Array<{ __typename?: 'UpvtElectn', currentround?: Array<{ __typename?: 'ElectnRound', docId: string, details_type_s?: string | null, details_endDate_t?: Date | null, details_passingCount_i?: BigInt | null, votedAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, candidate?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', details_member_n: string, docId: string, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, candidateAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null, nextround?: Array<{ __typename?: 'ElectnRound', details_type_s?: string | null }> | null }> | null }> | null, upcomingelct?: Array<{ __typename?: 'UpvtElectn', details_startDate_t?: Date | null }> | null, previouselct?: Array<{ __typename?: 'UpvtElectn', round?: Array<{ __typename?: 'ElectnRound', details_type_s?: string | null, votedAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, winner?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', details_member_n: string } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, candidate?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null }> | null }> | null } | null };

export type UpvoteElectionQueryVariables = Exact<{
  daoName: Scalars['String'];
}>;


export type UpvoteElectionQuery = { __typename?: 'Query', getDao?: { __typename?: 'Dao', voterAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, delegateAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, ongoingelct?: Array<{ __typename?: 'UpvtElectn', currentround?: Array<{ __typename?: 'ElectnRound', docId: string, details_type_s?: string | null, details_endDate_t?: Date | null, details_passingCount_i?: BigInt | null, votedAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, candidate?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', details_member_n: string, docId: string, voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, candidateAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null, nextround?: Array<{ __typename?: 'ElectnRound', details_type_s?: string | null }> | null }> | null }> | null, upcomingelct?: Array<{ __typename?: 'UpvtElectn', details_startDate_t?: Date | null }> | null, previouselct?: Array<{ __typename?: 'UpvtElectn', round?: Array<{ __typename?: 'ElectnRound', details_type_s?: string | null, votedAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, winner?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', details_member_n: string } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null, candidate?: Array<{ __typename?: 'Alert' } | { __typename?: 'Assignbadge' } | { __typename?: 'Vote' } | { __typename?: 'Member', voteAggregate?: { __typename?: 'VoteAggregateResult', count?: number | null } | null } | { __typename?: 'Circle' } | { __typename?: 'Budget' } | { __typename?: 'CmntSection' } | { __typename?: 'Comment' } | { __typename?: 'Reaction' } | { __typename?: 'Dao' } | { __typename?: 'Badge' } | { __typename?: 'VoteTally' } | { __typename?: 'ElectnRound' } | { __typename?: 'UpvtElectn' } | { __typename?: 'DaoDraft' } | { __typename?: 'Settings' } | { __typename?: 'Period' } | { __typename?: 'Payment' } | { __typename?: 'Multisig' } | { __typename?: 'Payout' } | { __typename?: 'PlanManager' } | { __typename?: 'BillingInfo' } | { __typename?: 'PriceOffer' } | { __typename?: 'PricingPlan' } | { __typename?: 'Questcomple' } | { __typename?: 'Queststart' } | { __typename?: 'Questcomplet' } | { __typename?: 'Role' } | { __typename?: 'Assignment' } | { __typename?: 'Timeshare' } | { __typename?: 'Treasury' } | { __typename?: 'TrsyPayment' } | { __typename?: 'Attestation' } | { __typename?: 'Redemption' } | { __typename?: 'VoteGroup' } | { __typename?: 'Balance' } | { __typename?: 'Dho' } | { __typename?: 'Edit' } | { __typename?: 'Memo' } | { __typename?: 'Policy' } | { __typename?: 'Poll' } | { __typename?: 'Suspend' }> | null }> | null }> | null } | null };

export type VotedUsersSubsSubscriptionVariables = Exact<{
  account: Scalars['String'];
  roundId: Scalars['Int64'];
}>;


export type VotedUsersSubsSubscription = { __typename?: 'Subscription', getMember?: { __typename?: 'Member', docId: string, elctngroup?: Array<{ __typename?: 'VoteGroup', vote?: Array<{ __typename?: 'Member', details_member_n: string, docId: string }> | null }> | null } | null };

export type VotedUsersQueryVariables = Exact<{
  account: Scalars['String'];
  roundId: Scalars['Int64'];
}>;


export type VotedUsersQuery = { __typename?: 'Query', getMember?: { __typename?: 'Member', docId: string, elctngroup?: Array<{ __typename?: 'VoteGroup', vote?: Array<{ __typename?: 'Member', details_member_n: string, docId: string }> | null }> | null } | null };


export const ActiveDaoSubsDocument = gql`
    subscription activeDaoSubs($regexp: String!) {
  queryDao @cascade(fields: ["settings"]) {
    docId
    details_daoName_n
    announcements: alert {
      id: docId
      title: details_level_s
      message: details_content_s
      enabled: details_enabled_i
    }
    planmanager {
      bill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
      }
      currentbill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
      }
      lastbill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
      }
    }
    settings(filter: {settings_daoUrl_s: {regexp: $regexp}}) {
      settings_claimEnabled_i
      settings_daoUrl_s
      settings_daoName_n
      settings_daoTitle_s
      settings_daoDescription_s
      settings_governanceTokenContract_n
      settings_pegToken_a
      settings_pegTokenContract_n
      settings_rewardToken_a
      settings_rewardTokenContract_n
      settings_rewardToPegRatio_a
      settings_treasuryContract_n
      settings_voiceToken_a
      settings_socialChat_s
      settings_proposalsCreationEnabled_i
      settings_membersApplicationEnabled_i
      settings_removableBannersEnabled_i
      settings_votingDurationSec_i
      settings_periodDurationSec_i
      settings_votingAlignmentX100_i
      settings_votingQuorumX100_i
      settings_voiceTokenDecayPeriod_i
      settings_usesSeeds_i
      settings_isHypha_i
      settings_logo_s
      settings_extendedLogo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_textColor_s
      settings_pattern_s
      settings_patternColor_s
      settings_patternOpacity_i
      settings_patternBase64_s
      settings_splashBackgroundImage_s
      settings_dashboardBackgroundImage_s
      settings_dashboardTitle_s
      settings_dashboardParagraph_s
      settings_proposalsBackgroundImage_s
      settings_proposalsTitle_s
      settings_proposalsParagraph_s
      settings_membersBackgroundImage_s
      settings_membersTitle_s
      settings_membersParagraph_s
      settings_organisationBackgroundImage_s
      settings_organisationTitle_s
      settings_organisationParagraph_s
      settings_exploreBackgroundImage_s
      settings_exploreTitle_s
      settings_exploreParagraph_s
      settings_documentationURL_s
    }
  }
}
    `;

/**
 * __useActiveDaoSubsSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useActiveDaoSubsSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       activeDaoSubs: useActiveDaoSubsSubscription({
 *         variables: {
 *           regexp: // value for 'regexp'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useActiveDaoSubsSubscription = createSmartSubscriptionOptionsFunction<
  ActiveDaoSubsSubscription,
  ActiveDaoSubsSubscriptionVariables,
  ApolloError
>(ActiveDaoSubsDocument);

export const PlanPageDocument = gql`
    query PlanPage($daoId: String!) {
  plans: queryPricingPlan {
    id: docId
    name: details_name_s
    price: details_price_a
    maxMemberCount: details_maxMemberCount_i
    discountPerc: details_discountPercX10000_i
    eactivationPeriodSec: details_reactivationPeriodSec_i
    priceoffer {
      docId
    }
  }
  offers: queryPriceOffer {
    id: docId
    name: details_tag_s
    periodCount: details_periodCount_i
    discountPerc: details_discountPercX10000_i
  }
  getDao(docId: $daoId) {
    planmanager {
      bill {
        details_startDate_t
        details_expirationDate_t
        details_planName_s
        docId
        __typename
      }
      docId
      __typename
    }
    docId
    __typename
  }
}
    `;

/**
 * __usePlanPageQuery__
 *
 * To use a Smart Query within a Vue component, call `usePlanPageQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     planPage: usePlanPageQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const usePlanPageQuery = createSmartQueryOptionsFunction<
  PlanPageQuery,
  PlanPageQueryVariables,
  ApolloError
>(PlanPageDocument);

export const AdminDocument = gql`
    query admin($daoId: String!, $username: String!) {
  getDao(docId: $daoId) {
    docId
    admin(filter: {details_member_n: {eq: $username}}) {
      docId
    }
  }
}
    `;

/**
 * __useAdminQuery__
 *
 * To use a Smart Query within a Vue component, call `useAdminQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     admin: useAdminQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useAdminQuery = createSmartQueryOptionsFunction<
  AdminQuery,
  AdminQueryVariables,
  ApolloError
>(AdminDocument);

export const ApplicantDocument = gql`
    query applicant($daoId: String!, $username: String!) {
  getDao(docId: $daoId) {
    docId
    applicant(filter: {details_member_n: {eq: $username}}) {
      docId
    }
  }
}
    `;

/**
 * __useApplicantQuery__
 *
 * To use a Smart Query within a Vue component, call `useApplicantQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     applicant: useApplicantQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useApplicantQuery = createSmartQueryOptionsFunction<
  ApplicantQuery,
  ApplicantQueryVariables,
  ApolloError
>(ApplicantDocument);

export const EnrollerDocument = gql`
    query enroller($daoId: String!, $username: String!) {
  getDao(docId: $daoId) {
    docId
    enroller(filter: {details_member_n: {eq: $username}}) {
      docId
    }
  }
}
    `;

/**
 * __useEnrollerQuery__
 *
 * To use a Smart Query within a Vue component, call `useEnrollerQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     enroller: useEnrollerQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useEnrollerQuery = createSmartQueryOptionsFunction<
  EnrollerQuery,
  EnrollerQueryVariables,
  ApolloError
>(EnrollerDocument);

export const MemberDocument = gql`
    query member($daoId: String!, $username: String!) {
  getDao(docId: $daoId) {
    docId
    member(filter: {details_member_n: {eq: $username}}) {
      docId
    }
  }
}
    `;

/**
 * __useMemberQuery__
 *
 * To use a Smart Query within a Vue component, call `useMemberQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     member: useMemberQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useMemberQuery = createSmartQueryOptionsFunction<
  MemberQuery,
  MemberQueryVariables,
  ApolloError
>(MemberDocument);

export const DaoArchetypesDocument = gql`
    query daoArchetypes($daoId: String!, $first: Int, $offset: Int, $order: RoleOrder, $filter: RoleFilter) {
  getDao(docId: $daoId) {
    docId
    role(first: $first, offset: $offset, order: $order, filter: $filter) {
      ... on Role {
        type
        docId
        details_state_s
        details_title_s
        details_description_s
        details_annualUsdSalary_a
        details_minDeferredX100_i
        details_minTimeShareX100_i
        assignment(first: 3) {
          details_assignee_n
        }
        assignmentAggregate {
          count
        }
      }
    }
  }
}
    `;

/**
 * __useDaoArchetypesQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoArchetypesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoArchetypes: useDaoArchetypesQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoArchetypesQuery = createSmartQueryOptionsFunction<
  DaoArchetypesQuery,
  DaoArchetypesQueryVariables,
  ApolloError
>(DaoArchetypesDocument);

export const TimeshareDocument = gql`
    query timeshare($docId: Int64!) {
  queryTimeshare(filter: {details_assignment_i: {eq: $docId}}) {
    details_startDate_t
    details_timeShareX100_i
  }
}
    `;

/**
 * __useTimeshareQuery__
 *
 * To use a Smart Query within a Vue component, call `useTimeshareQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     timeshare: useTimeshareQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useTimeshareQuery = createSmartQueryOptionsFunction<
  TimeshareQuery,
  TimeshareQueryVariables,
  ApolloError
>(TimeshareDocument);

export const AssignmentsPastDocument = gql`
    query assignmentsPast($username: String!) {
  queryMember(filter: {details_member_n: {eq: $username}}) {
    details_member_n
    assigned {
      __typename
      ... on Assignment {
        details_title_s
        details_periodCount_i
        details_state_s
        role {
          ... on Role {
            details_title_s
          }
        }
      }
    }
  }
}
    `;

/**
 * __useAssignmentsPastQuery__
 *
 * To use a Smart Query within a Vue component, call `useAssignmentsPastQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     assignmentsPast: useAssignmentsPastQuery({
 *       variables: {
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useAssignmentsPastQuery = createSmartQueryOptionsFunction<
  AssignmentsPastQuery,
  AssignmentsPastQueryVariables,
  ApolloError
>(AssignmentsPastDocument);

export const ActiveAssignmentsDocument = gql`
    query activeAssignments($filter: AssignmentFilter) {
  aggregateAssignment(filter: $filter) {
    count
  }
}
    `;

/**
 * __useActiveAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useActiveAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     activeAssignments: useActiveAssignmentsQuery({
 *       variables: {
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useActiveAssignmentsQuery = createSmartQueryOptionsFunction<
  ActiveAssignmentsQuery,
  ActiveAssignmentsQueryVariables,
  ApolloError
>(ActiveAssignmentsDocument);

export const ApprovedAssignmentsDocument = gql`
    query approvedAssignments($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    passedprops(filter: {type: {eq: "Assignment"}}) {
      __typename
      ... on Assignment {
        details_voiceSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_pegSalaryPerPeriod_a
        claimedAggregate {
          count
        }
        creator
        docId
        details_title_s
        details_state_s
        details_periodCount_i
        start {
          details_startTime_t
        }
      }
    }
  }
}
    `;

/**
 * __useApprovedAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useApprovedAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     approvedAssignments: useApprovedAssignmentsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useApprovedAssignmentsQuery = createSmartQueryOptionsFunction<
  ApprovedAssignmentsQuery,
  ApprovedAssignmentsQueryVariables,
  ApolloError
>(ApprovedAssignmentsDocument);

export const DaoBadgeAssignmentsDocument = gql`
    query daoBadgeAssignments($daoName: String!, $first: Int, $offset: Int) {
  queryAssignbadge(first: $first, offset: $offset, order: {desc: createdDate}, filter: {details_state_s: {regexp: "/.*(approved|archived).*/i"}}) @cascade(fields: ["dao"]) {
    badge {
      details_icon_s
    }
    details_title_s
    details_state_s
    details_description_s
    details_periodCount_i
    start {
      details_startTime_t
      details_label_s
    }
    docId
    dao(filter: {details_daoName_n: {eq: $daoName}}) {
      details_daoName_n
    }
    ballot_expiration_t
  }
}
    `;

/**
 * __useDaoBadgeAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoBadgeAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoBadgeAssignments: useDaoBadgeAssignmentsQuery({
 *       variables: {
 *         daoName: // value for 'daoName'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoBadgeAssignmentsQuery = createSmartQueryOptionsFunction<
  DaoBadgeAssignmentsQuery,
  DaoBadgeAssignmentsQueryVariables,
  ApolloError
>(DaoBadgeAssignmentsDocument);

export const DaoAssignmentsDocument = gql`
    query daoAssignments($daoName: String!, $first: Int, $offset: Int) {
  queryAssignment(first: $first, offset: $offset, order: {desc: createdDate}, filter: {details_state_s: {regexp: "/.*(approved|archived).*/i"}}) @cascade(fields: ["dao"]) {
    details_title_s
    details_usdSalaryValuePerPhase_a
    details_state_s
    details_description_s
    details_periodCount_i
    details_timeShareX100_i
    details_ballotSupply_a
    details_ballotQuorum_i
    details_ballotAlignment_i
    start {
      details_startTime_t
      details_label_s
    }
    lastimeshare {
      details_timeShareX100_i
    }
    role {
      details_title_s
      details_state_s
      details_annualUsdSalary_a
      details_minDeferredX100_i
    }
    claimed {
      docId
    }
    details_approvedDeferredPercX100_i
    details_deferredPercX100_i
    docId
    dao(filter: {details_daoName_n: {eq: $daoName}}) {
      details_daoName_n
    }
    ballot_expiration_t
  }
}
    `;

/**
 * __useDaoAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoAssignments: useDaoAssignmentsQuery({
 *       variables: {
 *         daoName: // value for 'daoName'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoAssignmentsQuery = createSmartQueryOptionsFunction<
  DaoAssignmentsQuery,
  DaoAssignmentsQueryVariables,
  ApolloError
>(DaoAssignmentsDocument);

export const DaoBadgesOptionsDocument = gql`
    query daoBadgesOptions($daoId: String!, $first: Int, $offset: Int, $order: BadgeOrder, $filter: BadgeFilter) {
  getDao(docId: $daoId) {
    docId
    details_daoName_n
    badge(first: $first, offset: $offset, order: $order, filter: $filter) {
      docId
      __typename
      ... on Badge {
        details_icon_s
        details_state_s
        details_title_s
        details_description_s
        details_pegCoefficientX10000_i
        details_voiceCoefficientX10000_i
        details_rewardCoefficientX10000_i
      }
    }
  }
}
    `;

/**
 * __useDaoBadgesOptionsQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoBadgesOptionsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoBadgesOptions: useDaoBadgesOptionsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoBadgesOptionsQuery = createSmartQueryOptionsFunction<
  DaoBadgesOptionsQuery,
  DaoBadgesOptionsQueryVariables,
  ApolloError
>(DaoBadgesOptionsDocument);

export const ActiveBadgesDocument = gql`
    query activeBadges($daoId: String!, $filter: BadgeFilter) {
  getDao(docId: $daoId) {
    docId
    badgeAggregate(filter: $filter) {
      count
    }
  }
}
    `;

/**
 * __useActiveBadgesQuery__
 *
 * To use a Smart Query within a Vue component, call `useActiveBadgesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     activeBadges: useActiveBadgesQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useActiveBadgesQuery = createSmartQueryOptionsFunction<
  ActiveBadgesQuery,
  ActiveBadgesQueryVariables,
  ApolloError
>(ActiveBadgesDocument);

export const DaoBadgesDocument = gql`
    query daoBadges($daoId: String!, $first: Int, $offset: Int, $order: BadgeOrder, $filter: BadgeFilter) {
  getDao(docId: $daoId) {
    docId
    details_daoName_n
    badge(first: $first, offset: $offset, order: $order, filter: $filter) {
      docId
      __typename
      assignment {
        docId
        details_assignee_n
        dao {
          details_daoName_n
        }
      }
      assignmentAggregate {
        count
      }
      ... on Badge {
        details_icon_s
        details_state_s
        details_title_s
        details_description_s
      }
    }
  }
}
    `;

/**
 * __useDaoBadgesQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoBadgesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoBadges: useDaoBadgesQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoBadgesQuery = createSmartQueryOptionsFunction<
  DaoBadgesQuery,
  DaoBadgesQueryVariables,
  ApolloError
>(DaoBadgesDocument);

export const MemberBadgesDocument = gql`
    query memberBadges($daoId: String!, $username: String!) {
  getDao(docId: $daoId) @cascade(fields: ["badge"]) {
    docId
    details_daoName_n
    badge @cascade(fields: ["assignment"]) {
      docId
      __typename
      assignment(filter: {details_assignee_n: {eq: $username}, details_state_s: {regexp: "/.*approved.*/i"}}) {
        details_assignee_n
        docId
      }
      ... on Badge {
        details_icon_s
        details_state_s
        details_title_s
        details_description_s
      }
    }
  }
}
    `;

/**
 * __useMemberBadgesQuery__
 *
 * To use a Smart Query within a Vue component, call `useMemberBadgesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     memberBadges: useMemberBadgesQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useMemberBadgesQuery = createSmartQueryOptionsFunction<
  MemberBadgesQuery,
  MemberBadgesQueryVariables,
  ApolloError
>(MemberBadgesDocument);

export const CircleDetailsSubDocument = gql`
    subscription circleDetailsSub($circleId: String!) {
  queryCircle(filter: {docId: {eq: $circleId}}) {
    id: docId
    name: details_title_s
    purpose: details_description_s
    budget: details_purpose_s
    details_state_s
    applicants: applicant {
      username: details_member_n
      joinedDate: createdDate
    }
    members: member {
      username: details_member_n
      joinedDate: createdDate
    }
    parentcircle {
      id: docId
    }
    subcircle {
      id: docId
      name: details_title_s
      purpose: details_description_s
      budget: details_purpose_s
    }
  }
}
    `;

/**
 * __useCircleDetailsSubSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useCircleDetailsSubSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       circleDetailsSub: useCircleDetailsSubSubscription({
 *         variables: {
 *           circleId: // value for 'circleId'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useCircleDetailsSubSubscription = createSmartSubscriptionOptionsFunction<
  CircleDetailsSubSubscription,
  CircleDetailsSubSubscriptionVariables,
  ApolloError
>(CircleDetailsSubDocument);

export const CircleDetailsDocument = gql`
    query circleDetails($circleId: String!) {
  queryCircle(filter: {docId: {eq: $circleId}}) {
    id: docId
    name: details_title_s
    purpose: details_description_s
    budget: details_purpose_s
    details_state_s
    applicants: applicant {
      username: details_member_n
      joinedDate: createdDate
    }
    members: member {
      username: details_member_n
      joinedDate: createdDate
    }
    parentcircle {
      id: docId
    }
    subcircles: subcircle {
      id: docId
      name: details_title_s
      purpose: details_description_s
      budget: details_purpose_s
    }
  }
}
    `;

/**
 * __useCircleDetailsQuery__
 *
 * To use a Smart Query within a Vue component, call `useCircleDetailsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     circleDetails: useCircleDetailsQuery({
 *       variables: {
 *         circleId: // value for 'circleId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useCircleDetailsQuery = createSmartQueryOptionsFunction<
  CircleDetailsQuery,
  CircleDetailsQueryVariables,
  ApolloError
>(CircleDetailsDocument);

export const DaoCirclesDocument = gql`
    query daoCircles($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    details_daoName_n
    circle {
      id: docId
      name: details_title_s
      purpose: details_description_s
      budget: details_purpose_s
      applicant {
        username: details_member_n
      }
      members: member {
        username: details_member_n
      }
      subcircles: subcircle {
        id: docId
        name: details_title_s
        purpose: details_description_s
        budget: details_purpose_s
      }
    }
  }
}
    `;

/**
 * __useDaoCirclesQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoCirclesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoCircles: useDaoCirclesQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoCirclesQuery = createSmartQueryOptionsFunction<
  DaoCirclesQuery,
  DaoCirclesQueryVariables,
  ApolloError
>(DaoCirclesDocument);

export const ActiveDaoDocument = gql`
    query activeDao($regexp: String!) {
  queryDao @cascade(fields: ["settings"]) {
    docId
    details_daoName_n
    details_daoType_s
    details_isWaitingEcosystem_i
    createdDate
    upcomingelct {
      docId
    }
    announcements: alert {
      id: docId
      title: details_level_s
      message: details_content_s
      enabled: details_enabled_i
    }
    planmanager {
      bill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
        pricingplan {
          maxMemberCount: details_maxMemberCount_i
        }
      }
      currentbill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
        pricingplan {
          maxMemberCount: details_maxMemberCount_i
        }
      }
      lastbill {
        id: docId
        startDate: details_startDate_t
        endDate: details_endDate_t
        expirationDate: details_expirationDate_t
        periodCount: details_periodCount_i
        name: details_planName_s
        price: details_planPrice_a
        isInfinite: details_isInfinite_i
        discountPercX10000: details_discountPercX10000_i
        pricingplan {
          maxMemberCount: details_maxMemberCount_i
        }
      }
    }
    multisigs: openmultisig {
      approvedby {
        docId
        details_member_n
      }
      id: docId
      type
      details_dao_i
      url: settings_daoUrl_s
      title: settings_daoTitle_s
      proposalsCreationEnabled: settings_proposalsCreationEnabled_i
      membersApplicationEnabled: settings_membersApplicationEnabled_i
      removableBannersEnabled: settings_removableBannersEnabled_i
      votingAlignmentPercent: settings_votingAlignmentX100_i
      votingQuorumPercent: settings_votingQuorumX100_i
    }
    settings(filter: {settings_daoUrl_s: {regexp: $regexp}}) {
      ecosystem_name_s
      ecosystem_logo_s
      ecosystem_domain_s
      ecosystem_purpose_s
      settings_onboarderAccount_n
      settings_claimEnabled_i
      settings_daoUrl_s
      settings_daoName_n
      settings_daoTitle_s
      settings_daoDescription_s
      settings_governanceTokenContract_n
      settings_pegToken_a
      settings_pegTokenContract_n
      settings_rewardToken_a
      settings_rewardTokenContract_n
      settings_rewardToPegRatio_a
      settings_treasuryContract_n
      settings_voiceToken_a
      settings_socialChat_s
      settings_documentationButtonText_s
      settings_proposalsCreationEnabled_i
      settings_membersApplicationEnabled_i
      settings_removableBannersEnabled_i
      settings_votingDurationSec_i
      settings_periodDurationSec_i
      settings_votingAlignmentX100_i
      settings_votingQuorumX100_i
      settings_voiceTokenDecayPeriod_i
      settings_communityVotingEnabled_i
      settings_communityVotingMethod_s
      settings_upvoteStartDateTime_s
      settings_upvoteDuration_i
      settings_upvoteRounds_s
      settings_upvoteCheifDelegateCount_i
      settings_upvoteCheifDelegateDuration_i
      settings_upvoteHeadDelegateRound_i
      settings_upvoteHeadDelegateDuration_i
      settings_communityVotingDurationSec_i
      settings_communityVotingAlignmentPercent_i
      settings_communityVotingQuorumPercent_i
      settings_usesSeeds_i
      settings_isHypha_i
      settings_logo_s
      settings_extendedLogo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_textColor_s
      settings_pattern_s
      settings_patternColor_s
      settings_patternOpacity_i
      settings_patternBase64_s
      settings_splashBackgroundImage_s
      settings_dashboardBackgroundImage_s
      settings_dashboardTitle_s
      settings_dashboardParagraph_s
      settings_proposalsBackgroundImage_s
      settings_proposalsTitle_s
      settings_proposalsParagraph_s
      settings_membersBackgroundImage_s
      settings_membersTitle_s
      settings_membersParagraph_s
      settings_organisationBackgroundImage_s
      settings_organisationTitle_s
      settings_organisationParagraph_s
      settings_exploreBackgroundImage_s
      settings_exploreTitle_s
      settings_exploreParagraph_s
      settings_documentationURL_s
    }
    memberAggregate {
      count
    }
  }
}
    `;

/**
 * __useActiveDaoQuery__
 *
 * To use a Smart Query within a Vue component, call `useActiveDaoQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     activeDao: useActiveDaoQuery({
 *       variables: {
 *         regexp: // value for 'regexp'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useActiveDaoQuery = createSmartQueryOptionsFunction<
  ActiveDaoQuery,
  ActiveDaoQueryVariables,
  ApolloError
>(ActiveDaoDocument);

export const ActiveDaoCreatedDocument = gql`
    query activeDaoCreated($regexp: String!) {
  queryDao @cascade(fields: ["settings"]) {
    docId
    details_daoName_n
    settings(filter: {settings_daoUrl_s: {regexp: $regexp}}) {
      settings_claimEnabled_i
      settings_daoUrl_s
      settings_daoName_n
      settings_daoTitle_s
      settings_daoDescription_s
      settings_governanceTokenContract_n
      settings_pegToken_a
      settings_pegTokenContract_n
      settings_rewardToken_a
      settings_rewardTokenContract_n
      settings_rewardToPegRatio_a
      settings_treasuryContract_n
      settings_voiceToken_a
      settings_socialChat_s
      settings_proposalsCreationEnabled_i
      settings_membersApplicationEnabled_i
      settings_removableBannersEnabled_i
      settings_votingDurationSec_i
      settings_periodDurationSec_i
      settings_votingAlignmentX100_i
      settings_votingQuorumX100_i
      settings_voiceTokenDecayPeriod_i
      settings_usesSeeds_i
      settings_isHypha_i
      settings_logo_s
      settings_extendedLogo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_textColor_s
      settings_pattern_s
      settings_patternColor_s
      settings_patternOpacity_i
      settings_patternBase64_s
      settings_splashBackgroundImage_s
      settings_dashboardBackgroundImage_s
      settings_dashboardTitle_s
      settings_dashboardParagraph_s
      settings_proposalsBackgroundImage_s
      settings_proposalsTitle_s
      settings_proposalsParagraph_s
      settings_membersBackgroundImage_s
      settings_membersTitle_s
      settings_membersParagraph_s
      settings_organisationBackgroundImage_s
      settings_organisationTitle_s
      settings_organisationParagraph_s
      settings_exploreBackgroundImage_s
      settings_exploreTitle_s
      settings_exploreParagraph_s
      settings_documentationURL_s
    }
    memberAggregate {
      count
    }
  }
}
    `;

/**
 * __useActiveDaoCreatedQuery__
 *
 * To use a Smart Query within a Vue component, call `useActiveDaoCreatedQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     activeDaoCreated: useActiveDaoCreatedQuery({
 *       variables: {
 *         regexp: // value for 'regexp'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useActiveDaoCreatedQuery = createSmartQueryOptionsFunction<
  ActiveDaoCreatedQuery,
  ActiveDaoCreatedQueryVariables,
  ApolloError
>(ActiveDaoCreatedDocument);

export const DaoDraftDocument = gql`
    query daoDraft($daoName: String!) {
  queryDaoDraft(filter: {details_daoName_n: {eq: $daoName}}) {
    docId
    details_daoName_n
    settings {
      settings_claimEnabled_i
      settings_daoUrl_s
      settings_daoName_n
      settings_daoTitle_s
      settings_daoDescription_s
      settings_governanceTokenContract_n
      settings_pegToken_a
      settings_pegTokenContract_n
      settings_rewardToken_a
      settings_rewardTokenContract_n
      settings_rewardToPegRatio_a
      settings_treasuryContract_n
      settings_voiceToken_a
      settings_socialChat_s
      settings_proposalsCreationEnabled_i
      settings_membersApplicationEnabled_i
      settings_removableBannersEnabled_i
      settings_votingDurationSec_i
      settings_periodDurationSec_i
      settings_votingAlignmentX100_i
      settings_votingQuorumX100_i
      settings_voiceTokenDecayPeriod_i
      settings_usesSeeds_i
      settings_isHypha_i
      settings_logo_s
      settings_extendedLogo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_textColor_s
      settings_pattern_s
      settings_patternColor_s
      settings_patternOpacity_i
      settings_patternBase64_s
      settings_splashBackgroundImage_s
      settings_dashboardBackgroundImage_s
      settings_dashboardTitle_s
      settings_dashboardParagraph_s
      settings_proposalsBackgroundImage_s
      settings_proposalsTitle_s
      settings_proposalsParagraph_s
      settings_membersBackgroundImage_s
      settings_membersTitle_s
      settings_membersParagraph_s
      settings_organisationBackgroundImage_s
      settings_organisationTitle_s
      settings_organisationParagraph_s
      settings_exploreBackgroundImage_s
      settings_exploreTitle_s
      settings_exploreParagraph_s
      settings_documentationURL_s
    }
  }
}
    `;

/**
 * __useDaoDraftQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoDraftQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoDraft: useDaoDraftQuery({
 *       variables: {
 *         daoName: // value for 'daoName'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoDraftQuery = createSmartQueryOptionsFunction<
  DaoDraftQuery,
  DaoDraftQueryVariables,
  ApolloError
>(DaoDraftDocument);

export const DaoListAscDocument = gql`
    query daoListAsc($filter: DaoFilter, $first: Int!, $offset: Int!) {
  queryDao(order: {asc: details_daoName_n}, filter: $filter, first: $first, offset: $offset) {
    docId
    details_daoName_n
    createdDate
    memberAggregate {
      count
    }
    settings {
      settings_daoDescription_s
      settings_daoTitle_s
      settings_daoName_n
    }
    proposalAggregate {
      count
    }
  }
}
    `;

/**
 * __useDaoListAscQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoListAscQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoListAsc: useDaoListAscQuery({
 *       variables: {
 *         filter: // value for 'filter'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoListAscQuery = createSmartQueryOptionsFunction<
  DaoListAscQuery,
  DaoListAscQueryVariables,
  ApolloError
>(DaoListAscDocument);

export const DaoListInfoDocument = gql`
    query daoListInfo($filter: DaoFilter, $first: Int!, $offset: Int!, $order: DaoOrder) {
  queryDao(order: $order, filter: $filter, first: $first, offset: $offset) {
    docId
    details_daoName_n
    admin {
      details_member_n
    }
    settings {
      settings_daoDescription_s
      settings_votingDurationSec_i
      settings_periodDurationSec_i
    }
  }
}
    `;

/**
 * __useDaoListInfoQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoListInfoQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoListInfo: useDaoListInfoQuery({
 *       variables: {
 *         filter: // value for 'filter'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoListInfoQuery = createSmartQueryOptionsFunction<
  DaoListInfoQuery,
  DaoListInfoQueryVariables,
  ApolloError
>(DaoListInfoDocument);

export const DaoListRecentDocument = gql`
    query daoListRecent($filter: DaoFilter, $first: Int!, $offset: Int!) {
  queryDao(order: {desc: createdDate}, filter: $filter, first: $first, offset: $offset) {
    docId
    details_daoName_n
    createdDate
    memberAggregate {
      count
    }
    settings {
      settings_daoDescription_s
      settings_daoTitle_s
      settings_daoName_n
      settings_logo_s
      settings_primaryColor_s
      settings_secondaryColor_s
    }
    proposalAggregate {
      count
    }
  }
}
    `;

/**
 * __useDaoListRecentQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoListRecentQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoListRecent: useDaoListRecentQuery({
 *       variables: {
 *         filter: // value for 'filter'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoListRecentQuery = createSmartQueryOptionsFunction<
  DaoListRecentQuery,
  DaoListRecentQueryVariables,
  ApolloError
>(DaoListRecentDocument);

export const DaoListDocument = gql`
    query daoList($order: DaoOrder, $filter: DaoFilter, $first: Int!, $offset: Int!) {
  queryDao(order: $order, filter: $filter, first: $first, offset: $offset) {
    docId
    details_daoName_n
    createdDate
    settings {
      settings_daoDescription_s
      settings_daoTitle_s
      settings_daoName_n
      settings_logo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_daoUrl_s
    }
    memberAggregate {
      count
    }
    proposalAggregate {
      count
    }
  }
}
    `;

/**
 * __useDaoListQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoListQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoList: useDaoListQuery({
 *       variables: {
 *         order: // value for 'order'
 *         filter: // value for 'filter'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoListQuery = createSmartQueryOptionsFunction<
  DaoListQuery,
  DaoListQueryVariables,
  ApolloError
>(DaoListDocument);

export const AlertsDocument = gql`
    query alerts {
  queryDho {
    alert {
      id: docId
      content: details_content_s
      enabled: details_enabled_i
      level: details_level_s
    }
  }
}
    `;

/**
 * __useAlertsQuery__
 *
 * To use a Smart Query within a Vue component, call `useAlertsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     alerts: useAlertsQuery({
 *       variables: {},
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useAlertsQuery = createSmartQueryOptionsFunction<
  AlertsQuery,
  AlertsQueryVariables,
  ApolloError
>(AlertsDocument);

export const EcosystemChildrenDocument = gql`
    query ecosystemChildren($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    anchorchild {
      docId
      details_daoName_n
      createdDate
      settings {
        settings_daoDescription_s
        settings_daoTitle_s
        settings_daoName_n
        settings_logo_s
        settings_primaryColor_s
        settings_secondaryColor_s
        settings_daoUrl_s
        settings_onboarderAccount_n
      }
    }
    childdraft {
      docId
      details_daoName_n
      createdDate
      settings {
        settings_daoDescription_s
        settings_daoTitle_s
        settings_daoName_n
        settings_logo_s
        settings_primaryColor_s
        settings_secondaryColor_s
        settings_daoUrl_s
        settings_onboarderAccount_n
      }
    }
  }
}
    `;

/**
 * __useEcosystemChildrenQuery__
 *
 * To use a Smart Query within a Vue component, call `useEcosystemChildrenQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     ecosystemChildren: useEcosystemChildrenQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useEcosystemChildrenQuery = createSmartQueryOptionsFunction<
  EcosystemChildrenQuery,
  EcosystemChildrenQueryVariables,
  ApolloError
>(EcosystemChildrenDocument);

export const ActiveEcosystemDocument = gql`
    query activeEcosystem($daoId: String!) {
  queryDao(filter: {docId: {eq: $daoId}}) {
    docId
    details_daoName_n
    details_daoType_s
    details_isWaitingEcosystem_i
    settings {
      ecosystem_name_s
      ecosystem_logo_s
      ecosystem_domain_s
      ecosystem_purpose_s
    }
  }
}
    `;

/**
 * __useActiveEcosystemQuery__
 *
 * To use a Smart Query within a Vue component, call `useActiveEcosystemQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     activeEcosystem: useActiveEcosystemQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useActiveEcosystemQuery = createSmartQueryOptionsFunction<
  ActiveEcosystemQuery,
  ActiveEcosystemQueryVariables,
  ApolloError
>(ActiveEcosystemDocument);

export const EcosystemsListDocument = gql`
    query ecosystemsList {
  queryDao(filter: {and: {details_daoType_s: {regexp: "/anchor/"}, details_isWaitingEcosystem_i: {eq: 0}}}) {
    createdDate
    settings {
      ecosystem_name_s
      ecosystem_purpose_s
      ecosystem_logo_s
      ecosystem_domain_s
    }
    anchorchildAggregate {
      count
    }
    memberAggregate {
      count
    }
    commemberAggregate {
      count
    }
  }
}
    `;

/**
 * __useEcosystemsListQuery__
 *
 * To use a Smart Query within a Vue component, call `useEcosystemsListQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     ecosystemsList: useEcosystemsListQuery({
 *       variables: {},
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useEcosystemsListQuery = createSmartQueryOptionsFunction<
  EcosystemsListQuery,
  EcosystemsListQueryVariables,
  ApolloError
>(EcosystemsListDocument);

export const DhoDocument = gql`
    query dho {
  queryDho {
    settings {
      settings_pegToken_a
      settings_pegTokenContract_n
      settings_rewardTokenContract_n
      settings_governanceTokenContract_n
      settings_voiceToken_a
      settings_logo_s
      contract
      ecosystemPrice: settings_ecosystemPrice_a
      ecosystemPriceStaked: settings_ecosystemPriceStaked_a
      ecosystemChildPrice: settings_ecosystemChildPrice_a
      ecosystemChildPriceStaked: settings_ecosystemChildPriceStaked_a
    }
  }
}
    `;

/**
 * __useDhoQuery__
 *
 * To use a Smart Query within a Vue component, call `useDhoQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     dho: useDhoQuery({
 *       variables: {},
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDhoQuery = createSmartQueryOptionsFunction<
  DhoQuery,
  DhoQueryVariables,
  ApolloError
>(DhoDocument);

export const ApplicantPaginationDocument = gql`
    query applicantPagination($daoId: String!, $first: Int, $offset: Int, $filter: MemberFilter, $order: MemberOrder) {
  getDao(docId: $daoId) {
    docId
    applicant(first: $first, offset: $offset, filter: $filter, order: $order) {
      docId
      __typename
      ... on Member {
        details_member_n
        createdDate
      }
    }
  }
}
    `;

/**
 * __useApplicantPaginationQuery__
 *
 * To use a Smart Query within a Vue component, call `useApplicantPaginationQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     applicantPagination: useApplicantPaginationQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         filter: // value for 'filter'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useApplicantPaginationQuery = createSmartQueryOptionsFunction<
  ApplicantPaginationQuery,
  ApplicantPaginationQueryVariables,
  ApolloError
>(ApplicantPaginationDocument);

export const GetActiveAssignmentsDocument = gql`
    query getActiveAssignments($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    role @cascade(fields: ["assignment"]) {
      docId
      assignment(filter: {details_state_s: {regexp: "/.*approved.*/i"}}) {
        docId
        creator
      }
    }
    badge @cascade(fields: ["assignment"]) {
      docId
      assignment(filter: {details_state_s: {regexp: "/.*approved.*/i"}}) {
        docId
        creator
      }
    }
  }
}
    `;

/**
 * __useGetActiveAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useGetActiveAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     getActiveAssignments: useGetActiveAssignmentsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useGetActiveAssignmentsQuery = createSmartQueryOptionsFunction<
  GetActiveAssignmentsQuery,
  GetActiveAssignmentsQueryVariables,
  ApolloError
>(GetActiveAssignmentsDocument);

export const CountMembersDocument = gql`
    query countMembers($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    memberAggregate {
      count
    }
  }
}
    `;

/**
 * __useCountMembersQuery__
 *
 * To use a Smart Query within a Vue component, call `useCountMembersQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     countMembers: useCountMembersQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useCountMembersQuery = createSmartQueryOptionsFunction<
  CountMembersQuery,
  CountMembersQueryVariables,
  ApolloError
>(CountMembersDocument);

export const MembersDocument = gql`
    query members($daoId: String!, $first: Int) {
  getDao(docId: $daoId) {
    docId
    member(first: $first, order: {desc: createdDate}) {
      docId
      __typename
      ... on Member {
        details_member_n
        createdDate
      }
    }
  }
}
    `;

/**
 * __useMembersQuery__
 *
 * To use a Smart Query within a Vue component, call `useMembersQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     members: useMembersQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useMembersQuery = createSmartQueryOptionsFunction<
  MembersQuery,
  MembersQueryVariables,
  ApolloError
>(MembersDocument);

export const ComunityMembersPaginationDocument = gql`
    query comunityMembersPagination($daoId: String!, $first: Int, $offset: Int, $filter: MemberFilter, $order: MemberOrder) {
  getDao(docId: $daoId) {
    docId
    commember(first: $first, offset: $offset, filter: $filter, order: $order) {
      docId
      __typename
      ... on Member {
        details_member_n
        createdDate
      }
    }
  }
}
    `;

/**
 * __useComunityMembersPaginationQuery__
 *
 * To use a Smart Query within a Vue component, call `useComunityMembersPaginationQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     comunityMembersPagination: useComunityMembersPaginationQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         filter: // value for 'filter'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useComunityMembersPaginationQuery = createSmartQueryOptionsFunction<
  ComunityMembersPaginationQuery,
  ComunityMembersPaginationQueryVariables,
  ApolloError
>(ComunityMembersPaginationDocument);

export const CoreMembersPaginationDocument = gql`
    query coreMembersPagination($daoId: String!, $first: Int, $offset: Int, $filter: MemberFilter, $order: MemberOrder) {
  getDao(docId: $daoId) {
    docId
    member(first: $first, offset: $offset, filter: $filter, order: $order) {
      docId
      __typename
      ... on Member {
        details_member_n
        createdDate
      }
    }
  }
}
    `;

/**
 * __useCoreMembersPaginationQuery__
 *
 * To use a Smart Query within a Vue component, call `useCoreMembersPaginationQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     coreMembersPagination: useCoreMembersPaginationQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         filter: // value for 'filter'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useCoreMembersPaginationQuery = createSmartQueryOptionsFunction<
  CoreMembersPaginationQuery,
  CoreMembersPaginationQueryVariables,
  ApolloError
>(CoreMembersPaginationDocument);

export const PaymentCountDocument = gql`
    query PaymentCount($user: String!) {
  aggregatePayment(filter: {details_recipient_n: {eq: $user}}) {
    count
  }
}
    `;

/**
 * __usePaymentCountQuery__
 *
 * To use a Smart Query within a Vue component, call `usePaymentCountQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     paymentCount: usePaymentCountQuery({
 *       variables: {
 *         user: // value for 'user'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const usePaymentCountQuery = createSmartQueryOptionsFunction<
  PaymentCountQuery,
  PaymentCountQueryVariables,
  ApolloError
>(PaymentCountDocument);

export const PaymentsDocument = gql`
    query Payments($filter: PaymentFilter, $first: Int!, $offset: Int!, $order: PaymentOrder) {
  queryPayment(order: $order, filter: $filter, first: $first, offset: $offset) {
    createdDate
    amount: details_amount_a
    memo: details_memo_s
    hash: details_payoutHash_c
  }
}
    `;

/**
 * __usePaymentsQuery__
 *
 * To use a Smart Query within a Vue component, call `usePaymentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     payments: usePaymentsQuery({
 *       variables: {
 *         filter: // value for 'filter'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const usePaymentsQuery = createSmartQueryOptionsFunction<
  PaymentsQuery,
  PaymentsQueryVariables,
  ApolloError
>(PaymentsDocument);

export const DaoPayoutsDocument = gql`
    query daoPayouts($daoId: String!, $first: Int, $offset: Int, $order: PayoutOrder, $filter: PayoutFilter) {
  getDao(docId: $daoId) {
    docId
    details_daoName_n
    payout(first: $first, offset: $offset, order: $order, filter: $filter) {
      docId
      paymentAggregate {
        count
      }
      payment(first: 3) {
        details_amount_a
      }
      ... on Payout {
        details_title_s
        details_description_s
      }
    }
  }
}
    `;

/**
 * __useDaoPayoutsQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoPayoutsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoPayouts: useDaoPayoutsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         order: // value for 'order'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoPayoutsQuery = createSmartQueryOptionsFunction<
  DaoPayoutsQuery,
  DaoPayoutsQueryVariables,
  ApolloError
>(DaoPayoutsDocument);

export const RecentPayoutsDocument = gql`
    query recentPayouts($daoId: String!, $filter: PayoutFilter) {
  getDao(docId: $daoId) {
    docId
    payoutAggregate(filter: $filter) {
      count
    }
  }
}
    `;

/**
 * __useRecentPayoutsQuery__
 *
 * To use a Smart Query within a Vue component, call `useRecentPayoutsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     recentPayouts: useRecentPayoutsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         filter: // value for 'filter'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useRecentPayoutsQuery = createSmartQueryOptionsFunction<
  RecentPayoutsQuery,
  RecentPayoutsQueryVariables,
  ApolloError
>(RecentPayoutsDocument);

export const PeriodsUpcomingDocument = gql`
    query periodsUpcoming($daoId: String, $after: DateTime!) {
  getDao(docId: $daoId) {
    details_daoName_n
    period(filter: {details_startTime_t: {ge: $after}}) {
      docId
      details_label_s
      details_startTime_t
    }
  }
}
    `;

/**
 * __usePeriodsUpcomingQuery__
 *
 * To use a Smart Query within a Vue component, call `usePeriodsUpcomingQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     periodsUpcoming: usePeriodsUpcomingQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         after: // value for 'after'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const usePeriodsUpcomingQuery = createSmartQueryOptionsFunction<
  PeriodsUpcomingQuery,
  PeriodsUpcomingQueryVariables,
  ApolloError
>(PeriodsUpcomingDocument);

export const PeriodsRangeDocument = gql`
    query periodsRange($daoId: String!, $start: DateTime!, $count: Int!) {
  getDao(docId: $daoId) {
    docId
    period(filter: {details_startTime_t: {ge: $start}}, first: $count) {
      details_label_s
      details_startTime_t
      docId
      next {
        end: details_startTime_t
      }
    }
  }
}
    `;

/**
 * __usePeriodsRangeQuery__
 *
 * To use a Smart Query within a Vue component, call `usePeriodsRangeQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     periodsRange: usePeriodsRangeQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         start: // value for 'start'
 *         count: // value for 'count'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const usePeriodsRangeQuery = createSmartQueryOptionsFunction<
  PeriodsRangeQuery,
  PeriodsRangeQueryVariables,
  ApolloError
>(PeriodsRangeDocument);

export const QueryActivityAssignmentsDocument = gql`
    query queryActivityAssignments($username: String!, $daoId: String!, $first: Int, $offset: Int) {
  getDao(docId: $daoId) {
    docId
    __typename
    votable(filter: {type: {in: ["Assignment", "Assignbadge"]}, creator: {eq: $username}}, first: $first, offset: $offset, order: {desc: createdDate}) {
      __typename
      ... on Assignment {
        type
        docId
        details_title_s
        details_usdSalaryValuePerPhase_a
        details_state_s
        details_description_s
        details_periodCount_i
        details_timeShareX100_i
        details_ballotSupply_a
        details_ballotQuorum_i
        details_ballotAlignment_i
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        start {
          details_startTime_t
          details_label_s
        }
        lastimeshare {
          details_timeShareX100_i
        }
        role {
          docId
          details_title_s
          details_description_s
          details_state_s
          details_annualUsdSalary_a
          details_minDeferredX100_i
          details_minTimeShareX100_i
        }
        claimed {
          docId
        }
        details_approvedDeferredPercX100_i
        details_deferredPercX100_i
        docId
        dao(filter: {details_daoName_n: {eq: $daoId}}) {
          details_daoName_n
        }
      }
      ... on Assignbadge {
        type
        docId
        details_title_s
        details_description_s
        details_state_s
        details_badge_i
        creator
        createdDate
        details_periodCount_i
        details_ballotAlignment_i
        badge {
          docId
          details_title_s
          details_description_s
          details_state_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
        }
        start {
          details_startTime_t
        }
        dao(filter: {details_daoName_n: {eq: $daoId}}) {
          details_daoName_n
        }
      }
      ... on Votable {
        ballot_expiration_t
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
        pass: voteAggregate(filter: {vote_vote_s: {regexp: "/.*pass*./"}}) {
          count
        }
        abstain: voteAggregate(filter: {vote_vote_s: {regexp: "/.*abstain*./"}}) {
          count
        }
        fail: voteAggregate(filter: {vote_vote_s: {regexp: "/.*fail*./"}}) {
          count
        }
      }
    }
  }
}
    `;

/**
 * __useQueryActivityAssignmentsQuery__
 *
 * To use a Smart Query within a Vue component, call `useQueryActivityAssignmentsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     queryActivityAssignments: useQueryActivityAssignmentsQuery({
 *       variables: {
 *         username: // value for 'username'
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useQueryActivityAssignmentsQuery = createSmartQueryOptionsFunction<
  QueryActivityAssignmentsQuery,
  QueryActivityAssignmentsQueryVariables,
  ApolloError
>(QueryActivityAssignmentsDocument);

export const GetMemberBasicInfoDocument = gql`
    query getMemberBasicInfo($username: String!) {
  getMember(details_member_n: $username) {
    docId
    __typename
    details_member_n
    createdDate
  }
}
    `;

/**
 * __useGetMemberBasicInfoQuery__
 *
 * To use a Smart Query within a Vue component, call `useGetMemberBasicInfoQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     getMemberBasicInfo: useGetMemberBasicInfoQuery({
 *       variables: {
 *         username: // value for 'username'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useGetMemberBasicInfoQuery = createSmartQueryOptionsFunction<
  GetMemberBasicInfoQuery,
  GetMemberBasicInfoQueryVariables,
  ApolloError
>(GetMemberBasicInfoDocument);

export const QueryActivityContributionsDocument = gql`
    query queryActivityContributions($username: String!, $daoId: String!, $first: Int, $offset: Int) {
  queryPayout(filter: {details_recipient_n: {eq: $username}}, first: $first, offset: $offset, order: {desc: createdDate}) @cascade(fields: ["dao"]) {
    docId
    details_title_s
    details_description_s
    details_state_s
    details_url_s
    details_recipient_n
    creator
    createdDate
    details_voiceAmount_a
    details_rewardAmount_a
    dao(filter: {docId: {eq: $daoId}}) {
      details_daoName_n
    }
    votetally {
      ... on VoteTally {
        pass_votePower_a
        fail_votePower_a
        abstain_votePower_a
        creator
        createdDate
      }
    }
    ballot_expiration_t
    details_pegAmount_a
    details_ballotSupply_a
    details_ballotQuorum_i
    details_ballotAlignment_i
    pass: voteAggregate(filter: {vote_vote_s: {regexp: "/.*pass*./"}}) {
      count
    }
    abstain: voteAggregate(filter: {vote_vote_s: {regexp: "/.*abstain*./"}}) {
      count
    }
    fail: voteAggregate(filter: {vote_vote_s: {regexp: "/.*fail*./"}}) {
      count
    }
  }
}
    `;

/**
 * __useQueryActivityContributionsQuery__
 *
 * To use a Smart Query within a Vue component, call `useQueryActivityContributionsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     queryActivityContributions: useQueryActivityContributionsQuery({
 *       variables: {
 *         username: // value for 'username'
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useQueryActivityContributionsQuery = createSmartQueryOptionsFunction<
  QueryActivityContributionsQuery,
  QueryActivityContributionsQueryVariables,
  ApolloError
>(QueryActivityContributionsDocument);

export const ProfileDhosDocument = gql`
    query profileDhos($username: String!, $first: Int, $offset: Int) {
  getMember(details_member_n: $username) {
    docId
    __typename
    createdDate
    details_member_n
    memberofAggregate {
      count
    }
    memberof(first: $first, offset: $offset) {
      ... on Dao {
        docId
        details_daoName_n
        settings {
          settings_daoTitle_s
          settings_isHypha_i
          settings_logo_s
          settings_daoUrl_s
        }
      }
    }
    applicantof {
      ... on Dao {
        details_daoName_n
        settings {
          settings_daoTitle_s
          settings_daoUrl_s
        }
      }
    }
  }
}
    `;

/**
 * __useProfileDhosQuery__
 *
 * To use a Smart Query within a Vue component, call `useProfileDhosQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     profileDhos: useProfileDhosQuery({
 *       variables: {
 *         username: // value for 'username'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProfileDhosQuery = createSmartQueryOptionsFunction<
  ProfileDhosQuery,
  ProfileDhosQueryVariables,
  ApolloError
>(ProfileDhosDocument);

export const GetStatsDocument = gql`
    query getStats($username: String!, $daoId: Int64!, $daoName: String) {
  getDao(docId: $daoName) {
    docId
    votableAggregate(filter: {type: {in: ["Assignment", "Assignbadge"]}, creator: {eq: $username}}) {
      count
    }
  }
  getMember(details_member_n: $username) {
    payoutAggregate(filter: {details_dao_i: {eq: $daoId}}) {
      count
    }
  }
}
    `;

/**
 * __useGetStatsQuery__
 *
 * To use a Smart Query within a Vue component, call `useGetStatsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     getStats: useGetStatsQuery({
 *       variables: {
 *         username: // value for 'username'
 *         daoId: // value for 'daoId'
 *         daoName: // value for 'daoName'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useGetStatsQuery = createSmartQueryOptionsFunction<
  GetStatsQuery,
  GetStatsQueryVariables,
  ApolloError
>(GetStatsDocument);

export const GetMemberVotesDocument = gql`
    query getMemberVotes($username: String!, $first: Int, $offset: Int) {
  getMember(details_member_n: $username) {
    docId
    __typename
    vote(first: $first, offset: $offset, order: {desc: createdDate}) {
      docId
      vote_vote_s
      vote_date_t
      voteon {
        creator
        docId
        __typename
        ... on Edit {
          details_title_s: details_ballotTitle_s
          dao {
            details_daoName_n
          }
        }
        ... on Suspend {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Payout {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Role {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Assignbadge {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Assignment {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Badge {
          details_title_s
          dao {
            details_daoName_n
          }
        }
        ... on Role {
          details_title_s
          dao {
            details_daoName_n
          }
        }
      }
    }
  }
}
    `;

/**
 * __useGetMemberVotesQuery__
 *
 * To use a Smart Query within a Vue component, call `useGetMemberVotesQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     getMemberVotes: useGetMemberVotesQuery({
 *       variables: {
 *         username: // value for 'username'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useGetMemberVotesQuery = createSmartQueryOptionsFunction<
  GetMemberVotesQuery,
  GetMemberVotesQueryVariables,
  ApolloError
>(GetMemberVotesDocument);

export const ProposalCountDocument = gql`
    query proposalCount($daoId: String!, $initDate: DateTime!, $finalDate: DateTime!) {
  getDao(docId: $daoId) {
    docId
    proposalAggregate(filter: {createdDate: {between: {min: $initDate, max: $finalDate}}}) {
      count
    }
  }
}
    `;

/**
 * __useProposalCountQuery__
 *
 * To use a Smart Query within a Vue component, call `useProposalCountQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     proposalCount: useProposalCountQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         initDate: // value for 'initDate'
 *         finalDate: // value for 'finalDate'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProposalCountQuery = createSmartQueryOptionsFunction<
  ProposalCountQuery,
  ProposalCountQueryVariables,
  ApolloError
>(ProposalCountDocument);

export const CommentDocument = gql`
    query comment($docId: String!) {
  getComment(docId: $docId) {
    __typename
    id: docId
    author: comment_author_n
    content: comment_content_s
    createdDate
    deletedStatus: comment_deleted_i
    reactions: reaction {
      reactionlnkrAggregate {
        count
      }
      reactionlnkr {
        author: details_member_n
      }
    }
    commentAggregate {
      count
    }
    replies: comment {
      id: docId
      author: comment_author_n
      content: comment_content_s
      createdDate
      deletedStatus: comment_deleted_i
      reactions: reaction {
        reactionlnkrAggregate {
          count
        }
        reactionlnkr {
          author: details_member_n
        }
      }
      commentAggregate {
        count
      }
    }
  }
}
    `;

/**
 * __useCommentQuery__
 *
 * To use a Smart Query within a Vue component, call `useCommentQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     comment: useCommentQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useCommentQuery = createSmartQueryOptionsFunction<
  CommentQuery,
  CommentQueryVariables,
  ApolloError
>(CommentDocument);

export const ProposalDocument = gql`
    subscription proposal($docId: String!) {
  getDocument(docId: $docId) {
    __typename
    docId
    creator
    createdDate
    ... on Payout {
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Edit {
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Assignment {
      details_usdSalaryValuePerPhase_a
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Assignbadge {
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Role {
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
  }
}
    `;

/**
 * __useProposalSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useProposalSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       proposal: useProposalSubscription({
 *         variables: {
 *           docId: // value for 'docId'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useProposalSubscription = createSmartSubscriptionOptionsFunction<
  ProposalSubscription,
  ProposalSubscriptionVariables,
  ApolloError
>(ProposalDocument);

export const ProposalDetailDocument = gql`
    query proposalDetail($docId: String!, $first: Int!, $offset: Int!) {
  getDocument(docId: $docId) {
    __typename
    docId
    creator
    createdDate
    ... on Payout {
      ballot_expiration_t
      details_title_s
      details_description_s
      details_url_s
      details_usdAmount_a
      details_deferredPercX100_i
      details_pegAmount_a
      details_rewardAmount_a
      details_voiceAmount_a
      details_state_s
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      details_isCustom_i
      details_owner_n
      dao {
        details_daoName_n
      }
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Edit {
      ballot_expiration_t
      details_ballotTitle_s
      details_ballotDescription_s
      details_periodCount_i
      details_state_s
      dao {
        details_daoName_n
      }
      original {
        __typename
        ... on Assignment {
          details_usdSalaryValuePerPhase_a
          details_ballotQuorum_i
          details_ballotSupply_a
          details_ballotAlignment_i
          details_title_s
          details_description_s
          details_assignee_n
          details_url_s
          details_periodCount_i
          start {
            details_startTime_t
          }
          details_pegSalaryPerPeriod_a
          details_rewardSalaryPerPeriod_a
          details_voiceSalaryPerPeriod_a
          details_timeShareX100_i
          details_deferredPercX100_i
          details_approvedDeferredPercX100_i
          lastimeshare {
            details_timeShareX100_i
          }
          details_state_s
          role {
            ... on Role {
              details_title_s
              details_annualUsdSalary_a
            }
          }
        }
        ... on Assignbadge {
          details_ballotQuorum_i
          details_ballotSupply_a
          details_ballotAlignment_i
          details_title_s
          details_description_s
          details_assignee_n
          details_periodCount_i
          details_state_s
          start {
            details_startTime_t
          }
          badge {
            details_title_s
            details_icon_s
            details_pegCoefficientX10000_i
            details_voiceCoefficientX10000_i
            details_rewardCoefficientX10000_i
          }
        }
      }
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Assignment {
      details_usdSalaryValuePerPhase_a
      ballot_expiration_t
      details_assignee_n
      details_title_s
      details_description_s
      details_periodCount_i
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      dao {
        details_daoName_n
      }
      start {
        docId
        details_label_s
        details_startTime_t
      }
      claimed {
        docId
      }
      details_pegSalaryPerPeriod_a
      details_rewardSalaryPerPeriod_a
      details_voiceSalaryPerPeriod_a
      details_timeShareX100_i
      details_approvedDeferredPercX100_i
      lastimeshare {
        details_timeShareX100_i
      }
      details_deferredPercX100_i
      details_state_s
      role {
        ... on Role {
          type
          docId
          details_state_s
          details_title_s
          details_description_s
          details_annualUsdSalary_a
          details_minDeferredX100_i
          details_minTimeShareX100_i
        }
      }
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Assignbadge {
      ballot_expiration_t
      details_state_s
      details_title_s
      details_description_s
      details_periodCount_i
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      start {
        details_startTime_t
      }
      dao {
        details_daoName_n
      }
      badge {
        ... on Badge {
          type
          docId
          details_state_s
          details_title_s
          details_description_s
          details_icon_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
        }
      }
      details_startPeriod_i
      details_assignee_n
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Role {
      ballot_expiration_t
      details_title_s
      details_description_s
      details_annualUsdSalary_a
      details_minDeferredX100_i
      details_fulltimeCapacityX100_i
      details_state_s
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      details_minTimeShareX100_i
      details_owner_n
      dao {
        details_daoName_n
      }
    }
    ... on Badge {
      ballot_expiration_t
      details_title_s
      details_description_s
      details_pegCoefficientX10000_i
      details_voiceCoefficientX10000_i
      details_rewardCoefficientX10000_i
      details_icon_s
      details_state_s
      details_maxCycles_i
      details_maxPeriodCount_i
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      details_purpose_s
      system_proposer_n
      assignment {
        details_assignee_n
        dao {
          details_daoName_n
        }
      }
      dao {
        details_daoName_n
      }
      cmntsect {
        docId
        comment {
          id: docId
          author: comment_author_n
          content: comment_content_s
          createdDate
          deletedStatus: comment_deleted_i
          reactions: reaction {
            reactionlnkrAggregate {
              count
            }
            reactionlnkr {
              author: details_member_n
            }
          }
          commentAggregate {
            count
          }
        }
      }
    }
    ... on Suspend {
      details_description_s
      details_title_s
      ballot_expiration_t
      details_originalDocument_i
      details_state_s
      details_ballotQuorum_i
      details_ballotSupply_a
      details_ballotAlignment_i
      dao {
        details_daoName_n
      }
      suspend {
        ... on Role {
          ballot_expiration_t
          details_title_s
          details_description_s
          details_annualUsdSalary_a
          details_minDeferredX100_i
          details_state_s
        }
        ... on Badge {
          ballot_expiration_t
          details_title_s
          details_description_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
          details_icon_s
          details_state_s
          details_maxCycles_i
          details_ballotQuorum_i
          details_ballotSupply_a
        }
        ... on Assignbadge {
          details_description_s
          details_title_s
          ballot_expiration_t
          details_state_s
          details_periodCount_i
          badge {
            details_pegCoefficientX10000_i
            details_voiceCoefficientX10000_i
            details_rewardCoefficientX10000_i
          }
          details_startPeriod_i
          details_ballotQuorum_i
          details_ballotSupply_a
          details_assignee_n
        }
        ... on Assignment {
          ballot_expiration_t
          details_title_s
          details_description_s
          details_assignee_n
          details_periodCount_i
          start {
            details_startTime_t
          }
          claimed {
            docId
          }
          details_pegSalaryPerPeriod_a
          details_rewardSalaryPerPeriod_a
          details_voiceSalaryPerPeriod_a
          details_timeShareX100_i
          lastimeshare {
            details_timeShareX100_i
          }
          details_deferredPercX100_i
          details_state_s
          role {
            ... on Role {
              details_title_s
              details_annualUsdSalary_a
              details_minDeferredX100_i
            }
          }
          details_ballotQuorum_i
          details_ballotSupply_a
        }
      }
    }
    ... on Votable {
      votetally {
        ... on VoteTally {
          pass_votePower_a
          fail_votePower_a
          abstain_votePower_a
        }
      }
      voteAggregate {
        count
      }
      pass: voteAggregate(filter: {vote_vote_s: {regexp: "/.*pass*./"}}) {
        count
      }
      abstain: voteAggregate(filter: {vote_vote_s: {regexp: "/.*abstain*./"}}) {
        count
      }
      fail: voteAggregate(filter: {vote_vote_s: {regexp: "/.*fail*./"}}) {
        count
      }
      vote(first: $first, offset: $offset, order: {desc: createdDate}) {
        vote_date_t
        vote_voter_n
        vote_vote_s
        vote_votePower_a
      }
    }
  }
}
    `;

/**
 * __useProposalDetailQuery__
 *
 * To use a Smart Query within a Vue component, call `useProposalDetailQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     proposalDetail: useProposalDetailQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProposalDetailQuery = createSmartQueryOptionsFunction<
  ProposalDetailQuery,
  ProposalDetailQueryVariables,
  ApolloError
>(ProposalDetailDocument);

export const ProposalsSubsDocument = gql`
    subscription proposalsSubs($docId: String!, $user: String, $first: Int) {
  queryDao(filter: {docId: {eq: $docId}}) {
    details_daoName_n
    docId
    proposal(first: $first, offset: 0, order: {desc: createdDate}) {
      docId
      __typename
      ... on Payout {
        ballot_expiration_t
        creator
        createdDate
        details_title_s
        details_description_s
        details_pegAmount_a
        details_rewardAmount_a
        details_voiceAmount_a
        details_voiceAmount_a
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_owner_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignment {
        creator
        claimed {
          docId
        }
        ballot_expiration_t
        details_title_s
        details_description_s
        details_assignee_n
        details_periodCount_i
        start {
          details_startTime_t
        }
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        details_timeShareX100_i
        lastimeshare {
          details_timeShareX100_i
        }
        details_deferredPercX100_i
        details_state_s
        role {
          ... on Role {
            details_title_s
            details_annualUsdSalary_a
            details_minDeferredX100_i
          }
        }
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignbadge {
        details_title_s
        details_description_s
        details_state_s
        details_badge_i
        creator
        createdDate
        ballot_expiration_t
        start {
          details_startTime_t
        }
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Role {
        details_title_s
        ballot_expiration_t
        details_annualUsdSalary_a
        details_title_s
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Badge {
        details_description_s
        details_title_s
        ballot_expiration_t
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        system_proposer_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Suspend {
        details_description_s
        details_title_s
        ballot_expiration_t
        details_state_s
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
      }
      ... on Edit {
        creator
        details_ballotTitle_s
        details_ballotDescription_s
        ballot_expiration_t
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
        original {
          __typename
          ... on Assignbadge {
            details_title_s
            details_description_s
            start {
              details_startTime_t
            }
            badge {
              details_title_s
            }
          }
          ... on Assignment {
            details_title_s
            details_description_s
            claimed {
              docId
            }
            start {
              details_startTime_t
            }
            details_pegSalaryPerPeriod_a
            details_rewardSalaryPerPeriod_a
            details_voiceSalaryPerPeriod_a
            role {
              ... on Role {
                details_title_s
                details_annualUsdSalary_a
                details_minDeferredX100_i
              }
            }
          }
        }
      }
      ... on Votable {
        pass: voteAggregate(filter: {vote_vote_s: {regexp: "/.*pass*./"}}) {
          count
        }
        abstain: voteAggregate(filter: {vote_vote_s: {regexp: "/.*abstain*./"}}) {
          count
        }
        fail: voteAggregate(filter: {vote_vote_s: {regexp: "/.*fail*./"}}) {
          count
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
          }
        }
        vote(filter: {vote_voter_n: {eq: $user}}) {
          ... on Vote {
            vote_date_t
            vote_voter_n
            vote_vote_s
            vote_votePower_a
          }
        }
      }
    }
  }
}
    `;

/**
 * __useProposalsSubsSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useProposalsSubsSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       proposalsSubs: useProposalsSubsSubscription({
 *         variables: {
 *           docId: // value for 'docId'
 *           user: // value for 'user'
 *           first: // value for 'first'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useProposalsSubsSubscription = createSmartSubscriptionOptionsFunction<
  ProposalsSubsSubscription,
  ProposalsSubsSubscriptionVariables,
  ApolloError
>(ProposalsSubsDocument);

export const ProposalsActiveVoteDocument = gql`
    query proposalsActiveVote($docId: String!, $user: String, $first: Int!, $offset: Int!) {
  queryDao(filter: {docId: {eq: $docId}}) {
    details_daoName_n
    docId
    proposal(first: $first, offset: $offset, order: {desc: createdDate}) {
      docId
      __typename
      ... on Payout {
        ballot_expiration_t
        creator
        createdDate
        details_title_s
        details_description_s
        details_pegAmount_a
        details_rewardAmount_a
        details_voiceAmount_a
        details_voiceAmount_a
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_owner_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignment {
        creator
        claimed {
          docId
        }
        ballot_expiration_t
        details_title_s
        details_description_s
        details_assignee_n
        details_periodCount_i
        start {
          details_startTime_t
        }
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        details_timeShareX100_i
        lastimeshare {
          details_timeShareX100_i
        }
        details_deferredPercX100_i
        details_state_s
        role {
          ... on Role {
            details_title_s
            details_annualUsdSalary_a
            details_minDeferredX100_i
          }
        }
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignbadge {
        details_title_s
        details_description_s
        details_state_s
        details_badge_i
        creator
        createdDate
        ballot_expiration_t
        start {
          details_startTime_t
        }
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Role {
        details_title_s
        ballot_expiration_t
        details_annualUsdSalary_a
        details_title_s
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Badge {
        details_description_s
        details_title_s
        ballot_expiration_t
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        system_proposer_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Suspend {
        details_description_s
        details_title_s
        ballot_expiration_t
        details_state_s
        creator
        createdDate
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
      }
      ... on Edit {
        creator
        details_ballotTitle_s
        details_ballotDescription_s
        ballot_expiration_t
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
        original {
          __typename
          ... on Assignbadge {
            details_title_s
            details_description_s
            start {
              details_startTime_t
            }
            badge {
              details_title_s
            }
          }
          ... on Assignment {
            details_title_s
            details_description_s
            claimed {
              docId
            }
            start {
              details_startTime_t
            }
            details_pegSalaryPerPeriod_a
            details_rewardSalaryPerPeriod_a
            details_voiceSalaryPerPeriod_a
            role {
              ... on Role {
                details_title_s
                details_annualUsdSalary_a
                details_minDeferredX100_i
              }
            }
          }
        }
      }
      ... on Votable {
        pass: voteAggregate(filter: {vote_vote_s: {regexp: "/.*pass*./"}}) {
          count
        }
        abstain: voteAggregate(filter: {vote_vote_s: {regexp: "/.*abstain*./"}}) {
          count
        }
        fail: voteAggregate(filter: {vote_vote_s: {regexp: "/.*fail*./"}}) {
          count
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
          }
        }
        vote(filter: {vote_voter_n: {eq: $user}}) {
          ... on Vote {
            vote_date_t
            vote_voter_n
            vote_vote_s
            vote_votePower_a
          }
        }
      }
    }
  }
}
    `;

/**
 * __useProposalsActiveVoteQuery__
 *
 * To use a Smart Query within a Vue component, call `useProposalsActiveVoteQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     proposalsActiveVote: useProposalsActiveVoteQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *         user: // value for 'user'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProposalsActiveVoteQuery = createSmartQueryOptionsFunction<
  ProposalsActiveVoteQuery,
  ProposalsActiveVoteQueryVariables,
  ApolloError
>(ProposalsActiveVoteDocument);

export const ProposalsActiveDocument = gql`
    query proposalsActive($name: String!, $first: Int!, $offset: Int!) {
  queryDao(filter: {details_daoName_n: {eq: $name}}) {
    details_daoName_n
    docId
    proposal(first: $first, offset: $offset, order: {desc: createdDate}) {
      docId
      ... on Role {
        details_title_s
        ballot_expiration_t
        details_title_s
        creator
        createdDate
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
      }
      ... on Payout {
        details_description_s
        details_title_s
        ballot_expiration_t
        creator
        createdDate
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
      }
      ... on Badge {
        details_description_s
        details_title_s
        ballot_expiration_t
        creator
        createdDate
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
      }
    }
  }
}
    `;

/**
 * __useProposalsActiveQuery__
 *
 * To use a Smart Query within a Vue component, call `useProposalsActiveQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     proposalsActive: useProposalsActiveQuery({
 *       variables: {
 *         name: // value for 'name'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProposalsActiveQuery = createSmartQueryOptionsFunction<
  ProposalsActiveQuery,
  ProposalsActiveQueryVariables,
  ApolloError
>(ProposalsActiveDocument);

export const ProposalsCountDocument = gql`
    query proposalsCount($docId: String!) {
  queryDao(filter: {docId: {eq: $docId}}) {
    docId
    proposalAggregate {
      count
    }
    votableAggregate {
      count
    }
    stagingpropAggregate {
      count
    }
  }
}
    `;

/**
 * __useProposalsCountQuery__
 *
 * To use a Smart Query within a Vue component, call `useProposalsCountQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     proposalsCount: useProposalsCountQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useProposalsCountQuery = createSmartQueryOptionsFunction<
  ProposalsCountQuery,
  ProposalsCountQueryVariables,
  ApolloError
>(ProposalsCountDocument);

export const HistoryProposalsDocument = gql`
    query historyProposals($docId: String!, $first: Int!, $offset: Int!) {
  queryDao(filter: {docId: {eq: $docId}}) {
    details_daoName_n
    docId
    votable(first: $first, offset: $offset, order: {desc: createdDate}) {
      docId
      type
      ... on Circle {
        details_dao_i
        details_state_s
        details_title_s
        details_description_s
        ballot_expiration_t
        creator
        createdDate
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Payout {
        details_dao_i
        details_state_s
        details_title_s
        details_description_s
        details_url_s
        details_usdAmount_a
        details_deferredPercX100_i
        details_pegAmount_a
        details_rewardAmount_a
        details_voiceAmount_a
        ballot_expiration_t
        creator
        createdDate
        details_owner_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignment {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        start {
          details_startTime_t
        }
        claimed {
          docId
        }
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        role {
          ... on Role {
            type
            docId
            details_state_s
            details_title_s
            details_description_s
            details_annualUsdSalary_a
            details_minDeferredX100_i
            details_minTimeShareX100_i
          }
        }
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignbadge {
        details_description_s
        details_title_s
        ballot_expiration_t
        details_state_s
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        badge {
          details_icon_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
        }
        details_startPeriod_i
        details_assignee_n
        createdDate
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Role {
        ballot_expiration_t
        details_title_s
        details_description_s
        details_annualUsdSalary_a
        details_minDeferredX100_i
        details_state_s
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_minTimeShareX100_i
        details_owner_n
        createdDate
        creator
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Badge {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_pegCoefficientX10000_i
        details_voiceCoefficientX10000_i
        details_rewardCoefficientX10000_i
        details_icon_s
        details_state_s
        details_maxCycles_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
        system_proposer_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Edit {
        details_dao_i
        details_state_s
        creator
        details_ballotTitle_s
        details_ballotDescription_s
        ballot_expiration_t
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        createdDate
        original {
          __typename
          ... on Assignbadge {
            details_title_s
            details_description_s
            start {
              details_startTime_t
            }
            badge {
              details_title_s
            }
          }
          ... on Assignment {
            details_title_s
            details_description_s
            claimed {
              docId
            }
            start {
              details_startTime_t
            }
            details_pegSalaryPerPeriod_a
            details_rewardSalaryPerPeriod_a
            details_voiceSalaryPerPeriod_a
            role {
              ... on Role {
                details_title_s
                details_annualUsdSalary_a
                details_minDeferredX100_i
              }
            }
          }
        }
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
    }
  }
}
    `;

/**
 * __useHistoryProposalsQuery__
 *
 * To use a Smart Query within a Vue component, call `useHistoryProposalsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     historyProposals: useHistoryProposalsQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useHistoryProposalsQuery = createSmartQueryOptionsFunction<
  HistoryProposalsQuery,
  HistoryProposalsQueryVariables,
  ApolloError
>(HistoryProposalsDocument);

export const StageProposalsSubsDocument = gql`
    subscription stageProposalsSubs($docId: String!, $first: Int) {
  queryDao(filter: {docId: {eq: $docId}}) {
    details_daoName_n
    docId
    stagingprop(first: $first, offset: 0, order: {desc: createdDate}) {
      docId
      type
      ... on Payout {
        details_dao_i
        details_state_s
        details_title_s
        details_description_s
        details_url_s
        details_usdAmount_a
        details_deferredPercX100_i
        details_pegAmount_a
        details_rewardAmount_a
        details_voiceAmount_a
        ballot_expiration_t
        creator
        createdDate
        details_owner_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignment {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        start {
          details_startTime_t
        }
        claimed {
          docId
        }
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        role {
          ... on Role {
            type
            docId
            details_state_s
            details_title_s
            details_description_s
            details_annualUsdSalary_a
            details_minDeferredX100_i
            details_minTimeShareX100_i
          }
        }
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignbadge {
        details_description_s
        details_title_s
        ballot_expiration_t
        details_state_s
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        badge {
          details_icon_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
        }
        details_startPeriod_i
        details_assignee_n
        createdDate
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Role {
        ballot_expiration_t
        details_title_s
        details_description_s
        details_annualUsdSalary_a
        details_minDeferredX100_i
        details_state_s
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_minTimeShareX100_i
        details_owner_n
        createdDate
        creator
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Badge {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_pegCoefficientX10000_i
        details_voiceCoefficientX10000_i
        details_rewardCoefficientX10000_i
        details_icon_s
        details_state_s
        details_maxCycles_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
        system_proposer_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Edit {
        details_dao_i
        details_state_s
        creator
        details_ballotTitle_s
        details_ballotDescription_s
        ballot_expiration_t
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        createdDate
        original {
          __typename
          ... on Assignbadge {
            details_title_s
            details_description_s
            start {
              details_startTime_t
            }
            badge {
              details_title_s
            }
          }
          ... on Assignment {
            details_title_s
            details_description_s
            claimed {
              docId
            }
            start {
              details_startTime_t
            }
            details_pegSalaryPerPeriod_a
            details_rewardSalaryPerPeriod_a
            details_voiceSalaryPerPeriod_a
            role {
              ... on Role {
                details_title_s
                details_annualUsdSalary_a
                details_minDeferredX100_i
              }
            }
          }
        }
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
    }
  }
}
    `;

/**
 * __useStageProposalsSubsSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useStageProposalsSubsSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       stageProposalsSubs: useStageProposalsSubsSubscription({
 *         variables: {
 *           docId: // value for 'docId'
 *           first: // value for 'first'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useStageProposalsSubsSubscription = createSmartSubscriptionOptionsFunction<
  StageProposalsSubsSubscription,
  StageProposalsSubsSubscriptionVariables,
  ApolloError
>(StageProposalsSubsDocument);

export const StageProposalsDocument = gql`
    query stageProposals($docId: String!, $first: Int!, $offset: Int!) {
  queryDao(filter: {docId: {eq: $docId}}) {
    details_daoName_n
    docId
    stagingprop(first: $first, offset: $offset, order: {desc: createdDate}) {
      docId
      type
      ... on Payout {
        details_dao_i
        details_state_s
        details_title_s
        details_description_s
        details_url_s
        details_usdAmount_a
        details_deferredPercX100_i
        details_pegAmount_a
        details_rewardAmount_a
        details_voiceAmount_a
        ballot_expiration_t
        creator
        createdDate
        details_owner_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignment {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        start {
          details_startTime_t
        }
        claimed {
          docId
        }
        details_pegSalaryPerPeriod_a
        details_rewardSalaryPerPeriod_a
        details_voiceSalaryPerPeriod_a
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        role {
          ... on Role {
            type
            docId
            details_state_s
            details_title_s
            details_description_s
            details_annualUsdSalary_a
            details_minDeferredX100_i
            details_minTimeShareX100_i
          }
        }
        details_assignee_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Assignbadge {
        details_description_s
        details_title_s
        ballot_expiration_t
        details_state_s
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        badge {
          details_icon_s
          details_pegCoefficientX10000_i
          details_voiceCoefficientX10000_i
          details_rewardCoefficientX10000_i
        }
        details_startPeriod_i
        details_assignee_n
        createdDate
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Role {
        ballot_expiration_t
        details_title_s
        details_description_s
        details_annualUsdSalary_a
        details_minDeferredX100_i
        details_state_s
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_minTimeShareX100_i
        details_owner_n
        createdDate
        creator
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Badge {
        creator
        createdDate
        ballot_expiration_t
        details_title_s
        details_description_s
        details_pegCoefficientX10000_i
        details_voiceCoefficientX10000_i
        details_rewardCoefficientX10000_i
        details_icon_s
        details_state_s
        details_maxCycles_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        vote {
          vote_voter_n
          vote_vote_s
        }
        votetally {
          ... on VoteTally {
            pass_votePower_a
            fail_votePower_a
            abstain_votePower_a
            creator
            createdDate
          }
        }
        system_proposer_n
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
      ... on Edit {
        details_dao_i
        details_state_s
        creator
        details_ballotTitle_s
        details_ballotDescription_s
        ballot_expiration_t
        details_assignee_n
        details_periodCount_i
        details_ballotQuorum_i
        details_ballotSupply_a
        details_ballotAlignment_i
        details_timeShareX100_i
        details_deferredPercX100_i
        details_state_s
        createdDate
        original {
          __typename
          ... on Assignbadge {
            details_title_s
            details_description_s
            start {
              details_startTime_t
            }
            badge {
              details_title_s
            }
          }
          ... on Assignment {
            details_title_s
            details_description_s
            claimed {
              docId
            }
            start {
              details_startTime_t
            }
            details_pegSalaryPerPeriod_a
            details_rewardSalaryPerPeriod_a
            details_voiceSalaryPerPeriod_a
            role {
              ... on Role {
                details_title_s
                details_annualUsdSalary_a
                details_minDeferredX100_i
              }
            }
          }
        }
        cmntsect {
          docId
          comment {
            id: docId
            deletedStatus: comment_deleted_i
          }
        }
      }
    }
  }
}
    `;

/**
 * __useStageProposalsQuery__
 *
 * To use a Smart Query within a Vue component, call `useStageProposalsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     stageProposals: useStageProposalsQuery({
 *       variables: {
 *         docId: // value for 'docId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useStageProposalsQuery = createSmartQueryOptionsFunction<
  StageProposalsQuery,
  StageProposalsQueryVariables,
  ApolloError
>(StageProposalsDocument);

export const QuestStartDocument = gql`
    query questStart($daoId: String!) {
  getDao(docId: $daoId) {
    docId
    queststartAggregate {
      count
    }
  }
}
    `;

/**
 * __useQuestStartQuery__
 *
 * To use a Smart Query within a Vue component, call `useQuestStartQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     questStart: useQuestStartQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useQuestStartQuery = createSmartQueryOptionsFunction<
  QuestStartQuery,
  QuestStartQueryVariables,
  ApolloError
>(QuestStartDocument);

export const BadgesTestDocument = gql`
    query badgesTest {
  queryDao {
    docId
  }
}
    `;

/**
 * __useBadgesTestQuery__
 *
 * To use a Smart Query within a Vue component, call `useBadgesTestQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     badgesTest: useBadgesTestQuery({
 *       variables: {},
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useBadgesTestQuery = createSmartQueryOptionsFunction<
  BadgesTestQuery,
  BadgesTestQueryVariables,
  ApolloError
>(BadgesTestDocument);

export const DaoRedemptionsDocument = gql`
    query daoRedemptions($daoId: String!, $first: Int, $offset: Int, $filter: RedemptionFilter, $order: RedemptionOrder) {
  getDao(docId: $daoId) {
    docId
    treasury {
      redemption(first: $first, offset: $offset, filter: $filter, order: $order) {
        docId
        details_requestor_n
        details_amountRequested_a
        createdDate
        details_amountPaid_a
        paidby {
          createdDate
          details_creator_n
          details_notes_s
        }
      }
      redemptionAggregate {
        count
      }
      treasurerAggregate {
        count
      }
      treasurer {
        details_member_n
      }
    }
  }
}
    `;

/**
 * __useDaoRedemptionsQuery__
 *
 * To use a Smart Query within a Vue component, call `useDaoRedemptionsQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     daoRedemptions: useDaoRedemptionsQuery({
 *       variables: {
 *         daoId: // value for 'daoId'
 *         first: // value for 'first'
 *         offset: // value for 'offset'
 *         filter: // value for 'filter'
 *         order: // value for 'order'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useDaoRedemptionsQuery = createSmartQueryOptionsFunction<
  DaoRedemptionsQuery,
  DaoRedemptionsQueryVariables,
  ApolloError
>(DaoRedemptionsDocument);

export const UpvoteElectionSubsDocument = gql`
    subscription upvoteElectionSubs($daoName: String!) {
  getDao(details_daoName_n: $daoName) {
    voterAggregate {
      count
    }
    delegateAggregate {
      count
    }
    ongoingelct {
      currentround {
        docId
        details_type_s
        details_endDate_t
        details_passingCount_i
        votedAggregate {
          ... on MemberAggregateResult {
            count
          }
        }
        candidate {
          ... on Member {
            details_member_n
            docId
            voteAggregate {
              count
            }
          }
        }
        candidateAggregate {
          count
        }
        nextround {
          details_type_s
        }
      }
    }
    upcomingelct {
      details_startDate_t
    }
    previouselct(order: {desc: createdDate}, first: 1) {
      round(order: {asc: docId}) {
        votedAggregate {
          ... on MemberAggregateResult {
            count
          }
        }
        winner {
          ... on Member {
            details_member_n
          }
        }
        details_type_s
        candidate {
          ... on Member {
            voteAggregate {
              count
            }
          }
        }
      }
    }
  }
}
    `;

/**
 * __useUpvoteElectionSubsSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useUpvoteElectionSubsSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       upvoteElectionSubs: useUpvoteElectionSubsSubscription({
 *         variables: {
 *           daoName: // value for 'daoName'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useUpvoteElectionSubsSubscription = createSmartSubscriptionOptionsFunction<
  UpvoteElectionSubsSubscription,
  UpvoteElectionSubsSubscriptionVariables,
  ApolloError
>(UpvoteElectionSubsDocument);

export const UpvoteElectionDocument = gql`
    query upvoteElection($daoName: String!) {
  getDao(details_daoName_n: $daoName) {
    voterAggregate {
      count
    }
    delegateAggregate {
      count
    }
    ongoingelct {
      currentround {
        docId
        details_type_s
        details_endDate_t
        details_passingCount_i
        votedAggregate {
          ... on MemberAggregateResult {
            count
          }
        }
        candidate {
          ... on Member {
            details_member_n
            docId
            voteAggregate {
              count
            }
          }
        }
        candidateAggregate {
          count
        }
        nextround {
          details_type_s
        }
      }
    }
    upcomingelct {
      details_startDate_t
    }
    previouselct(order: {desc: createdDate}, first: 1) {
      round(order: {asc: docId}) {
        votedAggregate {
          ... on MemberAggregateResult {
            count
          }
        }
        winner {
          ... on Member {
            details_member_n
          }
        }
        details_type_s
        candidate {
          ... on Member {
            voteAggregate {
              count
            }
          }
        }
      }
    }
  }
}
    `;

/**
 * __useUpvoteElectionQuery__
 *
 * To use a Smart Query within a Vue component, call `useUpvoteElectionQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     upvoteElection: useUpvoteElectionQuery({
 *       variables: {
 *         daoName: // value for 'daoName'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useUpvoteElectionQuery = createSmartQueryOptionsFunction<
  UpvoteElectionQuery,
  UpvoteElectionQueryVariables,
  ApolloError
>(UpvoteElectionDocument);

export const VotedUsersSubsDocument = gql`
    subscription votedUsersSubs($account: String!, $roundId: Int64!) {
  getMember(details_member_n: $account) {
    docId
    elctngroup(filter: {details_roundId_i: {eq: $roundId}}) {
      vote {
        details_member_n
        docId
      }
    }
  }
}
    `;

/**
 * __useVotedUsersSubsSubscription__
 *
 * To use a Smart Subscription within a Vue component, call `useVotedUsersSubsSubscription` as the value for a `$subscribe` key
 * in the component's `apollo` config, passing any options required for the subscription.
 *
 * @param options that will be passed into the subscription, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.subscribe
 *
 * @example
 * {
 *   apollo: {
 *     $subscribe: {
 *       votedUsersSubs: useVotedUsersSubsSubscription({
 *         variables: {
 *           account: // value for 'account'
 *           roundId: // value for 'roundId'
 *         },
 *         loadingKey: 'loading',
 *         fetchPolicy: 'no-cache',
 *       }),
 *     },
 *   }
 * }
 */
export const useVotedUsersSubsSubscription = createSmartSubscriptionOptionsFunction<
  VotedUsersSubsSubscription,
  VotedUsersSubsSubscriptionVariables,
  ApolloError
>(VotedUsersSubsDocument);

export const VotedUsersDocument = gql`
    query votedUsers($account: String!, $roundId: Int64!) {
  getMember(details_member_n: $account) {
    docId
    elctngroup(filter: {details_roundId_i: {eq: $roundId}}) {
      vote {
        details_member_n
        docId
      }
    }
  }
}
    `;

/**
 * __useVotedUsersQuery__
 *
 * To use a Smart Query within a Vue component, call `useVotedUsersQuery` as the value for a query key
 * in the component's `apollo` config, passing any options required for the query.
 *
 * @param options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/core/ApolloClient/#ApolloClient.query
 *
 * @example
 * {
 *   apollo: {
 *     votedUsers: useVotedUsersQuery({
 *       variables: {
 *         account: // value for 'account'
 *         roundId: // value for 'roundId'
 *       },
 *       loadingKey: 'loading',
 *       fetchPolicy: 'no-cache',
 *     }),
 *   }
 * }
 */
export const useVotedUsersQuery = createSmartQueryOptionsFunction<
  VotedUsersQuery,
  VotedUsersQueryVariables,
  ApolloError
>(VotedUsersDocument);
